{"version":3,"sources":["konflux.js","base.js","kontext.js"],"names":["window","register","undefined","Konflux","init","timestamp","kx","time","empty","p","types","array","a","length","object","o","boolean","b","number","n","string","s","test","t","type","isType","variable","full","check","substr","parseInt","this","counter","Date","now","getTime","elapsed","day","hour","minute","delta","Math","abs","days","floor","hours","minutes","seconds","ms","zero","unique","toString","combine","i","obj","arg","arguments","Array","prototype","slice","call","shift","explicit","name","result","exec","constructor","version","info","match","split","prop","deprecate","message","callback","scope","shown","method","console","apply","module","konflux","KonfluxURL","parse","location","query","replace","c","url","current","href","isLocal","domain","KonfluxTiming","KonfluxTimingDelay","handler","timeout","reference","cancel","clearTimeout","timer","start","setTimeout","raf","browser","feature","ready","delay","remove","stack","create","timing","KonfluxArray","contains","v","diff","ret","push","range","r","shuffle","j","x","random","cast","mixed","len","e","KonfluxString","hashCode","l","charCodeAt","hash","pad","ceil","ord","chr","String","fromCharCode","join","PAD_LEFT","PAD_BOTH","checksum","uuid","chunk","input","size","end","source","output","unshift","min","substring","ascii","convert","PAD_RIGHT","TRIM_LEFT","TRIM_BOTH","TRIM_RIGHT","CHUNK_START","CHUNK_END","user","A","C","E","I","D","N","O","U","Y","ss","beta","u","y","trim","dir","f","chars","indexOf","charAt","reverse","ucFirst","toUpperCase","escapeRegExp","delimeter","pattern","RegExp","concat","KonfluxPoint","point","to","snap","grid","round","clone","move","equal","scale","factor","subtract","add","distance","sqrt","pow","angle","atan2","max","iso","PI","mid","KonfluxIterator","collection","property","iterator","relay","keys","member","Object","defineProperty","get","append","implement","evaluate","one","context","list","cursor","index","item","each","value","key","filter","find","map","previous","prev","next","thisArg","KonfluxDOM","appendTo","target","document","querySelector","appendChild","ancestor","element","parentNode","createStructure","struct","nodeName","tag","createElement","setAttribute","createTextNode","stackOrderIndex","node","zIndex","style","opacity","parseFloat","position","display","floatValue","blockType","dom","STACK_NEGATIVE","STACK_POSITIONED","STACK_POSITIVE","STACK_GLOBAL","elementReference","hidden","prepare","root","documentElement","head","body","nodeType","getAttribute","STACK_BLOCK","STACK_FLOAT","STACK_INLINE","select","selector","parent","querySelectorAll","stackLevel","KonfluxBrowser","detectIE","getElementsByTagName","innerHTML","Function","hasFeature","support","getFeature","uc","vendor","vendorPrefix","navigator","search","toLowerCase","regex","script","prefix","pop","ieVersion","touch","ie","supports","fullscreen","ALLOW_KEYBOARD_INPUT","KonfluxEvent","KonfluxEventDelegate","unifier","namespace","targetKey","strip","ns","capture","separator","store","delegate","evt","event","srcElement","stopPropagation","cancelBubble","wildcard","delegation","finds","handleReadyState","run","removeEventListener","readyState","detachEvent","queue","getEventName","getEventType","getEventProperty","unifyEvent","eventType","family","mouse","pageX","clientX","scrollLeft","pageY","clientY","scrollTop","prepareTargetIterator","targets","prepareEventIterator","events","listen","setting","attach","detach","addEventListener","attachEvent","configurable","enumerable","set","returnValue","dispatch","option","Support","detail","trigger","cancelable","createEvent","initCustomEvent","initEvent","createEventObject","dispatchEvent","fireEvent","hasTouch","live","KonfluxStyle","scriptProperty","cssProperty","hasProperty","getLocalStylesheets","all","styleSheets","getStylesheet","includeOffsite","title","findStylesheet","createStylesheet","before","firstChild","insertBefore","getStyleProperties","declaration","part","rules","normalizeValue","normalizeSelector"," ","\"",",",".",0,"addClass","classes","className","removeClass","classList","splice","toggleClass","inline","q","skipNode","id","hasAttribute","sheet","editable","ownerNode","load","isEditable","stylesheet","pr","rule","addRule","insertRule","cssRules","selectorText","cssText","pseudo","getComputedStyle","defaultView","getPropertyValue","currentStyle","specificity","KonfluxStorage","combineFragments","data","fragment","fragmentPattern","storage","getItem","createFragments","maxSize","setItem","dropFragments","getAll","JSON","stringify","removeItem","ls","localStorage","flush","decodeURI","encodeURIComponent","KonfluxObserver","KonfluxObservation","handle","observation","timeStamp","timeDelta","unsubscribe","disable","stop","active","ensureSubscriptionStack","subscription","out","keep","ref","observer","subscribe","notify","KonfluxNumber","even","odd","between","format","precision","multiplier","isFinite","KonfluxAjax","KonfluxFormData","formdata","serialize","getHeader","header","X-Konflux","getXMLHTTPRequest","xhr","XMLHttpRequest","__kxref","request","config","path","prepareData","async","headers","onload","xhrComplete","progress","upload","error","abort","open","setRequestHeader","send","status","state","stat","success","process","complete","statusText","contentType","getResponseHeader","responseText","formData","FormData","File","Blob","FileList","requestType","ob","ajax","post","put","del","purge","blog","response","endpoint","attributes","preventDefault","history","pushState","forEach","kontext","bind","scroll","anchor","blogs","pathname","replaceState","click","onpopstate","extension","model","template","on","invoke","MutationObserver","webkitMutationObserver","characterData","characterDataOldValue","monitor","nodeValue","observe","newValue","createTreeWalker","NodeFilter","SHOW_TEXT","nextNode","splitText","original","placeholders","d","noquote","trailer","escape","lastIndexOf","__instance","_","rAF","requestAnimationFrame","greedy","attribute","k","w","writable","h","g","emission","m","getOwnPropertyDescriptor","defaults","off","bindings","removeAttribute","Error","cloneNode","nodes","$index","$item","$parent","lastChild","removeChild","multiple","label","options","Option","selected","selectedIndex"],"mappings":"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","file":"combined.min.js","sourcesContent":["/*\n *       __    Konflux (version 1.0.0-alpha.59 - 2015-10-02) - a javascript helper library\n *      /\\_\\\n *   /\\/ / /   Copyright 2012-2015, Konfirm (Rogier Spieker)\n *   \\  / /    Released under the MIT license\n *    \\/_/     More information: http://konfirm.net/konflux\n *\n *  Contributors:\n *  - Daan van Ham <daan@vanham.io>\n *  - Paul den Otter <pauldenotter@gmail.com>\n */\n\n;(function(window, register, undefined) {\n\t'use strict';\n\n\t/*\n\t *  BUILD INFO\n\t *  ---------------------------------------------------------------------\n\t *    date: Fri Oct 02 2015 10:26:02 GMT+0200 (CEST)\n\t *    time: 27.74ms\n\t *    size: 135.72KB\n\t *  ---------------------------------------------------------------------\n\t *   files: included 14 files\n\t *     +2.02KB src/core/url\n\t *     +3.35KB src/core/timing\n\t *     +3.81KB src/core/array\n\t *     +9.57KB src/core/string [uses: array]\n\t *     +5.63KB src/core/point\n\t *    +10.22KB src/core/iterator [uses: array]\n\t *     +9.38KB src/core/dom [uses: iterator, style]\n\t *     +7.45KB src/core/browser [uses: string]\n\t *    +34.34KB src/core/event [uses: browser, dom, iterator, point, string, style]\n\t *    +18.22KB src/core/style [uses: array, browser, event, string, url]\n\t *     +5.73KB src/core/storage [uses: string]\n\t *     +6.62KB src/core/observer [uses: array]\n\t *     +2.89KB src/core/number [uses: string]\n\t *     +8.97KB src/core/ajax [uses: event, observer, string, url]\n\t */\n\n\tvar version = '1.0.0-alpha.59 - 2015-10-02 - 5203429';\n\n\t/**\n\t *  The Konflux object\n\t *  @name    Konflux\n\t *  @type    constructor function\n\t *  @access  internal\n\t *  @return  object   konflux\n\t *  @note    konflux is available both as (window.)konflux and (window.)kx\n\t */\n\tfunction Konflux() {\n\t\t/*jshint validthis: true*/\n\t\tvar kx = this,\n\t\t\tcounter = 0,\n\t\t\ttimestamp;\n\n\t\tfunction init() {\n\t\t\ttimestamp = kx.time();\n\t\t}\n\n\t\t/**\n\t\t *  Verify whether given argument is empty\n\t\t *  @name    empty\n\t\t *  @type    function\n\t\t *  @access  internal\n\t\t *  @param   mixed variable to check\n\t\t *  @return  bool  empty\n\t\t *  @note    The function follows PHP's empty function; null, undefined, 0, '', '0', {}, [] and false are all considered empty\n\t\t */\n\t\tfunction empty(p) {\n\t\t\tvar types = {\n\t\t\t\t\tarray:   function(a) {\n\t\t\t\t\t\treturn a.length > 0;\n\t\t\t\t\t},\n\n\t\t\t\t\tobject:  function(o) {\n\t\t\t\t\t\tfor (o in o) {\n\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t},\n\n\t\t\t\t\tboolean: function(b) {\n\t\t\t\t\t\treturn b;\n\t\t\t\t\t},\n\n\t\t\t\t\tnumber:  function(n) {\n\t\t\t\t\t\treturn n !== 0;\n\t\t\t\t\t},\n\n\t\t\t\t\tstring:  function(s) {\n\t\t\t\t\t\treturn !/^0?$/.test(s);\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tt = kx.type(p);\n\n\t\t\tif (isType('function', types[t]) && types[t](p)) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\treturn true;\n\t\t}\n\n\t\t/**\n\t\t *  Test the type of given variable\n\t\t *  @name    isType\n\t\t *  @type    method\n\t\t *  @access  internal\n\t\t *  @param   string type\n\t\t *  @param   mixed  variable\n\t\t *  @return  bool   is type\n\t\t */\n\t\tfunction isType(type, variable) {\n\t\t\tvar full = kx.type(variable),\n\t\t\t\tcheck = type && type.length ? full.substr(0, type.length) : null;\n\n\t\t\tif (check !== type) {\n\t\t\t\tswitch (full) {\n\t\t\t\t\tcase 'object':\n\t\t\t\t\t\tcheck = kx.type(variable, true).substr(0, type.length);\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'number':\n\t\t\t\t\t\tcheck = (parseInt(variable, 10) === variable ? 'integer' : 'float').substr(0, type.length);\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn check === type;\n\t\t}\n\n\t\t/**\n\t\t *  Obtain the milliseconds since the UNIX Epoch (Jan 1, 1970 00:00:00.000)\n\t\t *  @name    time\n\t\t *  @type    method\n\t\t *  @access  public\n\t\t *  @return  int milliseconds\n\t\t */\n\t\tkx.time = function() {\n\t\t\treturn Date.now ? Date.now() : (new Date()).getTime();\n\t\t};\n\n\t\t/**\n\t\t *  Obtain the elapsed time since Konflux started (roughly), using the format: [Nd] hh:mm:ss.ms\n\t\t *  @name    elapsed\n\t\t *  @type    method\n\t\t *  @access  public\n\t\t *  @return  string formatted time\n\t\t */\n\t\tkx.elapsed = function() {\n\t\t\tvar day = 86400000,\n\t\t\t\thour = 3600000,\n\t\t\t\tminute = 60000,\n\t\t\t\tdelta = Math.abs((new Date()).getTime() - timestamp),\n\t\t\t\tdays = Math.floor(delta / day),\n\t\t\t\thours = Math.floor((delta -= days * day) / hour),\n\t\t\t\tminutes = Math.floor((delta -= hours * hour) / minute),\n\t\t\t\tseconds = Math.floor((delta -= minutes * minute) / 1000),\n\t\t\t\tms = Math.floor(delta -= seconds * 1000),\n\t\t\t\tzero = '000';\n\n\t\t\treturn (days > 0 ? days + 'd ' : '') +\n\t\t\t\t\t(zero + hours).substr(-2) + ':' +\n\t\t\t\t\t(zero + minutes).substr(-2) + ':' +\n\t\t\t\t\t(zero + seconds).substr(-2) + '.' +\n\t\t\t\t\t(zero + ms).substr(-3);\n\t\t};\n\n\t\t/**\n\t\t *  Obtain an unique key, the key is guaranteed to be unique within the browser runtime\n\t\t *  @name    unique\n\t\t *  @type    method\n\t\t *  @access  public\n\t\t *  @return  string key\n\t\t */\n\t\tkx.unique = function() {\n\t\t\treturn (++counter + kx.time() % 86400000).toString(36);\n\t\t};\n\n\t\t/**\n\t\t *  Shorthand method for creating a combined version of several objects\n\t\t *  @name    combine\n\t\t *  @type    method\n\t\t *  @access  public\n\t\t *  @param   object variable1\n\t\t *  @param   object ...\n\t\t *  @param   object variableN\n\t\t *  @return  function constructor\n\t\t */\n\t\tkx.combine = function() {\n\t\t\tvar obj = {},\n\t\t\t\targ = arguments,\n\t\t\t\ti, p;\n\n\t\t\tfor (i = 0; i < arg.length; ++i) {\n\t\t\t\tif (kx.isType('object', arg[i])) {\n\t\t\t\t\tfor (p in arg[i]) {\n\t\t\t\t\t\tobj[p] = p in obj && kx.isType('object', obj[p]) ? kx.combine(arg[i][p], obj[p]) : arg[i][p];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn obj;\n\t\t};\n\n\t\t/**\n\t\t *  Verify whether given arguments are empty\n\t\t *  @name    empty\n\t\t *  @type    method\n\t\t *  @access  public\n\t\t *  @param   mixed variable1\n\t\t *  @param   mixed ...\n\t\t *  @param   mixed variableN\n\t\t *  @return  bool  variables are empty\n\t\t */\n\t\tkx.empty = function() {\n\t\t\tvar arg = Array.prototype.slice.call(arguments);\n\n\t\t\twhile (arg.length) {\n\t\t\t\tif (!empty(arg.shift())) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn true;\n\t\t};\n\n\t\t/**\n\t\t *  Determine the type of given variable\n\t\t *  @name    type\n\t\t *  @type    method\n\t\t *  @access  public\n\t\t *  @param   mixed  variable\n\t\t *  @param   bool   explicit types [optional, default undefined - simple types]\n\t\t *  @return  string type\n\t\t */\n\t\tkx.type = function(variable, explicit) {\n\t\t\tvar result = variable instanceof Array ? 'array' : (variable === null ? 'null' : typeof variable),\n\t\t\t\tname;\n\n\t\t\tif (explicit && result === 'object') {\n\t\t\t\tname = /(?:function\\s+)?(.{1,})\\(/i.exec(variable.constructor.toString());\n\n\t\t\t\tif (name && name.length > 1 && name[1] !== 'Object') {\n\t\t\t\t\treturn name[1];\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn result;\n\t\t};\n\n\t\t/**\n\t\t *  Test the type of given variable\n\t\t *  @name    isType\n\t\t *  @type    method\n\t\t *  @access  public\n\t\t *  @param   string type\n\t\t *  @param   mixed  variable\n\t\t *  @return  bool   is type\n\t\t */\n\t\tkx.isType = isType;\n\n\t\t/**\n\t\t *  Obtain the konflux version info\n\t\t *  @name   version\n\t\t *  @type   method\n\t\t *  @access public\n\t\t *  @param  bool   info [optional, default false - no build information]\n\t\t *  @return string version (object info if bool info is true)\n\t\t */\n\t\tkx.version = function(info) {\n\t\t\tvar match = version.split(' - '),\n\t\t\t\tprop = ['version', 'date', 'revision', 'type'],\n\t\t\t\tresult = {};\n\n\t\t\twhile (prop.length && match.length) {\n\t\t\t\tresult[prop.shift()] = match.shift();\n\t\t\t}\n\n\t\t\treturn info ? result : result.version;\n\t\t};\n\n\t\t/**\n\t\t *  Provide feedback about deprecated features, once (per function, per browser view)\n\t\t *  @name    deprecate\n\t\t *  @type    function\n\t\t *  @access  public\n\t\t *  @param   string   message\n\t\t *  @param   function callback\n\t\t *  @param   object   scope [optional, default undefined - no scope]\n\t\t *  @return  void\n\t\t */\n\t\tkx.deprecate = function(message, callback, scope) {\n\t\t\tvar shown;\n\n\t\t\treturn function() {\n\t\t\t\tvar method = ['info', 'warn', 'log'],\n\t\t\t\t\ti;\n\n\t\t\t\tif (!shown) {\n\t\t\t\t\tshown = true;\n\n\t\t\t\t\tfor (i = 0 ; i < method.length; ++i) {\n\t\t\t\t\t\t/*global console*/\n\t\t\t\t\t\tif (kx.isType('function', console[method[i]])) {\n\t\t\t\t\t\t\tconsole[method[i]](kx.elapsed() + ' DEPRECATED: ' + message);\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn callback.apply(scope || null, arguments);\n\t\t\t};\n\t\t};\n\n\t\t/**\n\t\t *  Register a module or function onto the kx object\n\t\t *  @name    register\n\t\t *  @access  public\n\t\t *  @param   string  name\n\t\t *  @param   mixed   value [one of: object (module) or function]\n\t\t *  @return  mixed   old value\n\t\t */\n\t\tkx.register = function(name, module) {\n\t\t\tvar result = false;\n\n\t\t\tif (kx.isType('function', module) || kx.isType('object', module)) {\n\t\t\t\tresult = name in kx ? kx[name] : null;\n\t\t\t\tkx[name] = module;\n\t\t\t}\n\n\t\t\treturn result;\n\t\t};\n\n\t\tinit();\n\t}\n\n\t(function(konflux) {\n\t\t//  register object instances\n\t\tif (register) {\n\t\t\tregister(konflux);\n\t\t}\n\n\t\t//  make konflux available on the global (window) scope both as 'konflux' and 'kx'\n\t\twindow.konflux = window.kx = konflux;\n\t})(new Konflux());\n\n})(window, function(konflux) {\n\t//BEGIN INCLUDE: core/url\n\t/**\n\t *  Handle URL's/URI's\n\t *  @module  url\n\t *  @note    available as konflux.url / kx.url\n\t */\n\tfunction KonfluxURL() {\n\t\t/*jshint validthis: true*/\n\t\tvar url = this;\n\n\t\t/**\n\t\t *  Parse given URL into its URI components\n\t\t *  @name    parse\n\t\t *  @type    function\n\t\t *  @access  internal\n\t\t *  @param   string location\n\t\t *  @return  object result\n\t\t */\n\t\tfunction parse(location) {\n\t\t\t//  URL regex + key processing based on the work of Derek Watson's jsUri (http://code.google.com/p/jsuri/)\n\t\t\tvar match = /^(?:([^:\\/?#]+):)?(?:\\/\\/((?:(([^:@]*)(?::([^:@]*))?)?@)?([^:\\/?#]*)(?::(\\d*))?))?((((?:[^?#\\/]*\\/)*)([^?#]*))(?:\\?([^#]*))?(?:#(.*))?)/.exec(location),\n\t\t\t\tprop = ['source', 'protocol', 'domain', 'userInfo', 'user', 'password', 'host', 'port', 'relative', 'path', 'directory', 'file', 'query', 'anchor'],\n\t\t\t\tresult = {};\n\t\t\twhile (prop.length) {\n\t\t\t\tresult[prop.shift()] = match.length ? match.shift() : '';\n\t\t\t}\n\n\t\t\tif (result.query) {\n\t\t\t\tresult.query.replace(/(?:^|&)([^&=]*)=?([^&]*)/g, function(a, b, c) {\n\t\t\t\t\tif (konflux.isType('object', result.query)) {\n\t\t\t\t\t\tresult.query = {};\n\t\t\t\t\t}\n\n\t\t\t\t\tif (b) {\n\t\t\t\t\t\tresult.query[b] = c;\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\n\t\t\treturn result;\n\t\t}\n\n\t\t/**\n\t\t *  The parsed url for the URL of the current page\n\t\t *  @name    current\n\t\t *  @type    object\n\t\t *  @access  public\n\t\t */\n\t\turl.current = !konflux.isType('undefined', window.location.href) ? parse(window.location.href) : false;\n\n\t\t/**\n\t\t *  Parse given URL into its URI components\n\t\t *  @name    parse\n\t\t *  @type    method\n\t\t *  @access  public\n\t\t *  @param   string url\n\t\t *  @return  object result\n\t\t */\n\t\turl.parse   = parse;\n\n\t\t/**\n\t\t *  Determine whether given URL is on the same domain as the page itself\n\t\t *  @name    isLocal\n\t\t *  @type    method\n\t\t *  @access  public\n\t\t *  @param   string location\n\t\t *  @return  bool   local\n\t\t */\n\t\turl.isLocal = function(location) {\n\t\t\treturn url.current.domain === url.parse(location).domain;\n\t\t};\n\t}\n\n\tkonflux.register('url', new KonfluxURL());\n\n\t//END INCLUDE: core/url [726.34µs, 1.89KB]\n\t//BEGIN INCLUDE: core/timing\n\t/**\n\t *  Timing utils\n\t *  @module  timing\n\t *  @note    available as konflux.timing / kx.timing\n\t */\n\tfunction KonfluxTiming() {\n\t\t/*jshint validthis: true*/\n\t\tvar timing = this,\n\t\t\tstack = {};\n\n\t\t/*global KonfluxTimingDelay*/\n\n\t\t//BEGIN INCLUDE: timing/delay\n\t\t/**\n\t\t *  Delay object, instances of this are be provided for all KonfluxTimings\n\t\t *  @name    KonfluxTimingDelay\n\t\t *  @type    class\n\t\t *  @access  internal\n\t\t *  @param   function handle\n\t\t *  @param   Number   timeout\n\t\t *  @param   string   reference\n\t\t *  @return  KonfluxTimingDelay  object\n\t\t */\n\t\tfunction KonfluxTimingDelay(handler, timeout, reference) {\n\t\t\t//\n\t\t\t'use strict';\n\n\t\t\t/*jshint validthis: true*/\n\t\t\tvar delay = this,\n\t\t\t\ttimer, raf;\n\n\t\t\t/**\n\t\t\t *  Cancel the timer\n\t\t\t *  @name    cancel\n\t\t\t *  @type    function\n\t\t\t *  @access  internal\n\t\t\t *  @return  void\n\t\t\t */\n\t\t\tfunction cancel() {\n\t\t\t\tclearTimeout(timer);\n\t\t\t}\n\n\t\t\t/**\n\t\t\t *  Start the timer\n\t\t\t *  @name    start\n\t\t\t *  @type    function\n\t\t\t *  @access  internal\n\t\t\t *  @return  void\n\t\t\t */\n\t\t\tfunction start() {\n\t\t\t\ttimer = setTimeout(function() {\n\t\t\t\t\tif (!raf) {\n\t\t\t\t\t\traf = konflux.browser.feature('requestAnimationFrame') || function(ready) {\n\t\t\t\t\t\t\tsetTimeout(ready, 16);\n\t\t\t\t\t\t};\n\t\t\t\t\t}\n\n\t\t\t\t\traf(cancel);\n\n\t\t\t\t\thandler.call();\n\t\t\t\t}, timeout);\n\t\t\t}\n\n\t\t\t//  expose\n\t\t\t/**\n\t\t\t *  Cancel the timer\n\t\t\t *  @name    cancel\n\t\t\t *  @type    method\n\t\t\t *  @access  public\n\t\t\t *  @return  void\n\t\t\t */\n\t\t\tdelay.cancel = cancel;\n\n\t\t\t/**\n\t\t\t *  Obtain the associated reference\n\t\t\t *  @name    reference\n\t\t\t *  @type    method\n\t\t\t *  @access  public\n\t\t\t *  @return  string reference\n\t\t\t */\n\t\t\tdelay.reference = function() {\n\t\t\t\treturn reference;\n\t\t\t};\n\n\t\t\tstart();\n\t\t}\n\n\t\t//END INCLUDE: timing/delay [733.16µs, 1.29KB]\n\t\t/**\n\t\t *  Remove timer object by their reference\n\t\t *  @name    remove\n\t\t *  @type    function\n\t\t *  @access  internal\n\t\t *  @param   string reference\n\t\t *  @return  void\n\t\t */\n\t\tfunction remove(reference) {\n\t\t\tif (typeof stack[reference] !== 'undefined') {\n\t\t\t\t//  cancel the stack reference\n\t\t\t\tstack[reference].cancel();\n\n\t\t\t\t//  delete it\n\t\t\t\tdelete stack[reference];\n\t\t\t}\n\t\t}\n\n\t\t/**\n\t\t *  Create a timer object to call given handler after given delay and store it with given reference\n\t\t *  @name    create\n\t\t *  @type    function\n\t\t *  @access  internal\n\t\t *  @param   function handle\n\t\t *  @param   Number   delay\n\t\t *  @param   string   reference\n\t\t *  @return  KonfluxTimingDelay  object\n\t\t */\n\t\tfunction create(handler, delay, reference) {\n\t\t\tif (reference) {\n\t\t\t\tremove(reference);\n\t\t\t}\n\t\t\telse {\n\t\t\t\treference = handler.toString() || konflux.unique();\n\t\t\t}\n\n\t\t\tstack[reference] = new KonfluxTimingDelay(handler, delay || 0, reference);\n\n\t\t\treturn stack[reference];\n\t\t}\n\n\t\t//  expose\n\t\t/**\n\t\t *  Remove timer object by their reference\n\t\t *  @name    remove\n\t\t *  @type    method\n\t\t *  @access  public\n\t\t *  @param   string reference\n\t\t *  @return  void\n\t\t */\n\t\ttiming.remove = remove;\n\n\t\t/**\n\t\t *  Create a timer object to call given handler after given delay and store it with given reference\n\t\t *  @name    create\n\t\t *  @type    method\n\t\t *  @access  public\n\t\t *  @param   function handle\n\t\t *  @param   Number   delay\n\t\t *  @param   string   reference\n\t\t *  @return  KonfluxTimingDelay  object\n\t\t */\n\t\ttiming.create = create;\n\t}\n\n\tkonflux.register('timing', new KonfluxTiming());\n\n\t//END INCLUDE: core/timing [1.93ms, 3.14KB]\n\t//BEGIN INCLUDE: core/array\n\t/**\n\t *  Array utils\n\t *  @module  array\n\t *  @note    available as konflux.array / kx.array\n\t */\n\tfunction KonfluxArray() {\n\t\t/*jshint validthis: true*/\n\t\tvar array = this;\n\n\t\t/**\n\t\t *  Determine whether given value (needle) is in the array (haystack)\n\t\t *  @name    contains\n\t\t *  @type    function\n\t\t *  @access  internal\n\t\t *  @param   array haystack\n\t\t *  @param   mixed needle\n\t\t *  @return  int   position\n\t\t */\n\t\tfunction contains(a, v) {\n\t\t\tfor (var i = 0; i < a.length; ++i) {\n\t\t\t\tif (a[i] === v) {\n\t\t\t\t\treturn i;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn false;\n\t\t}\n\n\t\t/**\n\t\t *  Return the difference between two arrays\n\t\t *  @name    diff\n\t\t *  @type    function\n\t\t *  @access  internal\n\t\t *  @param   array array1\n\t\t *  @param   array array2\n\t\t *  @return  array difference\n\t\t */\n\t\tfunction diff(a, b) {\n\t\t\tvar ret = [],\n\t\t\t\ti;\n\n\t\t\tfor (i = 0; i < a.length; ++i) {\n\t\t\t\tif (contains(b, a[i]) === false) {\n\t\t\t\t\tret.push(a[i]);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn ret;\n\t\t}\n\n\t\t/**\n\t\t *  Create an array with values between (including) given start and end\n\t\t *  @name    range\n\t\t *  @type    function\n\t\t *  @access  internal\n\t\t *  @param   number start\n\t\t *  @param   number end\n\t\t *  @return  array range\n\t\t */\n\t\tfunction range(a, b) {\n\t\t\tvar r = [];\n\t\t\tb -= a;\n\t\t\twhile (r.length <= b) {\n\t\t\t\tr.push(a + r.length);\n\t\t\t}\n\n\t\t\treturn r;\n\t\t}\n\n\t\t/**\n\t\t *  Shuffle given array\n\t\t *  @name    shuffle\n\t\t *  @type    function\n\t\t *  @access  internal\n\t\t *  @param   array source\n\t\t *  @return  array shuffled\n\t\t */\n\t\tfunction shuffle(a) {\n\t\t\tfor (var j, x, i = a.length; i; j = (Math.random() * i) | 0, x = a[--i], a[i] = a[j], a[j] = x);\n\t\t\treturn a;\n\t\t}\n\n\t\t/**\n\t\t *  Cast given value to an array\n\t\t *  @name    cast\n\t\t *  @type    function\n\t\t *  @access  internal\n\t\t *  @param   mixed source\n\t\t *  @return  array source (bool false if the cast could not be done)\n\t\t *  @note    any scalar value will become an array holding that value (e.g. 'my string' becomes ['my string'])\n\t\t */\n\t\tfunction cast(mixed) {\n\t\t\tvar result = false,\n\t\t\t\tlen, i;\n\n\t\t\tswitch (konflux.type(mixed)) {\n\t\t\t\tcase 'object':\n\t\t\t\t\tif (!('length' in mixed)) {\n\t\t\t\t\t\tresult = [mixed];\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tresult = Array.prototype.slice.call(mixed);\n\t\t\t\t\t}\n\t\t\t\t\tcatch (e) {\n\t\t\t\t\t\tfor (result = [], len = mixed.length, i = 0; i < len; ++i) {\n\t\t\t\t\t\t\tresult.push(mixed[i]);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'null':\n\t\t\t\tcase 'undefined':\n\t\t\t\t\tresult = [];\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\t\t\t\t\tresult = [mixed];\n\t\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\treturn result;\n\t\t}\n\n\t\t//  expose\n\t\t/**\n\t\t *  Does the array contain given value\n\t\t *  @name    contains\n\t\t *  @type    method\n\t\t *  @access  public\n\t\t *  @param   array   haystack\n\t\t *  @param   mixed   needle\n\t\t *  @return  boolean contains\n\t\t */\n\t\tarray.contains = contains;\n\n\t\t/**\n\t\t *  Return the difference between two arrays\n\t\t *  @name    diff\n\t\t *  @type    method\n\t\t *  @access  public\n\t\t *  @param   array array1\n\t\t *  @param   array array2\n\t\t *  @return  array difference\n\t\t */\n\t\tarray.diff = diff;\n\n\t\t/**\n\t\t *  Create an array with values between (including) given start and end\n\t\t *  @name    range\n\t\t *  @type    method\n\t\t *  @access  public\n\t\t *  @param   int start\n\t\t *  @param   int end\n\t\t *  @return  array range\n\t\t */\n\t\tarray.range = range;\n\n\t\t/**\n\t\t *  Shuffle given array\n\t\t *  @name    shuffle\n\t\t *  @type    method\n\t\t *  @access  public\n\t\t *  @param   array source\n\t\t *  @return  array shuffled\n\t\t */\n\t\tarray.shuffle = shuffle;\n\n\t\t/**\n\t\t *  Cast given value to an array\n\t\t *  @name    cast\n\t\t *  @type    method\n\t\t *  @access  public\n\t\t *  @param   mixed source\n\t\t *  @return  array source (bool false if the cast could not be done)\n\t\t *  @note    any scalar value will become an array holding that value (e.g. 'my string' becomes ['my string'])\n\t\t */\n\t\tarray.cast = cast;\n\t}\n\n\tkonflux.register('array', new KonfluxArray());\n\n\t//END INCLUDE: core/array [1.03ms, 3.58KB]\n\t//BEGIN INCLUDE: core/string\n\t/**\n\t *  String utils\n\t *  @module  string\n\t *  @note    available as konflux.string / kx.string\n\t */\n\tfunction KonfluxString() {\n\t\t/*jshint validthis: true*/\n\t\tvar string = this;\n\n\t\t//  'constants'\n\t\tstring.PAD_LEFT    = 1;\n\t\tstring.PAD_BOTH    = 2;\n\t\tstring.PAD_RIGHT   = 3;\n\t\tstring.TRIM_LEFT   = 1;\n\t\tstring.TRIM_BOTH   = 2;\n\t\tstring.TRIM_RIGHT  = 3;\n\t\tstring.CHUNK_START = 1;\n\t\tstring.CHUNK_END   = 2;\n\n\t\t/**\n\t\t *  Javascript port of Java's String.hashCode()\n\t\t *  (Based on http://werxltd.com/wp/2010/05/13/javascript-implementation-of-javas-string-hashcode-method/)\n\t\t *  @name    hashCode\n\t\t *  @type    function\n\t\t *  @access  internal\n\t\t *  @param   string input\n\t\t *  @return  number hash (32bit integer)\n\t\t */\n\t\tfunction hashCode(s) {\n\t\t\tfor (var r = 0, i = 0, l = s.length; i < l; ++i) {\n\t\t\t\tr  = (r = r * 31 + s.charCodeAt(i)) & r;\n\t\t\t}\n\n\t\t\treturn r;\n\t\t}\n\n\t\t/**\n\t\t *  Create a hash from a string\n\t\t *  @name    hash\n\t\t *  @type    function\n\t\t *  @access  internal\n\t\t *  @param   string source\n\t\t *  @return  string hash\n\t\t */\n\t\tfunction hash(s) {\n\t\t\tvar p = 16,\n\t\t\t\tpad = ('abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ' + s).substr(-(Math.ceil((s.length || 1) / p) * p)),\n\t\t\t\tr = 0;\n\n\t\t\twhile (pad.length) {\n\t\t\t\tr  += hashCode(pad.substr(0, p));\n\t\t\t\tpad = pad.substr(p);\n\t\t\t}\n\n\t\t\treturn Math.abs(r).toString(36);\n\t\t}\n\n\t\t/**\n\t\t *  Return the ASCII value of given character\n\t\t *  @name    ord\n\t\t *  @type    function\n\t\t *  @access  internal\n\t\t *  @param   string character\n\t\t *  @return  number character code\n\t\t */\n\t\tfunction ord(s) {\n\t\t\treturn s.charCodeAt(0);\n\t\t}\n\n\t\t/**\n\t\t *  Return the character corresponding with given ASCII value\n\t\t *  @name    chr\n\t\t *  @type    function\n\t\t *  @access  internal\n\t\t *  @param   number character code\n\t\t *  @return  string character\n\t\t */\n\t\tfunction chr(n) {\n\t\t\treturn String.fromCharCode(n);\n\t\t}\n\n\t\t/**\n\t\t *  Pad a string\n\t\t *  @name    pad\n\t\t *  @type    function\n\t\t *  @access  internal\n\t\t *  @param   string to pad\n\t\t *  @param   number length\n\t\t *  @param   string pad string\n\t\t *  @param   int pad type\n\t\t *  @return  padded string\n\t\t */\n\t\tfunction pad(s, n, c, t) {\n\t\t\tc = new Array(n + 1).join(c);\n\n\t\t\treturn (n -= s.length) > 0 && (t = t === string.PAD_LEFT ? n : (t === string.PAD_BOTH ? Math.ceil(n / 2) : 0)) !== false ? (t > 0 ? c.substr(0, t) : '') + s + c.substr(0, n - t) : s;\n\t\t}\n\n\t\t/**\n\t\t *  Generate a checksum for given string\n\t\t *  @name    checksum\n\t\t *  @type    function\n\t\t *  @access  internal\n\t\t *  @param   string source\n\t\t *  @return  string checksum\n\t\t */\n\t\tfunction checksum(s) {\n\t\t\tfor (var n = s.length, r = 0; n > 0; --n) {\n\t\t\t\tr += n * ord(s[n]);\n\t\t\t}\n\n\t\t\treturn Math.abs((r + '' + s.length) | 0).toString(36);\n\t\t}\n\n\t\t/**\n\t\t *  Generate a UUID\n\t\t *  @name    uuid\n\t\t *  @type    function\n\t\t *  @access  internal\n\t\t *  @return  string uuid\n\t\t */\n\t\tfunction uuid() {\n\t\t\treturn 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function(c) {\n\t\t\t\tvar r = Math.random() * 16 | 0;\n\n\t\t\t\treturn (c === 'x' ? r : (r & 0x3 | 0x8)).toString(16);\n\t\t\t});\n\t\t}\n\n\t\t/**\n\t\t *  Split given string into chunks of given size\n\t\t *  @name    chunk\n\t\t *  @type    function\n\t\t *  @access  internal\n\t\t *  @param   string input\n\t\t *  @param   int    size [optional, default 1]\n\t\t *  @param   bool   end [optional, default false - start from the beginning of the input string]\n\t\t *  @return  array chunks\n\t\t *  @note    the last chunk is provided as is, there for it can be of a length less than given size\n\t\t */\n\t\tfunction chunk(input, size, end) {\n\t\t\tvar source = '' + input,\n\t\t\t\toutput = [],\n\t\t\t\ti;\n\n\t\t\tif (!size || size === 1) {\n\t\t\t\toutput = source.split('');\n\t\t\t}\n\t\t\telse if (input.length < size) {\n\t\t\t\toutput.push(input);\n\t\t\t}\n\t\t\telse if (end) {\n\t\t\t\tfor (i = source.length; i > 0; output.unshift(source.substr(i -= Math.min(source.length, size))), source) {\n\t\t\t\t\tsource = source.substring(0, i);\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\twhile (source.length > 0, output.push(source.substring(0, size)), source) {\n\t\t\t\t\tsource = source.substr(size);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn output;\n\t\t}\n\n\t\t/**\n\t\t *  Convert characters based on their ASCII value\n\t\t *  @name    ascii\n\t\t *  @type    function\n\t\t *  @access  internal\n\t\t *  @param   string input\n\t\t *  @param   object conversion (syntax: {replacement: [ASCII value, ASCII value, ...]})\n\t\t *  @return  string converted\n\t\t */\n\t\tfunction ascii(input, convert) {\n\t\t\tvar result = [],\n\t\t\t\ti, p, s;\n\n\t\t\tfor (i = 0; i < input.length; ++i) {\n\t\t\t\ts = input.substr(i, 1);\n\t\t\t\tfor (p in convert) {\n\t\t\t\t\tif (konflux.array.contains(convert[p], s.charCodeAt(0)) !== false) {\n\t\t\t\t\t\ts = p;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tresult.push(s);\n\t\t\t}\n\n\t\t\treturn result.join('');\n\t\t}\n\n\t\t/**\n\t\t *  Convert characters based on their ASCII value\n\t\t *  @name    ascii\n\t\t *  @type    method\n\t\t *  @access  public\n\t\t *  @param   string input\n\t\t *  @param   object conversion (syntax: {replacement: [ASCII value, ASCII value, ...]} - optional, default high ASCII characters)\n\t\t *  @return  string converted\n\t\t */\n\t\tstring.ascii = function(input, user) {\n\t\t\treturn ascii(input, user || {\n\t\t\t\tA: [192, 193, 194, 195, 196, 197],\n\t\t\t\tC: [199],\n\t\t\t\tE: [200, 201, 202, 203],\n\t\t\t\tI: [204, 205, 206, 207],\n\t\t\t\tD: [208],\n\t\t\t\tN: [209],\n\t\t\t\tO: [210, 211, 212, 213, 214, 216],\n\t\t\t\tU: [217, 218, 219, 220],\n\t\t\t\tY: [221],\n\t\t\t\tss: [223],\n\t\t\t\ta: [224, 225, 226, 227, 228, 229],\n\t\t\t\tbeta: [946],\n\t\t\t\tc: [231],\n\t\t\t\te: [232, 233, 234, 235],\n\t\t\t\ti: [236, 237, 238, 239],\n\t\t\t\tn: [241],\n\t\t\t\to: [240, 242, 243, 244, 245, 246],\n\t\t\t\tu: [249, 250, 251, 252],\n\t\t\t\ty: [253]\n\t\t\t});\n\t\t};\n\n\t\t/**\n\t\t *  Trim string from leading/trailing pattern (whitespace by default)\n\t\t *  @name    trim\n\t\t *  @type    method\n\t\t *  @access  public\n\t\t *  @param   string input\n\t\t *  @param   string character [default \\s, may be the contents of a regular expression pattern]\n\t\t *  @param   int    side [optional, One of: TRIM_BOTH (default), TRIM_LEFT, TRIM_RIGHT]\n\t\t *  @return  string trimmed\n\t\t *  @note    the side params are located in konflux.string (e.g. konflux.string.TRIM_LEFT)\n\t\t */\n\t\tstring.trim = function(input, chr, dir) {\n\t\t\tvar chars = chr || ' \\n\\r\\t\\f',\n\t\t\t\tf, t;\n\n\t\t\tfor (t = input.length; t > 0 && dir !== string.TRIM_LEFT && chars.indexOf(input.charAt(--t)) >= 0;);\n\t\t\tfor (f = 0; f < t && dir !== string.TRIM_RIGHT && chars.indexOf(input.charAt(f)) >= 0; ++f);\n\n\t\t\treturn input.substring(f, t + 1);\n\t\t};\n\n\t\t/**\n\t\t *  Reverse given string\n\t\t *  @name    reverse\n\t\t *  @type    method\n\t\t *  @access  public\n\t\t *  @param   string input\n\t\t *  @return  string reversed\n\t\t */\n\t\tstring.reverse = function(s) {\n\t\t\tfor (var n = s.length, r = ''; n > 0; --n) {\n\t\t\t\tr += s[n];\n\t\t\t}\n\n\t\t\treturn r;\n\t\t};\n\n\t\t/**\n\t\t *  Pad a string\n\t\t *  @name    pad\n\t\t *  @type    method\n\t\t *  @access  public\n\t\t *  @param   string to pad\n\t\t *  @param   number length\n\t\t *  @param   string pad string [optional, default ' ' - a space]\n\t\t *  @param   int type [optional, default PAD_RIGHT - add padding to the right. One of: PAD_LEFT, PAD_RIGHT (default), PAD_BOTH]\n\t\t *  @return  string padded\n\t\t *  @note    the type params are located in konflux.string (e.g. konflux.string.PAD_LEFT)\n\t\t */\n\t\tstring.pad = function(s, n, c, t) {\n\t\t\treturn pad(s, n, c || ' ', t || string.PAD_RIGHT);\n\t\t};\n\n\t\t/**\n\t\t *  Uppercase the first character of given string\n\t\t *  @name    ucFirst\n\t\t *  @type    method\n\t\t *  @access  public\n\t\t *  @param   string input\n\t\t *  @return  string uppercased first character\n\t\t */\n\t\tstring.ucFirst = function(input) {\n\t\t\treturn input.charAt(0).toUpperCase() + input.substr(1);\n\t\t};\n\n\t\t/**\n\t\t *  Create a hash from a string\n\t\t *  @name    hash\n\t\t *  @type    method\n\t\t *  @access  public\n\t\t *  @param   string input\n\t\t *  @return  string hash\n\t\t */\n\t\tstring.hash = hash;\n\n\t\t/**\n\t\t *  Generate a checksum for given string\n\t\t *  @name    checksum\n\t\t *  @type    method\n\t\t *  @access  public\n\t\t *  @param   string source\n\t\t *  @return  string checksum\n\t\t */\n\t\tstring.checksum = checksum;\n\n\t\t/**\n\t\t *  Generate a UUID\n\t\t *  @name    uuid\n\t\t *  @type    method\n\t\t *  @access  public\n\t\t *  @return  string uuid\n\t\t */\n\t\tstring.uuid = uuid;\n\n\t\t/**\n\t\t *  Return the ASCII value of given character\n\t\t *  @name    ord\n\t\t *  @type    method\n\t\t *  @access  public\n\t\t *  @param   string character\n\t\t *  @return  number character code\n\t\t */\n\t\tstring.ord = ord;\n\n\t\t/**\n\t\t *  Return the character corresponding with given ASCII value\n\t\t *  @name    chr\n\t\t *  @type    method\n\t\t *  @access  public\n\t\t *  @param   int    code\n\t\t *  @return  string character\n\t\t */\n\t\tstring.chr = chr;\n\n\t\t/**\n\t\t *  Divide the given input string into chunks of certain size\n\t\t *  @name    chunk\n\t\t *  @type    method\n\t\t *  @access  public\n\t\t *  @param   string input\n\t\t *  @param   int    size [optional, default 1]\n\t\t *  @param   int    direction [optional, default CHUNK_START - start the chunks from the start, one of: CHUNK_START, CHUNK_END]\n\t\t *  @return  array chunks\n\t\t *  @note    the last chunk is provided as is, there for it can be of a length less than given size\n\t\t */\n\t\tstring.chunk = function(input, size, start) {\n\t\t\treturn chunk(input, size || 1, start === string.CHUNK_END);\n\t\t};\n\n\t\t/**\n\t\t *  Prepare given input string for use in a regular expression\n\t\t *  @name    escapeRegExp\n\t\t *  @type    method\n\t\t *  @access  public\n\t\t *  @param   string input\n\t\t *  @param   string delimiter [optional, default null - no delimeter to consider]\n\t\t *  @return  string escaped\n\t\t */\n\t\tstring.escapeRegExp = function(input, delimeter) {\n\t\t\tvar chars = '.\\\\+*?[^]$(){}=!<>|:-'.split(''),\n\t\t\t\tpattern = new RegExp('[' + chars.concat(delimeter ? [delimeter] : []).join('\\\\') + ']', 'g');\n\n\t\t\treturn konflux.isType('string', input) ? input.replace(pattern, '\\\\$&') : '';\n\t\t};\n\t}\n\n\tkonflux.register('string', new KonfluxString());\n\n\t//END INCLUDE: core/string [1.83ms, 9.17KB]\n\t//BEGIN INCLUDE: core/point\n\t/**\n\t *  KonfluxPoint object, handling the (heavy) lifting of working with points\n\t *  @module  point\n\t *  @factory konflux.point\n\t *  @param   number x position\n\t *  @param   number y position\n\t *  @note    available as konflux.point / kx.point\n\t */\n\tfunction KonfluxPoint(x, y) {\n\t\t/*jshint validthis: true*/\n\t\tvar point = this;\n\n\t\tpoint.x = x || 0;\n\t\tpoint.y = y || 0;\n\n\t\t/**\n\t\t *  Move the point to a specific position\n\t\t *  @name    to\n\t\t *  @type    method\n\t\t *  @access  public\n\t\t *  @param   number x\n\t\t *  @param   number y\n\t\t *  @return  KonfluxPoint  point\n\t\t */\n\t\tpoint.to = function(x, y) {\n\t\t\tpoint.x = x;\n\t\t\tpoint.y = y;\n\n\t\t\treturn point;\n\t\t};\n\n\t\t/**\n\t\t *  Snap the point to a grid\n\t\t *  @name    snap\n\t\t *  @type    method\n\t\t *  @access  public\n\t\t *  @param   number grid [optional, default 1 - round the position x and y]\n\t\t *  @return  KonfluxPoint  point\n\t\t */\n\t\tpoint.snap = function(grid) {\n\t\t\tpoint.x = grid ? Math.round(point.x / grid) * grid : Math.round(point.x);\n\t\t\tpoint.y = grid ? Math.round(point.y / grid) * grid : Math.round(point.y);\n\n\t\t\treturn point;\n\t\t};\n\n\t\t/**\n\t\t *  Create a new point based on the current\n\t\t *  @name    clone\n\t\t *  @type    method\n\t\t *  @access  public\n\t\t *  @return  KonfluxPoint  point\n\t\t */\n\t\tpoint.clone = function() {\n\t\t\treturn new KonfluxPoint(point.x, point.y);\n\t\t};\n\n\t\t/**\n\t\t *  Move the point object by given x and y\n\t\t *  @name    move\n\t\t *  @type    method\n\t\t *  @access  public\n\t\t *  @param   number x\n\t\t *  @param   number y\n\t\t *  @return  KonfluxPoint  point\n\t\t */\n\t\tpoint.move = function(x, y) {\n\t\t\tpoint.x += x;\n\t\t\tpoint.y += y;\n\n\t\t\treturn point;\n\t\t};\n\n\t\t/**\n\t\t *  Is given point on the exact same position\n\t\t *  @name    equal\n\t\t *  @type    method\n\t\t *  @access  public\n\t\t *  @param   KonfluxPoint point\n\t\t *  @param   bool    round\n\t\t *  @return  bool    equal\n\t\t */\n\t\tpoint.equal = function(p, round) {\n\t\t\treturn round ? Math.round(point.x) === Math.round(p.x) && Math.round(point.y) === Math.round(p.y) : point.x === p.x && point.y === p.y;\n\t\t};\n\n\t\t/**\n\t\t *  Scale the points coordinates by given factor\n\t\t *  @name    scale\n\t\t *  @type    method\n\t\t *  @access  public\n\t\t *  @param   number factor\n\t\t *  @return  void\n\t\t */\n\t\tpoint.scale = function(factor) {\n\t\t\tpoint.x *= factor;\n\t\t\tpoint.y *= factor;\n\n\t\t\treturn point;\n\t\t};\n\n\t\t/**\n\t\t *  Subtract a point for the current point\n\t\t *  @name    subtract\n\t\t *  @type    method\n\t\t *  @access  public\n\t\t *  @param   object point\n\t\t *  @return  KonfluxPoint\n\t\t */\n\t\tpoint.subtract = function(p) {\n\t\t\treturn new KonfluxPoint(point.x - p.x, point.y - p.y);\n\t\t};\n\n\t\t/**\n\t\t *  Add a point to the current point\n\t\t *  @name    add\n\t\t *  @type    method\n\t\t *  @access  public\n\t\t *  @param   object point\n\t\t *  @return  KonfluxPoint\n\t\t */\n\t\tpoint.add = function(p) {\n\t\t\treturn new KonfluxPoint(point.x + p.x, point.y + p.y);\n\t\t};\n\n\t\t/**\n\t\t *  Get the distance between given and current point\n\t\t *  @name    distance\n\t\t *  @type    method\n\t\t *  @access  public\n\t\t *  @param   object point\n\t\t *  @return  number distance\n\t\t */\n\t\tpoint.distance = function(p) {\n\t\t\treturn Math.sqrt(Math.pow(Math.abs(point.x - p.x), 2) + Math.pow(Math.abs(point.y - p.y), 2));\n\t\t};\n\n\t\t/**\n\t\t *  Get the angle in radians between given and current point\n\t\t *  @name    angle\n\t\t *  @type    method\n\t\t *  @access  public\n\t\t *  @param   object point\n\t\t *  @return  number angle\n\t\t */\n\t\tpoint.angle = function(p) {\n\t\t\treturn Math.atan2(p.x - point.x, p.y - point.y);\n\t\t};\n\n\t\t/**\n\t\t *  Create a point with the maximum coordinates of both the current and given point\n\t\t *  @name    max\n\t\t *  @type    method\n\t\t *  @access  public\n\t\t *  @param   KonfluxPoint point1\n\t\t *  @param   KonfluxPoint ...\n\t\t *  @param   KonfluxPoint pointN\n\t\t *  @return  KonfluxPoint\n\t\t */\n\t\tpoint.max = function() {\n\t\t\tvar x = point.x,\n\t\t\t\ty = point.y,\n\t\t\t\ti;\n\n\t\t\tfor (i = 0; i < arguments.length; ++i) {\n\t\t\t\tx = Math.max(x, arguments[i].x);\n\t\t\t\ty = Math.max(y, arguments[i].y);\n\t\t\t}\n\n\t\t\treturn new KonfluxPoint(x, y);\n\t\t};\n\n\t\t/**\n\t\t *  Create a point with the minimum coordinates of both the current and given point\n\t\t *  @name    min\n\t\t *  @type    method\n\t\t *  @access  public\n\t\t *  @param   KonfluxPoint point1\n\t\t *  @param   KonfluxPoint ...\n\t\t *  @param   KonfluxPoint pointN\n\t\t *  @return  KonfluxPoint\n\t\t */\n\t\tpoint.min = function() {\n\t\t\tvar x = point.x,\n\t\t\t\ty = point.y,\n\t\t\t\ti;\n\n\t\t\tfor (i = 0; i < arguments.length; ++i) {\n\t\t\t\tx = Math.min(x, arguments[i].x);\n\t\t\t\ty = Math.min(y, arguments[i].y);\n\t\t\t}\n\n\t\t\treturn new KonfluxPoint(x, y);\n\t\t};\n\n\t\t/**\n\t\t *  Create a new point from the current mapped to isometric coordinates\n\t\t *  @name    iso\n\t\t *  @type    method\n\t\t *  @access  public\n\t\t *  @param   number angle [optional, default 30 degrees]\n\t\t *  @return  KonfluxPoint\n\t\t */\n\t\tpoint.iso = function(angle) {\n\t\t\tangle = (angle || 30) * Math.PI / 180;\n\n\t\t\treturn new KonfluxPoint(\n\t\t\t\tpoint.x - point.y,\n\t\t\t\t(point.x + point.y) * angle\n\t\t\t);\n\t\t};\n\n\t\t/**\n\t\t *  Create a new point between the current and given point\n\t\t *  @name    mid\n\t\t *  @type    method\n\t\t *  @access  public\n\t\t *  @param   KonfluxPoint p\n\t\t *  @return  KonfluxPoint mid\n\t\t */\n\t\tpoint.mid = function(p) {\n\t\t\treturn new KonfluxPoint(\n\t\t\t\t(point.x + p.x) * 0.5,\n\t\t\t\t(point.y + p.y) * 0.5\n\t\t\t);\n\t\t};\n\t}\n\n\t/**\n\t *  Create a KonfluxPoint instance\n\t *  @name   point\n\t *  @type   method\n\t *  @access public\n\t *  @param  number x position\n\t *  @param  number y position\n\t *  @return KonfluxPoint point\n\t *  @note   As of konflux version > 0.3.1 the points are created without the new keyword\n\t *          ('new konflux.point(X, Y)' can now be 'konflux.point(X, Y)')\n\t */\n\tkonflux.register('point', function(x, y) {\n\t\treturn new KonfluxPoint(x, y);\n\t});\n\n\t//END INCLUDE: core/point [794.50µs, 5.34KB]\n\t//BEGIN INCLUDE: core/iterator\n\t/**\n\t *  Iterator object, providing a uniform mechanism to traverse collections (Array, Object, DOMNodeList, etc)\n\t *  @module  iterator\n\t *  @factory konflux.iterator\n\t *  @param   mixed collection\n\t *  @note    available as konflux.iterator / kx.iterator\n\t */\n\tfunction KonfluxIterator(collection) {\n\t\t/*jshint validthis: true*/\n\t\tvar iterator = this,\n\t\t\tkeys, current;\n\n\t\t/**\n\t\t *  Initialize the iterator object\n\t\t *  @name    init\n\t\t *  @type    function\n\t\t *  @access  internal\n\t\t *  @return  void\n\t\t */\n\t\tfunction init() {\n\t\t\tvar p;\n\n\t\t\tcollection = collection || [];\n\n\t\t\tif (typeof collection !== 'object') {\n\t\t\t\tcollection = [collection];\n\t\t\t}\n\n\t\t\t//  create a magic property for the length\n\t\t\tif ('length' in collection) {\n\t\t\t\tproperty('length');\n\t\t\t}\n\n\t\t\t//  decorate the iterator with the various collection members\n\t\t\tfor (p in collection) {\n\t\t\t\tif (!(p in iterator)) {\n\t\t\t\t\titerator[p] = relay(p);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tkeys = iterator.keys();\n\t\t}\n\n\t\t/**\n\t\t *  Create relayed access to a collection member\n\t\t *  @name    relay\n\t\t *  @type    function\n\t\t *  @access  internal\n\t\t *  @param   string member name\n\t\t *  @return  function relay\n\t\t */\n\t\tfunction relay(member) {\n\t\t\tif (konflux.isType('function', collection[member])) {\n\t\t\t\treturn function() {\n\t\t\t\t\treturn collection[member].apply(collection, konflux.array.cast(arguments));\n\t\t\t\t};\n\t\t\t}\n\n\t\t\treturn collection[member];\n\t\t}\n\n\t\t/**\n\t\t *  Try to create a getter for the given property, copy the value if a getter is not possible\n\t\t *  @name    property\n\t\t *  @type    function\n\t\t *  @access  internal\n\t\t *  @param   string name\n\t\t *  @return  mixed  result (the property value if it was copied, KonfluxIterator otherwise)\n\t\t */\n\t\tfunction property(name) {\n\t\t\t//  Unfortunatly we have to fall back onto a try catch block, as the IE8 implementation does not\n\t\t\t//  accept defined properties on any object other than DOMElements\n\t\t\ttry {\n\t\t\t\treturn Object.defineProperty(iterator, name, {\n\t\t\t\t\tget: function() {\n\t\t\t\t\t\treturn collection[name];\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t\tcatch (e) {\n\t\t\t\treturn (iterator[name] = collection[name]);\n\t\t\t}\n\t\t}\n\n\t\t/**\n\t\t *  Expand the underlying collection with another\n\t\t *  @name    add\n\t\t *  @type    function\n\t\t *  @access  internal\n\t\t *  @param   mixed  append\n\t\t *  @return  void\n\t\t */\n\t\tfunction add(append) {\n\t\t\tvar length, i;\n\n\t\t\t//  for now we only support index based objects to handle expansion\n\t\t\tif (!('length' in collection)) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\t//  we enforce the underlying collection to become an array\n\t\t\tif (!(collection instanceof Array)) {\n\t\t\t\tcollection = konflux.array.cast(collection);\n\t\t\t}\n\n\t\t\t//  if we are trying to append a KonfluxIterator instance, we want the underlying collection\n\t\t\tif (append instanceof KonfluxIterator) {\n\t\t\t\tappend = append.collection();\n\t\t\t}\n\n\t\t\t//  and ensure it'll be an array\n\t\t\tif (!(append instanceof Array)) {\n\t\t\t\tappend = konflux.isType('object', append) ? [append] : konflux.array.cast(append);\n\t\t\t}\n\n\t\t\t//  if the appending variable holds an array, we concatenate it into the collection\n\t\t\tif (append instanceof Array) {\n\t\t\t\tlength     = collection.length;\n\t\t\t\tcollection = collection.concat(append);\n\t\t\t\tkeys       = iterator.keys();\n\n\t\t\t\tfor (i = length; i < collection.length; ++i) {\n\t\t\t\t\tproperty(i);\n\t\t\t\t}\n\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\treturn false;\n\t\t}\n\n\t\t/**\n\t\t *  Create a function which implements a specific signature (which occurs repeatedly)\n\t\t *  @name    implement\n\t\t *  @type    function\n\t\t *  @access  internal\n\t\t *  @param   string   name\n\t\t *  @param   function evaluation\n\t\t *  @param   bool     one [optional, default undefined (false-ish) - return a KonfluxIterator]\n\t\t *  @return  function implementation\n\t\t */\n\t\tfunction implement(name, evaluate, one) {\n\t\t\treturn function(callback, context) {\n\t\t\t\tvar list, result, keys, i;\n\n\t\t\t\t//  always use the native implementation, if it exists\n\t\t\t\tif (name in collection && konflux.isType('function', collection[name])) {\n\t\t\t\t\treturn new KonfluxIterator(collection[name].apply(collection, arguments));\n\t\t\t\t}\n\n\t\t\t\tlist = collection instanceof Array ? [] : {};\n\n\t\t\t\tkeys = iterator.keys();\n\t\t\t\tfor (i = 0; i < keys.length; ++i) {\n\t\t\t\t\tresult = evaluate(callback.apply(context || undefined, [collection[keys[i]], keys[i], collection]), collection[keys[i]]);\n\n\t\t\t\t\tif (result) {\n\t\t\t\t\t\tif (one) {\n\t\t\t\t\t\t\treturn result;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tlist[keys[i]] = result;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn konflux.iterator(list);\n\t\t\t};\n\t\t}\n\n\t\t/**\n\t\t *  Obtain the raw underlying collection\n\t\t *  @name    collection\n\t\t *  @type    method\n\t\t *  @access  public\n\t\t *  @return  mixed collection\n\t\t */\n\t\titerator.collection = function() {\n\t\t\treturn collection;\n\t\t};\n\n\t\t/**\n\t\t *  Get or set the cursor position, if an non-existant position is given, the cursor does not budge\n\t\t *  @name    cursor\n\t\t *  @type    method\n\t\t *  @access  public\n\t\t *  @param   mixed index [optional, default null - don't update the cursor]\n\t\t *  @return  mixed value\n\t\t */\n\t\titerator.cursor = function(index) {\n\t\t\tvar result;\n\n\t\t\tif (index) {\n\t\t\t\tif (collection instanceof Array && index in keys) {\n\t\t\t\t\tcurrent = index;\n\t\t\t\t}\n\t\t\t\telse if (!(collection instanceof Array)) {\n\t\t\t\t\tresult = konflux.array.contains(keys, index);\n\n\t\t\t\t\tif (result) {\n\t\t\t\t\t\tcurrent = result;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tresult = current || 0;\n\n\t\t\treturn collection instanceof Array ? result : keys[result];\n\t\t};\n\n\t\t/**\n\t\t *  Obtain a member from the underlying collection\n\t\t *  @name    item\n\t\t *  @type    method\n\t\t *  @access  public\n\t\t *  @param   mixed index\n\t\t *  @return  mixed value\n\t\t */\n\t\titerator.item = function(index) {\n\t\t\tif ('item' in collection && konflux.isType('function', collection.item)) {\n\t\t\t\treturn collection.item(index);\n\t\t\t}\n\n\t\t\treturn ('length' in collection && (index >= 0 || index < collection.length)) || index in collection ? collection[index] : null;\n\t\t};\n\n\t\t/**\n\t\t *  Obtain the current value, whithout shifting the cursor\n\t\t *  @name    current\n\t\t *  @type    method\n\t\t *  @access  public\n\t\t *  @return  mixed value\n\t\t */\n\t\titerator.current = function() {\n\t\t\tif (!current) {\n\t\t\t\tcurrent = 0;\n\t\t\t}\n\n\t\t\treturn typeof keys[current] !== 'undefined' ? iterator.item(keys[current]) : false;\n\t\t};\n\n\t\t/**\n\t\t *  Obtain an array which contains all the keys for the underlying collection\n\t\t *  @name    keys\n\t\t *  @type    method\n\t\t *  @access  public\n\t\t *  @return  Array keys\n\t\t */\n\t\titerator.keys = function() {\n\t\t\tvar result = [];\n\n\t\t\titerator.each(function(value, key) {\n\t\t\t\tresult.push(key);\n\t\t\t});\n\n\t\t\treturn result;\n\t\t};\n\n\t\t/**\n\t\t *  Create a new KonfluxIterator from the current containing only elements which received a true(-ish) result\n\t\t *  from the provided filter method\n\t\t *  @name    filter\n\t\t *  @type    method\n\t\t *  @access  public\n\t\t *  @param   function evaluate\n\t\t *  @param   object   thisArg 'this' [optional, default undefined]\n\t\t *  @return  KonfluxIterator matches\n\t\t */\n\t\titerator.filter = implement('filter', function(result, item) {\n\t\t\treturn !!result ? item : false;\n\t\t});\n\n\t\t/**\n\t\t *  Return the first matching item (true-ish result from the evaluation function) from the iterator\n\t\t *  @name    find\n\t\t *  @type    method\n\t\t *  @access  public\n\t\t *  @param   function map\n\t\t *  @param   object   thisArg 'this' [optional, default undefined]\n\t\t *  @return  KonfluxIterator found\n\t\t */\n\t\titerator.find = implement('find', function(result, item) {\n\t\t\treturn !!result ? item : false;\n\t\t}, true);\n\n\t\t/**\n\t\t *  Create a new KonfluxIterator from the current containing items (possibly) modified by the map function\n\t\t *  @name    map\n\t\t *  @type    method\n\t\t *  @access  public\n\t\t *  @param   function map\n\t\t *  @param   object   thisArg 'this' [optional, default undefined]\n\t\t *  @return  KonfluxIterator mapped\n\t\t */\n\t\titerator.map = implement('map', function(result) {\n\t\t\treturn result;\n\t\t});\n\n\t\t/**\n\t\t *  Obtain the previous value, shifting the cursor to the previous position\n\t\t *  @name    previous\n\t\t *  @type    method\n\t\t *  @access  public\n\t\t *  @return  mixed value\n\t\t */\n\t\titerator.previous = function() {\n\t\t\tcurrent = Math.max(typeof current !== 'undefined' ? current - 1 : 0, -1);\n\n\t\t\treturn iterator.current();\n\t\t};\n\n\t\t/**\n\t\t *  Obtain the previous value, shifting the cursor back\n\t\t *  @name    prev\n\t\t *  @type    method\n\t\t *  @access  public\n\t\t *  @return  mixed value\n\t\t *  @alias   iterator.previous\n\t\t */\n\t\titerator.prev = iterator.previous;\n\n\t\t/**\n\t\t *  Obtain the next value, shifting the cursor to the next position\n\t\t *  @name    next\n\t\t *  @type    method\n\t\t *  @access  public\n\t\t *  @return  mixed value\n\t\t */\n\t\titerator.next = function() {\n\t\t\tcurrent = Math.min(typeof current !== 'undefined' ? current + 1 : 0, keys.length);\n\n\t\t\treturn iterator.current();\n\t\t};\n\n\t\t/**\n\t\t *  Traverse the underlying collection and call given handle on every item in the collection\n\t\t *  @name    each\n\t\t *  @type    method\n\t\t *  @access  public\n\t\t *  @param   function   callback\n\t\t *  @param   object     thisArg (value to use as this when executing callback)\n\t\t *  @return  KonfluxIterator instance\n\t\t */\n\t\titerator.each = function(callback, thisArg) {\n\t\t\tvar p;\n\n\t\t\tif ('length' in collection) {\n\t\t\t\tfor (p = 0; p < collection.length; ++p) {\n\t\t\t\t\tcallback.apply(thisArg || undefined, [collection[p], p, iterator]);\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tfor (p in collection) {\n\t\t\t\t\tcallback.apply(thisArg || undefined, [collection[p], p, iterator]);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn iterator;\n\t\t};\n\n\t\t/**\n\t\t *  Add items to the collection\n\t\t *  @name    add\n\t\t *  @type    method\n\t\t *  @access  public\n\t\t *  @param   mixed argument1\n\t\t *  @param   mixed ...\n\t\t *  @param   mixed argumentN\n\t\t *  @return  KonfluxIterator instance\n\t\t *  @note    Adding items to the collection will destroy the original collection and turn it into an array\n\t\t *  @note    Any scalar variable type (String, Number, Boolean and NULL) will added as is, any\n\t\t *           Array or Object will be disected and treated as array (if possible)\n\t\t */\n\t\titerator.add = function() {\n\t\t\tvar i;\n\n\t\t\tfor (i = 0; i < arguments.length; ++i) {\n\t\t\t\tadd(arguments[i]);\n\t\t\t}\n\n\t\t\treturn iterator;\n\t\t};\n\n\t\tinit();\n\t}\n\n\t/**\n\t *  Create a KonfluxIterator instance\n\t *  @name   iterator\n\t *  @type   method\n\t *  @access public\n\t *  @param  mixed collection\n\t *  @return KonfluxIterator iterator\n\t */\n\tkonflux.register('iterator', function(collection) {\n\t\treturn collection instanceof KonfluxIterator ? collection : new KonfluxIterator(collection);\n\t});\n\n\t//END INCLUDE: core/iterator [963.28µs, 9.80KB]\n\t//BEGIN INCLUDE: core/dom\n\t/**\n\t *  DOM Structure helper\n\t *  @module  dom\n\t *  @note    available as konflux.dom / kx.dom\n\t */\n\tfunction KonfluxDOM() {\n\t\t/*jshint validthis: true*/\n\t\tvar dom = this;\n\n\t\t//  constants\n\t\tdom.STACK_NEGATIVE   = 1;\n\t\tdom.STACK_BLOCK      = dom.STACK_NEGATIVE << 1;\n\t\tdom.STACK_FLOAT      = dom.STACK_BLOCK << 1;\n\t\tdom.STACK_INLINE     = dom.STACK_FLOAT << 1;\n\t\tdom.STACK_POSITIONED = dom.STACK_INLINE << 1;\n\t\tdom.STACK_POSITIVE   = dom.STACK_POSITIONED << 1;\n\t\tdom.STACK_GLOBAL     = dom.STACK_POSITIVE << 1;\n\n\t\t/**\n\t\t *  Append given source element or structure to the target element\n\t\t *  @name   appendTo\n\t\t *  @type   function\n\t\t *  @access internal\n\t\t *  @param  DOMElement target\n\t\t *  @param  mixed source (one of: DOMElement, Object structure)\n\t\t *  @return Array of added source elements\n\t\t */\n\t\tfunction appendTo(target, source) {\n\t\t\tvar result, i;\n\n\t\t\tif (konflux.isType('string', target)) {\n\t\t\t\ttarget = document.querySelector(target);\n\t\t\t}\n\n\t\t\tif (source instanceof Array) {\n\t\t\t\tresult = [];\n\t\t\t\tfor (i = 0; i < source.length; ++i) {\n\t\t\t\t\tresult.push(appendTo(target, source[i]));\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tresult = target.appendChild(source);\n\t\t\t}\n\n\t\t\treturn result;\n\t\t}\n\n\t\t/**\n\t\t *  Determine whether element is in the ancestor element or the ancestor element itself\n\t\t *  @name   contains\n\t\t *  @type   function\n\t\t *  @access internal\n\t\t *  @param  DOMElement ancestor\n\t\t *  @param  DOMElement element\n\t\t *  @return bool element is (in) ancestor\n\t\t */\n\t\tfunction contains(ancestor, element) {\n\t\t\t//  use the contains method if it exists\n\t\t\tif ('contains' in ancestor) {\n\t\t\t\treturn ancestor.contains(element);\n\t\t\t}\n\n\t\t\t//  old school tree walker\n\t\t\twhile (element !== ancestor && element) {\n\t\t\t\telement = element.parentNode;\n\t\t\t}\n\n\t\t\treturn !!element;\n\t\t}\n\n\t\t/**\n\t\t *  Create a dom structure from given variable\n\t\t *  @name   createStructure\n\t\t *  @type   function\n\t\t *  @access internal\n\t\t *  @param  mixed   source\n\t\t *  @param  DOMNode scope\n\t\t *  @return DOMElement structure\n\t\t */\n\t\tfunction createStructure(struct, scope) {\n\t\t\tvar nodeName, element, p, i;\n\n\t\t\tswitch (konflux.type(struct)) {\n\t\t\t\tcase 'array':\n\t\t\t\t\telement = [];\n\t\t\t\t\tfor (i = 0; i < struct.length; ++i) {\n\t\t\t\t\t\telement.push(createStructure(struct[i]));\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'object':\n\t\t\t\t\tnodeName = 'tag' in struct ? struct.tag : ('name' in struct ? struct.name : 'div');\n\n\t\t\t\t\tif (!/^[a-z]+[a-z0-9-]*$/i.test(nodeName)) {\n\t\t\t\t\t\telement = (scope ? scope.querySelector(nodeName) : null) || document.querySelector(nodeName);\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\telement = document.createElement(nodeName);\n\t\t\t\t\t}\n\n\t\t\t\t\tfor (p in struct) {\n\t\t\t\t\t\tswitch (p)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tcase 'name':\n\t\t\t\t\t\t\t\tif ('tag' in struct) {\n\t\t\t\t\t\t\t\t\telement.setAttribute('name', struct[p]);\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase 'child':\n\t\t\t\t\t\t\tcase 'content':\n\t\t\t\t\t\t\t\tappendTo(element, createStructure(struct[p], element));\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase 'class':\n\t\t\t\t\t\t\tcase 'className':\n\t\t\t\t\t\t\t\telement.setAttribute('class', struct[p]);\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t\telement.setAttribute(p, struct[p]);\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'boolean':\n\t\t\t\t\tstruct = struct ? 'true' : 'false';\n\t\t\t\t\t/* falls through */\n\t\t\t\tdefault:\n\t\t\t\t\telement = document.createTextNode(struct);\n\t\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\treturn element;\n\t\t}\n\n\t\t/**\n\t\t *  Obtain the stacking order index\n\t\t *  @name   stackOrderIndex\n\t\t *  @type   function\n\t\t *  @access internal\n\t\t *  @param  DOMElement node\n\t\t *  @return object stack order (format: {type:<int>, index:<int>})\n\t\t *  @note   the dom constants: STACK_NEGATIVE, STACK_BLOCK, STACK_FLOAT\n\t\t *          STACK_INLINE, STACK_POSITIONED, STACK_POSITIVE, STACK_GLOBAL\n\t\t *          with the type number to determine the matching type.\n\t\t *          e.g. type & konflux.dom.STACK_POSITIONED !== 0 is a positioned element\n\t\t *  @see    spec:  http://www.w3.org/TR/CSS2/zindex.html#painting-order\n\t\t *  @see    human: http://philipwalton.com/articles/what-no-one-told-you-about-z-index/\n\t\t */\n\t\tfunction stackOrderIndex(node) {\n\t\t\tvar zIndex = +konflux.style.get(node, 'z-index'),\n\t\t\t\topacity = parseFloat(konflux.style.get(node, 'opacity')),\n\t\t\t\tposition = konflux.style.get(node, 'position'),\n\t\t\t\tdisplay = konflux.style.get(node, 'display'),\n\t\t\t\tfloatValue = konflux.style.get(node, 'float'),\n\t\t\t\tcontext = (position !== 'static' && zIndex !== 'auto') || opacity < 1,\n\n\t\t\t\t//  https://developer.mozilla.org/en-US/docs/Web/CSS/display\n\t\t\t\tblockType = /^(?:(?:inline\\-)?block|list\\-item|table(?:\\-(?:cell|caption|column|row))?|table\\-(?:column|footer|header|row)\\-group|flex|grid)$/.test(display),\n\t\t\t\ttype = parseInt([\n\n\t\t\t\t\t//  fixed positioning, a world in its own\n\t\t\t\t\tposition === 'fixed' ? 1 : 0,\n\n\t\t\t\t\t//  positive stacking context: 0/1\n\t\t\t\t\tcontext && (zIndex === 'auto' || zIndex >= 0) ? 1 : 0,\n\n\t\t\t\t\t//  positioned (and not stacking context)\n\t\t\t\t\tposition !== 'static' && !context ? 1 : 0,\n\n\t\t\t\t\t//  inline level elements (natural position order)\n\t\t\t\t\tfloatValue === 'none' && position === 'static' && !blockType ? 1 : 0,\n\n\t\t\t\t\t//  floating elements are between natural positioned inline and block level elements\n\t\t\t\t\tfloatValue !== 'none' && !context && position === 'static' ? 1 : 0,\n\n\t\t\t\t\t//  block level element (natural position order)\n\t\t\t\t\tfloatValue === 'none' && position === 'static' && blockType ? 1 : 0,\n\n\t\t\t\t\t//  negative stacking context\n\t\t\t\t\tcontext && zIndex < 0 ? 1 : 0\n\t\t\t\t].join(''), 2);\n\n\t\t\treturn {\n\t\t\t\ttype: type,\n\t\t\t\tindex: position !== 'static' || !zIndex || zIndex === 'auto' ? 0 : zIndex,\n\t\t\t\tcontext: (dom.STACK_NEGATIVE & type || dom.STACK_POSITIONED & type || dom.STACK_POSITIVE & type || dom.STACK_GLOBAL & type) !== 0\n\t\t\t};\n\t\t}\n\n\t\t/**\n\t\t *  Get the unique reference for given DOM element, adds it if it does not yet exist\n\t\t *  @name    elementReference\n\t\t *  @type    function\n\t\t *  @access  internal\n\t\t *  @param   DOMElement element\n\t\t *  @param   bool       hidden [optional, default false]\n\t\t *  @return  string unique reference\n\t\t *  @note    this function adds an attribute 'data-kxref' to the element if the reference is not hidden\n\t\t *           (the hidden option is not considered to be best practise)\n\t\t */\n\t\tfunction elementReference(element, hidden) {\n\t\t\tvar name = 'kxref',\n\t\t\t\tprepare = {\n\t\t\t\t\twindow: window,\n\t\t\t\t\tdocument: document,\n\t\t\t\t\troot: document.documentElement,\n\t\t\t\t\thead: document.head,\n\t\t\t\t\tbody: document.body\n\t\t\t\t},\n\t\t\t\treference, p;\n\n\t\t\t//  we don't ever contaminate the window object, document, documentElement or body element\n\t\t\tfor (p in prepare) {\n\t\t\t\tif (element === prepare[p]) {\n\t\t\t\t\treturn p;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (!element || !('nodeType' in element) || element.nodeType !== 1) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\telse {\n\t\t\t\treference = hidden ? (name in element ? element[name] : null) : element.getAttribute('data-' + name);\n\t\t\t}\n\n\t\t\t//  if no reference was set yet, do so now\n\t\t\tif (!reference) {\n\t\t\t\treference = konflux.unique();\n\n\t\t\t\tif (hidden) {\n\t\t\t\t\telement[name] = reference;\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\telement.setAttribute('data-' + name, reference);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn reference;\n\t\t}\n\n\t\t/**\n\t\t *  Create a dom structure from given variable\n\t\t *  @name   create\n\t\t *  @type   method\n\t\t *  @access public\n\t\t *  @param  mixed source\n\t\t *  @return DOMElement structure\n\t\t */\n\t\tdom.create = createStructure;\n\n\t\t/**\n\t\t *  Append given source element or structure to the target element\n\t\t *  @name   appendTo\n\t\t *  @type   method\n\t\t *  @access public\n\t\t *  @param  DOMElement target\n\t\t *  @param  mixed source (one of: DOMElement, Object structure)\n\t\t *  @return Array of added source elements\n\t\t */\n\t\tdom.appendTo = function(target, source) {\n\t\t\treturn appendTo(target, konflux.isType('object', source) && !konflux.isType('undefined', source.nodeType) ? source : createStructure(source, target));\n\t\t};\n\n\t\t/**\n\t\t *  Determine whether element is in the ancestor element or the ancestor element itself\n\t\t *  @name   contains\n\t\t *  @type   method\n\t\t *  @access public\n\t\t *  @param  DOMElement ancestor\n\t\t *  @param  DOMElement element\n\t\t *  @return bool is (in) ancestor\n\t\t */\n\t\tdom.contains = contains;\n\n\t\t/**\n\t\t *  Select elements matching given CSS selector\n\t\t *  @name   select\n\t\t *  @type   method\n\t\t *  @access public\n\t\t *  @param  string     selector\n\t\t *  @param  DOMElement parent\n\t\t *  @return KonfluxIterator nodeList\n\t\t */\n\t\tdom.select = function(selector, parent) {\n\t\t\treturn konflux.iterator((parent || document).querySelectorAll(selector));\n\t\t};\n\n\t\t/**\n\t\t *  Get the unique reference for given DOM element, adds it if it does not yet exist\n\t\t *  @name    reference\n\t\t *  @type    method\n\t\t *  @access  public\n\t\t *  @param   DOMElement element\n\t\t *  @return  string unique reference\n\t\t *  @note    this function adds an attribute 'data-kxref' to the element\n\t\t */\n\t\tdom.reference = function(element) {\n\t\t\treturn elementReference(element);\n\t\t};\n\n\t\t/**\n\t\t *  Obtain the stacking order level\n\t\t *  @name   stackLevel\n\t\t *  @type   method\n\t\t *  @access public\n\t\t *  @param  DOMElement node\n\t\t *  @return object stack order (format: {type:<int>, index:<int>})\n\t\t */\n\t\tdom.stackLevel = stackOrderIndex;\n\t}\n\n\t;(function(dom) {\n\t\tkonflux.register('dom', dom);\n\n\t\t/**\n\t\t *  Select elements matching given CSS selector\n\t\t *  @name   select\n\t\t *  @type   method\n\t\t *  @access public\n\t\t *  @param  string     selector\n\t\t *  @param  DOMElement parent\n\t\t *  @return DOMNodeList (empty Array if the dom module is not available)\n\t\t */\n\t\tkonflux.register('select', function(selector, parent) {\n\t\t\treturn dom.select(selector, parent);\n\t\t});\n\t})(new KonfluxDOM());\n\n\t//END INCLUDE: core/dom [1.80ms, 9.03KB]\n\t//BEGIN INCLUDE: core/browser\n\t/**\n\t *  Browser/feature detection\n\t *  @module  browser\n\t *  @note    available as konflux.browser / kx.browser\n\t */\n\tfunction KonfluxBrowser() {\n\t\t/*jshint validthis: true*/\n\t\tvar browser = this,\n\t\t\tsupport = {\n\t\t\t\ttouch: 'ontouchstart' in window || 'msMaxTouchPoints' in navigator\n\t\t\t},\n\t\t\tprefix,\n\t\t\tieVersion;\n\n\t\t/**\n\t\t *  Determine whether or not the browser is Internet Explorer (4+)\n\t\t *  @name    detectIE\n\t\t *  @type    function\n\t\t *  @access  internal\n\t\t *  @return  mixed (boolean false if not IE, version number if IE)\n\t\t */\n\t\tfunction detectIE() {\n\t\t\t//  https://gist.github.com/527683 (Conditional comments only work for IE 5 - 9)\n\t\t\tvar node = document.createElement('div'),\n\t\t\t\tcheck = node.getElementsByTagName('i'),\n\t\t\t\tversion = 4;\n\n\t\t\t//  Starting with IE 4 (as version is incremented before first use), an <i> element is added to\n\t\t\t//  the 'node' element surrounded by conditional comments. The 'check' variable is automatically updated\n\t\t\t//  to contain all <i> elements. These elements are not there if the browser does not support conditional\n\t\t\t//  comments or does not match the IE version\n\t\t\t//  Note that there are two conditions for the while loop; the innerHTML filling and the check, the while\n\t\t\t//  loop itself has no body (as it is closed off by a semi-colon right after declaration)\n\t\t\twhile (node.innerHTML = '<!--[if gt IE ' + version + ']><i></i><![endif]-->', check.length && version < 10) {\n\t\t\t\t++version;\n\t\t\t}\n\n\t\t\t//  Added IE's @cc_on trickery for browser which do not support conditional comments (such as IE10)\n\t\t\tversion = version > 4 ? version : /*jshint evil: true */Function('/*@cc_on return document.documentMode;@*/return false')()/*jshint evil: false */;\n\n\t\t\t//  IE11 removed the @cc_on syntax, so we need to go deeper\n\t\t\treturn version ? version : ('-ms-ime-align' in document.documentElement.style ? 11 : false);\n\t\t}\n\n\t\t/**\n\t\t *  Determine whether or not the browser has given feature in either the window or document scope\n\t\t *  @name    hasFeature\n\t\t *  @type    function\n\t\t *  @access  internal\n\t\t *  @param   string   feature\n\t\t *  @return  boolean  has feature\n\t\t */\n\t\tfunction hasFeature(feature) {\n\t\t\treturn !konflux.isType('undefined', support[feature]) ? support[feature] : feature in window || feature in document;\n\t\t}\n\n\t\t/**\n\t\t *  Obtain a specific feature from the browser, be it the native property or the vendor prefixed property\n\t\t *  @name    getFeature\n\t\t *  @type    function\n\t\t *  @access  internal\n\t\t *  @param   mixed    feature [one of: string feature or array with string features]\n\t\t *  @param   array    scope(s) [optional, default null - global scopes]\n\t\t *  @return  mixed    feature (false if it doesn't exist)\n\t\t */\n\t\tfunction getFeature(feature, scope) {\n\t\t\tvar vendor = vendorPrefix(),\n\n\t\t\t\t//  the objects to search for the feature\n\t\t\t\tobject = scope ? scope : [\n\t\t\t\t\twindow,\n\t\t\t\t\tdocument,\n\t\t\t\t\tnavigator\n\t\t\t\t],\n\t\t\t\tsearch = [],\n\t\t\t\tuc, i;\n\n\t\t\tif (!(feature instanceof Array)) {\n\t\t\t\tfeature = [feature];\n\t\t\t}\n\n\t\t\tfor (i = 0; i < feature.length; ++i) {\n\t\t\t\tuc = konflux.string.ucFirst(feature[i]);\n\t\t\t\tsearch = search.concat([\n\t\t\t\t\tfeature[i],\n\t\t\t\t\tvendor + uc,\n\t\t\t\t\tvendor.toLowerCase() + uc\n\t\t\t\t]);\n\t\t\t}\n\n\t\t\twhile (search.length) {\n\t\t\t\tfeature = search.shift();\n\n\t\t\t\tfor (i = 0; i < object.length; ++i) {\n\t\t\t\t\tif (feature in object[i]) {\n\t\t\t\t\t\treturn object[i][feature];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn false;\n\t\t}\n\n\t\t/**\n\t\t *  Obtain the vendor prefix for the current browser\n\t\t *  @name   vendorPrefix\n\t\t *  @type   function\n\t\t *  @access internal\n\t\t *  @return string prefix\n\t\t */\n\t\tfunction vendorPrefix() {\n\t\t\tvar vendor = ['Icab', 'Khtml', 'O', 'ms', 'Moz', 'webkit'],\n\t\t\t\tregex  = new RegExp('^(' + vendor.join('|') + ')(?=[A-Z])'),\n\t\t\t\tscript = document.createElement('script'),\n\t\t\t\tp;\n\n\t\t\t//  try to find any vendor prefixed style property on our script node\n\t\t\tfor (p in script.style) {\n\t\t\t\tif (regex.test(p)) {\n\t\t\t\t\tprefix = p.match(regex).shift();\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t//  as a last resort, try to see if the <pre>Opacity property exists\n\t\t\twhile (!prefix && vendor.length) {\n\t\t\t\tp = vendor.pop();\n\t\t\t\tif (p + 'Opacity' in script.style) {\n\t\t\t\t\tprefix = p;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tscript = null;\n\n\t\t\treturn prefix;\n\t\t}\n\n\t\t/**\n\t\t *  Verify if the browser at hand is any version of Internet Explorer (4+)\n\t\t *  @name    ie\n\t\t *  @type    method\n\t\t *  @access  public\n\t\t *  @param   number min version [optional, default null - obtain the version number]\n\t\t *  @return  mixed (boolean false if not IE (or not minimal version), version number if IE)\n\t\t *  @see     detectIE\n\t\t *  @note    this public implementation caches the result\n\t\t */\n\t\tbrowser.ie = function(min) {\n\t\t\tif (konflux.isType('undefined', ieVersion)) {\n\t\t\t\tieVersion = detectIE();\n\t\t\t}\n\n\t\t\treturn min && ieVersion ? ieVersion < min : ieVersion;\n\t\t};\n\n\t\t/**\n\t\t *  Obtain the vendor prefix for the current browser\n\t\t *  @name    prefix\n\t\t *  @type    method\n\t\t *  @access  public\n\t\t *  @return  string prefix\n\t\t *  @note    this public implementation caches the result\n\t\t */\n\t\tbrowser.prefix = function() {\n\t\t\tif (!prefix) {\n\t\t\t\tprefix = vendorPrefix();\n\t\t\t}\n\n\t\t\treturn prefix;\n\t\t};\n\n\t\t/**\n\t\t *  Obtain a specific feature from the browser\n\t\t *  @name    feature\n\t\t *  @type    method\n\t\t *  @access  public\n\t\t *  @param   mixed    feature [one of: string feature or array with string features]\n\t\t *  @param   mixed    scope(s) [optional, default null - global scopes]\n\t\t *  @return  mixed    feature (false if it doesn't exist)\n\t\t *  @note    this method attempts to search for the native feature and falls back onto vendor prefixed features\n\t\t */\n\t\tbrowser.feature = function(feature, scope) {\n\t\t\tif (scope && !(scope instanceof Array)) {\n\t\t\t\tscope = [scope];\n\t\t\t}\n\n\t\t\treturn getFeature(feature, scope);\n\t\t};\n\n\t\t/**\n\t\t *  Test whether or not the browser at hand is aware of given feature(s) exist in either the window or document scope\n\t\t *  @name    supports\n\t\t *  @type    method\n\t\t *  @access  public\n\t\t *  @param   string feature1\n\t\t *  @param   string ...\n\t\t *  @param   string featureN\n\t\t *  @return  boolean support\n\t\t *  @note    multiple features can be provided, in which case the return value indicates the support of all given features\n\t\t */\n\t\tbrowser.supports = function() {\n\t\t\tvar r = true,\n\t\t\t\ti = arguments.length;\n\n\t\t\t//  test all the features given\n\t\t\twhile (r && --i >= 0) {\n\t\t\t\tr = r && hasFeature(arguments[i]);\n\t\t\t}\n\n\t\t\treturn r;\n\t\t};\n\n\t\t/**\n\t\t *  Enable the HTML5 fullscreen mode for given element\n\t\t *  @name    fullscreen\n\t\t *  @type    method\n\t\t *  @access  public\n\t\t *  @param   DOMNode target [optional, default document.documentElement]\n\t\t *  @return  bool    success\n\t\t *  @note    this method is highly experimental\n\t\t */\n\t\tbrowser.fullscreen = function(target) {\n\t\t\tvar check = ['fullScreen', 'isFullScreen'],\n\t\t\t\tvendor = browser.prefix().toLowerCase(),\n\t\t\t\tmethod, i;\n\n\t\t\tif (!target) {\n\t\t\t\ttarget = document.documentElement;\n\t\t\t}\n\n\t\t\tfor (i = 0, method = null; i < check.length, method === null; ++i) {\n\t\t\t\tmethod = check[i] in document ? check[i] : vendor + konflux.string.ucFirst(check[i]);\n\t\t\t\tif (!(method in document)) {\n\t\t\t\t\tmethod = null;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tvendor = method.match(new RegExp('^' + vendor)) ? vendor : null;\n\t\t\tvendor = (vendor || (document[method] ? 'cancel' : 'request')) + konflux.string.ucFirst((vendor ? (document[method] ? 'cancel' : 'request') : '') + konflux.string.ucFirst(check[0]));\n\n\t\t\t(document[method] ? document : target)[vendor](target.ALLOW_KEYBOARD_INPUT || null);\n\t\t};\n\t}\n\n\tkonflux.register('browser', new KonfluxBrowser());\n\n\t//END INCLUDE: core/browser [1.46ms, 7.17KB]\n\t//BEGIN INCLUDE: core/event\n\t/**\n\t *  Event attachment handler\n\t *  @module  event\n\t *  @note    available as konflux.event / Konflux.event\n\t */\n\tfunction KonfluxEvent() {\n\t\t/*jshint validthis: true*/\n\t\tvar event = this,\n\t\t\tqueue = {},\n\t\t\tdelegate, touch;\n\n\t\t/*global KonfluxEventDelegate*/\n\n\t\t//BEGIN INCLUDE: event/delegate\n\t\t/**\n\t\t *  Delegate manager object, keep track of all delegates created for DOMElement/Event combinations\n\t\t *  @name    KonfluxEventDelegate\n\t\t *  @type    module\n\t\t *  @access  internal\n\t\t */\n\t\tfunction KonfluxEventDelegate(unifier) {\n\t\t\t//\n\t\t\t'use strict';\n\n\t\t\t/*global konflux*/\n\n\t\t\t/*jshint validthis: true*/\n\t\t\tvar delegation = this,\n\t\t\t\tseparator = '!',\n\t\t\t\tstore = {};\n\n\t\t\t/**\n\t\t\t *  Unify the event type into an object alway containing the name and the namespace\n\t\t\t *  @name    namespace\n\t\t\t *  @type    function\n\t\t\t *  @access  internal\n\t\t\t *  @param   string event type\n\t\t\t *  @return  object namespace ({name: * | type, namespace: * || namespace})\n\t\t\t */\n\t\t\tfunction namespace(type) {\n\t\t\t\tvar match = type ? type.match(/^([^\\.]*)?(?:\\.(.+))?$/) : ['', '*', '*'];\n\n\t\t\t\treturn {\n\t\t\t\t\tname: match[1] || '*',\n\t\t\t\t\tnamespace: match[2] || '*'\n\t\t\t\t};\n\t\t\t}\n\n\t\t\t/**\n\t\t\t *  Obtain a proper key value for given target DOMElement\n\t\t\t *  @name    targetKey\n\t\t\t *  @type    function\n\t\t\t *  @access  internal\n\t\t\t *  @param   DOMElement target\n\t\t\t *  @return  string     key\n\t\t\t */\n\t\t\tfunction targetKey(target) {\n\t\t\t\treturn konflux.dom.reference(target);\n\t\t\t}\n\n\t\t\t/**\n\t\t\t *  Remove whitespace and comments from given input, making nearly every string usable as key\n\t\t\t *  @name    strip\n\t\t\t *  @type    function\n\t\t\t *  @access  internal\n\t\t\t *  @param   string input\n\t\t\t *  @return  string stripped\n\t\t\t */\n\t\t\tfunction strip(input) {\n\t\t\t\treturn (input + '').replace(/\\s+|\\/\\*.*?\\*\\//g, '');\n\t\t\t}\n\n\t\t\t/**\n\t\t\t *  Create a delegate function for the given combination of arguments, or return the previously created one\n\t\t\t *  @name    create\n\t\t\t *  @type    function\n\t\t\t *  @access  internal\n\t\t\t *  @param   DOMElement target\n\t\t\t *  @param   string event namespace\n\t\t\t *  @param   string event name\n\t\t\t *  @param   string filter\n\t\t\t *  @param   function handler\n\t\t\t *  @param   bool capture\n\t\t\t *  @return  object delegate ({target, namespace, type, filter, capture, delegate})\n\t\t\t */\n\t\t\tfunction create(target, ns, type, filter, handler, capture) {\n\t\t\t\tvar key = [\n\t\t\t\t\t\ttargetKey(target),\n\t\t\t\t\t\tns,\n\t\t\t\t\t\ttype,\n\t\t\t\t\t\tfilter ? strip(filter) : false,\n\t\t\t\t\t\tcapture || false,\n\t\t\t\t\t\tstrip(handler)\n\t\t\t\t\t].join(separator);\n\n\t\t\t\t//  if the key does not yet exist in the store, we create it\n\t\t\t\tif (!(key in store)) {\n\t\t\t\t\tstore[key] = {\n\t\t\t\t\t\ttarget: target,\n\t\t\t\t\t\tnamespace: ns,\n\t\t\t\t\t\ttype: type,\n\t\t\t\t\t\tfilter: filter,\n\t\t\t\t\t\tcapture: capture || false,\n\t\t\t\t\t\tdelegate: function(e) {\n\t\t\t\t\t\t\tvar evt = e || window.event,\n\t\t\t\t\t\t\t\tresult;\n\n\t\t\t\t\t\t\tif (filter) {\n\t\t\t\t\t\t\t\tif (!('target' in evt) && 'srcElement' in evt) {\n\t\t\t\t\t\t\t\t\tevt.target = evt.srcElement;\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\tkonflux.select(filter, target).each(function(element) {\n\t\t\t\t\t\t\t\t\tif (evt.target === element || konflux.dom.contains(element, evt.target)) {\n\t\t\t\t\t\t\t\t\t\tevt.delegate = target;\n\t\t\t\t\t\t\t\t\t\tresult = handler.apply(element, [unifier(evt)]);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse if (handler) {\n\t\t\t\t\t\t\t\tresult = handler.apply(target, [unifier(evt)]);\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif (result === false) {\n\t\t\t\t\t\t\t\tif (evt.stopPropagation) {\n\t\t\t\t\t\t\t\t\tevt.stopPropagation();\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\telse if (evt.cancelBubble) {\n\t\t\t\t\t\t\t\t\tevt.cancelBubble = true;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t};\n\t\t\t\t}\n\n\t\t\t\treturn store[key];\n\t\t\t}\n\n\t\t\t/**\n\t\t\t *  Remove given key from the store\n\t\t\t *  @name    remove\n\t\t\t *  @type    function\n\t\t\t *  @access  internal\n\t\t\t *  @param   string key\n\t\t\t *  @return  void\n\t\t\t */\n\t\t\tfunction remove(key) {\n\t\t\t\tif (key in store) {\n\t\t\t\t\tdelete store[key];\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t/**\n\t\t\t *  Find all delegates that match given arguments\n\t\t\t *  @name    find\n\t\t\t *  @type    function\n\t\t\t *  @access  internal\n\t\t\t *  @param   DOMElement target\n\t\t\t *  @param   string event namespace\n\t\t\t *  @param   string event name\n\t\t\t *  @param   string filter\n\t\t\t *  @param   function handler\n\t\t\t *  @return  Array matches\n\t\t\t */\n\t\t\tfunction find(target, ns, type, filter, handler) {\n\t\t\t\tvar wildcard = '.*?',\n\t\t\t\t\tpattern = new RegExp([\n\t\t\t\t\t\t'^' + (target ? konflux.string.escapeRegExp(targetKey(target)) : wildcard),\n\t\t\t\t\t\tns && ns !== '*' ? konflux.string.escapeRegExp(ns) : wildcard,\n\t\t\t\t\t\ttype && type !== '*' ? konflux.string.escapeRegExp(type) : wildcard,\n\t\t\t\t\t\tfilter ? konflux.string.escapeRegExp(strip(filter)) : wildcard,\n\t\t\t\t\t\twildcard,\n\t\t\t\t\t\t(handler ? konflux.string.escapeRegExp(strip(handler)) : wildcard) + '$'\n\t\t\t\t\t].join(separator)),\n\t\t\t\t\tresult = {},\n\t\t\t\t\tp;\n\n\t\t\t\tfor (p in store) {\n\t\t\t\t\tif (pattern.test(p)) {\n\t\t\t\t\t\tresult[p] = store[p];\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn result;\n\t\t\t}\n\n\t\t\t/**\n\t\t\t *  Find all delegates that match given arguments\n\t\t\t *  @name    find\n\t\t\t *  @type    method\n\t\t\t *  @access  public\n\t\t\t *  @param   DOMElement target\n\t\t\t *  @param   string event namespace\n\t\t\t *  @param   string event name\n\t\t\t *  @param   string filter\n\t\t\t *  @param   function handler\n\t\t\t *  @return  Array matches\n\t\t\t */\n\t\t\tdelegation.find = function(target, name, filter, handler) {\n\t\t\t\tvar type = namespace(name),\n\t\t\t\t\tfinds = find(target, type.namespace, type.name, filter, handler),\n\t\t\t\t\tresult = [],\n\t\t\t\t\tp;\n\n\t\t\t\tfor (p in finds) {\n\t\t\t\t\tresult.push(finds[p]);\n\t\t\t\t}\n\n\t\t\t\treturn result;\n\t\t\t};\n\n\t\t\t/**\n\t\t\t *  Remove all delegates that match given arguments, and return all of the removed delegates\n\t\t\t *  @name    find\n\t\t\t *  @type    method\n\t\t\t *  @access  public\n\t\t\t *  @param   DOMElement target\n\t\t\t *  @param   string event namespace\n\t\t\t *  @param   string event name\n\t\t\t *  @param   string filter\n\t\t\t *  @param   function handler\n\t\t\t *  @return  Array matches\n\t\t\t */\n\t\t\tdelegation.remove = function(target, name, filter, handler) {\n\t\t\t\tvar type = namespace(name),\n\t\t\t\t\tfinds = find(target, type.namespace, type.name, filter, handler),\n\t\t\t\t\tresult = [],\n\t\t\t\t\tp;\n\n\t\t\t\tfor (p in finds) {\n\t\t\t\t\tresult.push(finds[p]);\n\t\t\t\t\tremove(p);\n\t\t\t\t}\n\n\t\t\t\treturn result;\n\t\t\t};\n\n\t\t\t/**\n\t\t\t *  Create a delegate function for the given combination of arguments, or return the previously created one\n\t\t\t *  @name    create\n\t\t\t *  @type    method\n\t\t\t *  @access  public\n\t\t\t *  @param   DOMElement target\n\t\t\t *  @param   string event\n\t\t\t *  @param   string filter\n\t\t\t *  @param   function handler\n\t\t\t *  @param   bool capture\n\t\t\t *  @return  object delegate ({target, namespace, type, filter, capture, delegate})\n\t\t\t */\n\t\t\tdelegation.create = function(target, name, filter, handler, capture) {\n\t\t\t\tvar type = namespace(name);\n\n\t\t\t\treturn create(target, type.namespace, type.name, filter, handler, capture || false);\n\t\t\t};\n\t\t}\n\n\t\t//END INCLUDE: event/delegate [1.10ms, 5.88KB]\n\t\t/**\n\t\t *  Ready state handler, removes all relevant triggers and executes any handler that is set\n\t\t *  @name    handleReadyState\n\t\t *  @type    function\n\t\t *  @access  internal\n\t\t *  @return  void\n\t\t */\n\t\tfunction handleReadyState(e) {\n\t\t\tvar run = false,\n\t\t\t\tp;\n\n\t\t\tif (document.removeEventListener) {\n\t\t\t\tdocument.removeEventListener('DOMContentLoaded', handleReadyState, false);\n\t\t\t\twindow.removeEventListener('load', handleReadyState, false);\n\t\t\t\trun = true;\n\t\t\t}\n\t\t\telse if (document.readyState === 'complete') {\n\t\t\t\tdocument.detachEvent('onreadystate', handleReadyState);\n\t\t\t\twindow.detachEvent('onload', handleReadyState);\n\t\t\t\trun = true;\n\t\t\t}\n\n\t\t\tif (run && queue.ready) {\n\t\t\t\tfor (p in queue.ready) {\n\t\t\t\t\tqueue.ready[p].call(e);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t/**\n\t\t *  Get the event name for given event\n\t\t *  @name    getEventName\n\t\t *  @type    function\n\t\t *  @access  internal\n\t\t *  @param   string     name\n\t\t *  @param   DOMElement target\n\t\t *  @return  string     name\n\t\t */\n\t\tfunction getEventName(name, target) {\n\t\t\tvar match = name.match(/^(transition|animation)(end|iteration|start)$/i),\n\t\t\t\tproperty;\n\n\t\t\tif (match && (property = konflux.style.property(match[1], target)) !== match[1]) {\n\t\t\t\tproperty = property.substr(0, property.length - match[1].length);\n\t\t\t\tname = property['to' + (property.length <= 2 ? 'Upper' : 'Lower') + 'Case']() + konflux.string.ucFirst(match[1]) + konflux.string.ucFirst(match[2]);\n\t\t\t}\n\n\t\t\treturn name;\n\t\t}\n\n\t\t/**\n\t\t *  Get the proper event type for given event trigger\n\t\t *  @name    getEventType\n\t\t *  @type    function\n\t\t *  @access  internal\n\t\t *  @param   string name\n\t\t *  @return  string type\n\t\t */\n\t\tfunction getEventType(name) {\n\t\t\tvar list = '!afterprint!beforeprint!canplay!canplaythrough!change!domcontentloaded!durationchange!emptied!ended!input!invalid!loadeddata!loadedmetadata!offline!online!pause!play!playing!ratechange!readystatechange!reset!seeked!seeking!stalled!submit!suspend!timeupdate!volumechange!waiting!abort!domactivate!error!load!resize!scroll!select!unload!animationend!animationiteration!animationstart!beforeunload!blur!domfocusin!domfocusout!focus!focusin!focusout!click!contextmenu!dblclick!mousedown!mouseenter!mouseleave!mousemove!mouseout!mouseover!mouseup!show!compositionend!compositionstart!compositionupdate!copy!cut!paste!drag!dragend!dragenter!dragleave!dragover!dragstart!drop!hashchange!keydown!keypress!keyup!pagehide!pageshow!popstate!touchcancel!touchend!touchmove!touchstart!transitionend!wheel!',\n\t\t\t\tposition = list.indexOf('!' + name.toLowerCase() + '!'),\n\t\t\t\tresult;\n\n\t\t\tif (position < 0) {\n\t\t\t\t//  Use a Custom event for anything we don't know\n\t\t\t\tresult = 'Custom';\n\t\t\t}\n\n\t\t\t//  'afterprint'         (HTML5) The associated document has started printing or the print preview has been closed.\n\t\t\t//  'beforeprint'        (HTML5) The associated document is about to be printed or previewed for printing.\n\t\t\t//  'canplay'            (HTML5 media) The user agent can play the media, but estimates that not enough data has been\n\t\t\t//                                     loaded to play the media up to its end without having to stop for further\n\t\t\t//                                     buffering of content.\n\t\t\t//  'canplaythrough'     (HTML5 media) The user agent can play the media, and estimates that enough data has been\n\t\t\t//                                     loaded to play the media up to its end without having to stop for further\n\t\t\t//                                     buffering of content.\n\t\t\t//  'change'             (DOM L2, HTML5) An element loses focus and its value changed since gaining focus.\n\t\t\t//  'DOMContentLoaded'   (HTML5) The document has finished loading (but not its dependent resources).\n\t\t\t//  'durationchange'     (HTML5 media) The duration attribute has been updated.\n\t\t\t//  'emptied'            (HTML5 media) The media has become empty; for example, this event is sent if the media has\n\t\t\t//                                     already been loaded (or partially loaded), and the load() method is called\n\t\t\t//                                     to reload it.\n\t\t\t//  'ended'              (HTML5 media) Playback has stopped because the end of the media was reached.\n\t\t\t//  'input'              (HTML5) The value of an element changes or the content of an element with the attribute\n\t\t\t//                               contenteditable is modified.\n\t\t\t//  'invalid'            (HTML5) A submittable element has been checked and doesn't satisfy its constraints.\n\t\t\t//  'loadeddata'         (HTML5 media) The first frame of the media has finished loading.\n\t\t\t//  'loadedmetadata'     (HTML5 media) The metadata has been loaded.\n\t\t\t//  'offline'            (HTML5 offline) The browser has lost access to the network.\n\t\t\t//  'online'             (HTML5 offline) The browser has gained access to the network (but particular websites\n\t\t\t//                                       might be unreachable).\n\t\t\t//  'pause'              (HTML5 media) Playback has been paused.\n\t\t\t//  'play'               (HTML5 media) Playback has begun.\n\t\t\t//  'playing'            (HTML5 media) Playback is ready to start after having been paused or delayed due to\n\t\t\t//                                     lack of data.\n\t\t\t//  'ratechange'         (HTML5 media) The playback rate has changed.\n\t\t\t//  'readystatechange'   (HTML5 and XMLHttpRequest) The readyState attribute of a document has changed.\n\t\t\t//  'reset'              (DOM L2, HTML5) A form is reset.\n\t\t\t//  'seeked'             (HTML5 media) A seek operation completed.\n\t\t\t//  'seeking'            (HTML5 media) A seek operation began.\n\t\t\t//  'stalled'            (HTML5 media) The user agent is trying to fetch media data, but data is unexpectedly\n\t\t\t//                                     not forthcoming.\n\t\t\t//  'submit'             (DOM L2, HTML5) A form is submitted.\n\t\t\t//  'suspend'            (HTML5 media) Media data loading has been suspended.\n\t\t\t//  'timeupdate'         (HTML5 media) The time indicated by the currentTime attribute has been updated.\n\t\t\t//  'volumechange'       (HTML5 media) The volume has changed.\n\t\t\t//  'waiting'            (HTML5 media) Playback has stopped because of a temporary lack of data.\n\t\t\telse if (position < 277) {\n\t\t\t\t//  HTMLEvent\n\t\t\t\tresult = 'HTML';\n\t\t\t}\n\n\t\t\t//  'abort'              (DOM L3) The loading of a resource has been aborted.\n\t\t\t//  'DOMActivate'        (DOM L3) A button, link or state changing element is activated (use click instead).\n\t\t\t//  'error'              (DOM L3) A resource failed to load.\n\t\t\t//  'load'               (DOM L3) A resource and its dependent resources have finished loading.\n\t\t\t//  'resize'             (DOM L3) The document view has been resized.\n\t\t\t//  'scroll'             (DOM L3) The document view or an element has been scrolled.\n\t\t\t//  'select'             (DOM L3) Some text is being selected.\n\t\t\t//  'unload'             (DOM L3) The document or a dependent resource is being unloaded.\n\t\t\telse if (position < 334) {\n\t\t\t\t//  UIEvent\n\t\t\t\tresult = 'UI';\n\t\t\t}\n\n\t\t\t//  'animationend'       (CSS Animations) A CSS animation has completed.\n\t\t\t//  'animationiteration' (CSS Animations) A CSS animation is repeated.\n\t\t\t//  'animationstart'     (CSS Animations) A CSS animation has started.\n\t\t\telse if (position < 381) {\n\t\t\t\t//  AnimationEvent\n\t\t\t\tresult = 'Animation';\n\t\t\t}\n\n\t\t\t//  'beforeunload'       (HTML5)\n\t\t\telse if (position < 394) {\n\t\t\t\t//  BeforeUnloadEvent\n\t\t\t\tresult = 'BeforeUnload';\n\t\t\t}\n\n\t\t\t//  'blur'               (DOM L3) An element has lost focus (does not bubble).\n\t\t\t//  'DOMFocusIn'         (DOM L3) An element has received focus (use focus or focusin instead).\n\t\t\t//  'DOMFocusOut'        (DOM L3) An element has lost focus (use blur or focusout instead).\n\t\t\t//  'focus'              (DOM L3) An element has received focus (does not bubble).\n\t\t\t//  'focusin'            (DOM L3) An element is about to receive focus (bubbles).\n\t\t\t//  'focusout'           (DOM L3) An element is about to lose focus (bubbles).\n\t\t\telse if (position < 445) {\n\t\t\t\t//  FocusEvent\n\t\t\t\tresult = 'Focus';\n\t\t\t}\n\n\t\t\t//  'click'              (DOM L3) A pointing device button has been pressed and released on an element.\n\t\t\t//  'contextmenu'        (HTML5) The right button of the mouse is clicked (before the context menu is displayed).\n\t\t\t//  'dblclick'           (DOM L3) A pointing device button is clicked twice on an element.\n\t\t\t//  'mousedown'          (DOM L3) A pointing device button (usually a mouse) is pressed on an element.\n\t\t\t//  'mouseenter'         (DOM L3) A pointing device is moved onto the element that has the listener attached.\n\t\t\t//  'mouseleave'         (DOM L3) A pointing device is moved off the element that has the listener attached.\n\t\t\t//  'mousemove'          (DOM L3) A pointing device is moved over an element.\n\t\t\t//  'mouseout'           (DOM L3) A pointing device is moved off the element that has the listener attached or\n\t\t\t//                                off one of its children.\n\t\t\t//  'mouseover'          (DOM L3) A pointing device is moved onto the element that has the listener attached or\n\t\t\t//                                onto one of its children.\n\t\t\t//  'mouseup'            (DOM L3) A pointing device button is released over an element.\n\t\t\t//  'show'               (HTML5) A contextmenu event was fired on/bubbled to an element that has a\n\t\t\t//                               contextmenu attribute\n\t\t\telse if (position < 546) {\n\t\t\t\t//  MouseEvent\n\t\t\t\tresult = 'Mouse';\n\t\t\t}\n\n\t\t\t//  'compositionend'     (DOM L3) The composition of a passage of text has been completed or canceled.\n\t\t\t//  'compositionstart'   (DOM L3) The composition of a passage of text is prepared (similar to keydown for\n\t\t\t//                                a keyboard input, but works with other inputs such as speech recognition).\n\t\t\t//  'compositionupdate'  (DOM L3) A character is added to a passage of text being composed.\n\t\t\telse if (position < 596) {\n\t\t\t\t//  CompositionEvent\n\t\t\t\tresult = 'Composition';\n\t\t\t}\n\n\t\t\t//  'copy'               (Clipboard) The text selection has been added to the clipboard.\n\t\t\t//  'cut'                (Clipboard) The text selection has been removed from the document and added to the clipboard.\n\t\t\t//  'paste'              (Clipboard) Data has been transfered from the system clipboard to the document.\n\t\t\telse if (position < 611) {\n\t\t\t\t//  ClipboardEvent\n\t\t\t\tresult = 'Clipboard';\n\t\t\t}\n\n\t\t\t//  'drag'               (HTML5) An element or text selection is being dragged (every 350ms).\n\t\t\t//  'dragend'            (HTML5) A drag operation is being ended (by releasing a mouse button or hitting the\n\t\t\t//                               escape key).\n\t\t\t//  'dragenter'          (HTML5) A dragged element or text selection enters a valid drop target.\n\t\t\t//  'dragleave'          (HTML5) A dragged element or text selection enters a valid drop target.\n\t\t\t//  'dragover'           (HTML5) An element or text selection is being dragged over a valid drop target (every 350ms).\n\t\t\t//  'dragstart'          (HTML5) The user starts dragging an element or text selection.\n\t\t\t//  'drop'               (HTML5) An element is dropped on a valid drop target.\n\t\t\telse if (position < 668) {\n\t\t\t\t//  DragEvent\n\t\t\t\tresult = 'Drag';\n\t\t\t}\n\n\t\t\t//  'hashchange'         (HTML5) The fragment identifier of the URL has changed (the part of the URL after the #).\n\t\t\telse if (position < 679) {\n\t\t\t\t//  HashChangeEvent\n\t\t\t\tresult = 'HashChange';\n\t\t\t}\n\n\t\t\t//  'keydown'            (DOM L3) A key is pressed down.\n\t\t\t//  'keypress'           (DOM L3) A key is pressed down and that key normally produces a character value\n\t\t\t//                                (use input instead).\n\t\t\t//  'keyup'              (DOM L3) A key is released.\n\t\t\telse if (position < 702) {\n\t\t\t\t//  KeyboardEvent\n\t\t\t\tresult = 'Keyboard';\n\t\t\t}\n\n\t\t\t//  'pagehide'           (HTML5) A session history entry is being traversed from.\n\t\t\t//  'pageshow'           (HTML5) A session history entry is being traversed to.\n\t\t\telse if (position < 720) {\n\t\t\t\t//  PageTransitionEvent\n\t\t\t\tresult = 'PageTransition';\n\t\t\t}\n\n\t\t\t//  'popstate'           (HTML5) A session history entry is being navigated to (in certain cases).\n\t\t\telse if (position < 729) {\n\t\t\t\t//  PopStateEvent\n\t\t\t\tresult = 'PopState';\n\t\t\t}\n\n\t\t\t//  'touchcancel'        (Touch Events) A touch point has been disrupted in an implementation-specific manners\n\t\t\t//                                      (too many touch points for example).\n\t\t\t//  'touchend'           (Touch Events) A touch point is removed from the touch surface.\n\t\t\t//  'touchmove'          (Touch Events) A touch point is moved along the touch surface.\n\t\t\t//  'touchstart'         (Touch Events) A touch point is placed on the touch surface.\n\t\t\telse if (position < 771) {\n\t\t\t\t//  TouchEvent\n\t\t\t\tresult = 'Touch';\n\t\t\t}\n\n\t\t\t//  'transitionend'      (Transition Events) A CSS Transition has completed.\n\t\t\telse if (position < 777) {\n\t\t\t\t//  TransitionEvent\n\t\t\t\tresult = 'Transition';\n\t\t\t}\n\n\t\t\t//  'wheel'              (DOM L3) A wheel button of a pointing device is rotated in any direction.\n\t\t\telse if (position < 786) {\n\t\t\t\t//  WheelEvent\n\t\t\t\tresult = 'Wheel';\n\t\t\t}\n\n\t\t\treturn result + 'Event';\n\t\t}\n\n\t\t/**\n\t\t *  Get a property name unique per event type/dom element\n\t\t *  @name    getEventProperty\n\t\t *  @type    function\n\t\t *  @access  internal\n\t\t *  @param   DOMElement target\n\t\t *  @param   string     type\n\t\t *  @return  string name\n\t\t */\n\t\tfunction getEventProperty(target, type) {\n\t\t\treturn '__kxevt_' + type + '_' + konflux.dom.reference(target);\n\t\t}\n\n\t\t/**\n\t\t *  Unify the event object, which makes event more consistent across browsers\n\t\t *  @name    unifyEvent\n\t\t *  @type    function\n\t\t *  @access  internal\n\t\t *  @return  Event object\n\t\t */\n\t\tfunction unifyEvent(e) {\n\t\t\tvar evt = e || window.event;\n\n\t\t\tif (konflux.isType('undefined', evt.target)) {\n\t\t\t\tevt.target = !konflux.isType('undefined', evt.srcElement) ? evt.srcElement : null;\n\t\t\t}\n\n\t\t\tif (konflux.isType('undefined', evt.type)) {\n\t\t\t\tevt.type = evt.eventType;\n\t\t\t}\n\n\t\t\tevt.family = getEventType(evt.type);\n\n\t\t\tif (/^(mouse[a-z]+|drag(?:[a-z]+)?|drop|(?:dbl)?click)$/i.test(evt.type)) {\n\t\t\t\tevt.mouse = konflux.point(\n\t\t\t\t\tevt.pageX ? evt.pageX : (evt.clientX ? evt.clientX + document.body.scrollLeft + document.documentElement.scrollLeft : 0),\n\t\t\t\t\tevt.pageY ? evt.pageY : (evt.clientY ? evt.clientY + document.body.scrollTop + document.documentElement.scrollTop : 0)\n\t\t\t\t);\n\t\t\t}\n\n\t\t\treturn evt;\n\t\t}\n\n\t\t/**\n\t\t *  Prepare an iterator containing all given targets as item\n\t\t *  @name    prepareTargetIterator\n\t\t *  @type    function\n\t\t *  @access  internal\n\t\t *  @param   mixed target [one of: string CSSSelector, DOMElement, DOMNodeList, Array DOMElement, KonfluxIterator DOMElement, window]\n\t\t *  @return  KonfluxIterator target\n\t\t */\n\t\tfunction prepareTargetIterator(targets) {\n\t\t\tif (!targets) {\n\t\t\t\ttargets = [];\n\t\t\t}\n\n\t\t\tif (targets === window) {\n\t\t\t\ttargets = [targets];\n\t\t\t}\n\n\t\t\tif (konflux.isType('string', targets)) {\n\t\t\t\ttargets = document.querySelectorAll(targets);\n\t\t\t}\n\n\t\t\tif (!konflux.isType('number', targets.length)) {\n\t\t\t\ttargets = [targets];\n\t\t\t}\n\n\t\t\treturn konflux.iterator(targets);\n\t\t}\n\n\t\t/**\n\t\t *  Prepare an iterator containing all given events as item\n\t\t *  @name    prepareEventIterator\n\t\t *  @type    function\n\t\t *  @access  internal\n\t\t *  @param   mixed event [one of: string events, Array events, KonfluxIterator events]\n\t\t *  @return  KonfluxIterator events\n\t\t */\n\t\tfunction prepareEventIterator(events) {\n\t\t\tif (konflux.isType('string', events)) {\n\t\t\t\tevents = events.replace(/\\*/g, '').split(/[\\s*,]+/);\n\t\t\t}\n\t\t\telse if (!events) {\n\t\t\t\tevents = [];\n\t\t\t}\n\n\t\t\treturn konflux.iterator(events);\n\t\t}\n\n\t\t/**\n\t\t *  Attach event handler(s) to elements\n\t\t *  @name    listen\n\t\t *  @type    function\n\t\t *  @access  internal\n\t\t *  @param   mixed target [one of: string CSSSelector, DOMElement, DOMNodeList, Array DOMElement, KonfluxIterator DOMElement, window]\n\t\t *  @param   mixed event [one of: string events, Array events, KonfluxIterator events]\n\t\t *  @param   mixed [one of: function handler or string CSSSelector]\n\t\t *  @param   mixed [one of: function handler or bool capture]\n\t\t *  @param   mixed [one of: bool capture or null]\n\t\t *  @return  void\n\t\t */\n\t\tfunction listen(targets, events, filter, handler, capture) {\n\t\t\tif (!delegate) {\n\t\t\t\tdelegate = new KonfluxEventDelegate(unifyEvent);\n\t\t\t}\n\n\t\t\tevents = prepareEventIterator(events);\n\t\t\tprepareTargetIterator(targets).each(function(target) {\n\t\t\t\tevents.each(function(event) {\n\t\t\t\t\tvar setting = delegate.create(target, event, filter, handler, capture || filter ? true : false);\n\n\t\t\t\t\tattach(setting.target, setting.type, setting.delegate, setting.capture);\n\t\t\t\t});\n\t\t\t});\n\t\t}\n\n\t\t/**\n\t\t *  Remove event handlers from elements\n\t\t *  @name    remove\n\t\t *  @type    function\n\t\t *  @access  internal\n\t\t *  @param   mixed [one of: string CSSSelector, DOMElement, DOMNodeList, Array DOMElement, KonfluxIterator DOMElement, function handler, window]\n\t\t *  @param   mixed [one of: string events, Array events, KonfluxIterator events, function handler, null]\n\t\t *  @param   mixed [one of: string CSSSelector, function handler, null]\n\t\t *  @param   mixed [one of: function handler, null]\n\t\t *  @return  void\n\t\t */\n\t\tfunction remove(targets, events, filter, handler) {\n\t\t\tvar result = [],\n\t\t\t\ti;\n\n\t\t\tif (delegate) {\n\t\t\t\tif (!targets) {\n\t\t\t\t\tresult = result.concat(delegate.find(null, null, null, handler));\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tprepareTargetIterator(targets).each(function(target) {\n\t\t\t\t\t\tif (!events) {\n\t\t\t\t\t\t\tresult = result.concat(delegate.find(target, null, null, handler));\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tprepareEventIterator(events).each(function(event) {\n\t\t\t\t\t\t\t\tresult = result.concat(delegate.find(target, event, filter, handler));\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t\tif (result.length > 0) {\n\t\t\t\t\tfor (i = 0; i < result.length; ++i) {\n\t\t\t\t\t\tdetach(result[i].target, result[i].type, result[i].delegate, result[i].capture);\n\t\t\t\t\t\tdelegate.remove(result[i].target, result[i].type, filter, handler);\n\t\t\t\t\t}\n\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn false;\n\t\t}\n\n\t\t/**\n\t\t *  Attach an event handler to the target element\n\t\t *  @name    attach\n\t\t *  @type    function\n\t\t *  @access  internal\n\t\t *  @param   DOMElement target\n\t\t *  @param   string     event\n\t\t *  @param   function   handler\n\t\t *  @param   bool       capture\n\t\t *  @return  void\n\t\t */\n\t\tfunction attach(target, type, handler, capture) {\n\t\t\tvar prop;\n\n\t\t\tif (target.addEventListener) {\n\t\t\t\ttarget.addEventListener(getEventName(type), handler, capture);\n\t\t\t}\n\t\t\telse if (target.attachEvent) {\n\t\t\t\tswitch (getEventType(type)) {\n\t\t\t\t\tcase 'CustomEvent':\n\t\t\t\t\t\tprop = getEventProperty(target, type);\n\t\t\t\t\t\tif (!(prop in target)) {\n\t\t\t\t\t\t\tObject.defineProperty(target, prop, {\n\t\t\t\t\t\t\t\t//  allow us to meddle with the defined property later on (e.g. remove it)\n\t\t\t\t\t\t\t\tconfigurable: true,\n\n\t\t\t\t\t\t\t\t//  prevent this property from showing up in a for .. in loop\n\t\t\t\t\t\t\t\tenumerable: false,\n\t\t\t\t\t\t\t\tget: function() {\n\t\t\t\t\t\t\t\t\treturn type;\n\t\t\t\t\t\t\t\t},\n\n\t\t\t\t\t\t\t\tset: function(callback) {\n\t\t\t\t\t\t\t\t\tvar name = 'on' + type,\n\t\t\t\t\t\t\t\t\t\ti;\n\n\t\t\t\t\t\t\t\t\tif (!(name in this)) {\n\t\t\t\t\t\t\t\t\t\tthis[name] = [];\n\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\tif (konflux.isType('function', callback)) {\n\t\t\t\t\t\t\t\t\t\tthis[name].push(callback);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\t\t\tcallback.returnValue = true;\n\t\t\t\t\t\t\t\t\t\tcallback.srcElement  = this;\n\n\t\t\t\t\t\t\t\t\t\tfor (i = 0; i < this[name].length; ++i) {\n\t\t\t\t\t\t\t\t\t\t\tthis[name][i].apply(this, [callback]);\n\t\t\t\t\t\t\t\t\t\t\tif (!callback.returnValue) {\n\t\t\t\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t//  assign the event handler\n\t\t\t\t\t\ttarget[prop] = handler;\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tdefault:\n\n\t\t\t\t\t\t//  we deliberately ignore the 'capturing', as this will actually route any (such) event through\n\t\t\t\t\t\t//  the capture target in IE8 (which is the only browser using attachEvent\n\t\t\t\t\t\ttarget.attachEvent('on' + type, handler);\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn;\n\t\t}\n\n\t\t/**\n\t\t *  Detach the event associated with the event type, handler and capturing from the target element\n\t\t *  @name    detach\n\t\t *  @type    function\n\t\t *  @access  internal\n\t\t *  @param   DOMElement target\n\t\t *  @param   string     event\n\t\t *  @param   function   handler\n\t\t *  @param   bool       capture\n\t\t *  @return  void\n\t\t */\n\t\tfunction detach(target, type, handler, capture) {\n\t\t\tif (target.removeEventListener) {\n\t\t\t\ttarget.removeEventListener(getEventName(type), handler, capture);\n\t\t\t}\n\t\t\telse if (target.detachEvent) {\n\t\t\t\tswitch (getEventType(type)) {\n\t\t\t\t\tcase 'CustomEvent':\n\t\t\t\t\t\tdelete target[getEventProperty(target, type)];\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tdefault:\n\t\t\t\t\t\ttarget.detachEvent('on' + type, handler);\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t//  Custom events\n\n\t\t/**\n\t\t *  Create an event object and fire it for any given target\n\t\t *  @name    dispatch\n\t\t *  @type    function\n\t\t *  @access  internal\n\t\t *  @param   mixed  target [one of: string CSSSelector, DOMElement, DOMNodeList, Array DOMElement, KonfluxIterator DOMElement]\n\t\t *  @param   string type\n\t\t *  @param   object option\n\t\t *  @return  void\n\t\t */\n\t\tfunction dispatch(targets, name, option) {\n\t\t\tvar type = getEventType(name) || 'CustomEvent',\n\t\t\t\tSupport = konflux.browser.feature(type),\n\t\t\t\tdetail  = option || {},\n\t\t\t\ttrigger = false,\n\t\t\t\tp;\n\n\t\t\t//  IE11 actually has the CustomEvent (and the likes), but one cannot construct those directly as they are objects\n\t\t\tif (Support && konflux.isType('function', Support)) {\n\t\t\t\ttrigger = new Support(name, {\n\t\t\t\t\tdetail: detail,\n\t\t\t\t\tcancelable: true\n\t\t\t\t});\n\t\t\t}\n\t\t\telse if ('createEvent' in document) {\n\t\t\t\ttrigger = document.createEvent(type);\n\t\t\t\tif (option || type === 'CustomEvent') {\n\t\t\t\t\ttrigger.initCustomEvent(name, false, true, detail);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\ttrigger.initEvent(name, false, true);\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if ('createEventObject' in document) {\n\t\t\t\ttrigger = document.createEventObject();\n\t\t\t\ttrigger.eventType = name;\n\t\t\t\ttrigger.detail    = detail;\n\t\t\t}\n\n\t\t\tif (trigger) {\n\t\t\t\tprepareTargetIterator(targets).each(function(target) {\n\t\t\t\t\tif ('dispatchEvent' in target) {\n\t\t\t\t\t\ttarget.dispatchEvent(trigger);\n\t\t\t\t\t}\n\t\t\t\t\telse if ('fireEvent' in target) {\n\t\t\t\t\t\tif (type === 'CustomEvent') {\n\t\t\t\t\t\t\tp = getEventProperty(target, name);\n\n\t\t\t\t\t\t\t//  simply set the event property as we've already set up an setter function on it\n\t\t\t\t\t\t\tif (!konflux.isType('undefined', target[p])) {\n\t\t\t\t\t\t\t\ttarget[p] = trigger;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\ttarget.fireEvent('on' + name, trigger);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t});\n\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\treturn false;\n\t\t}\n\n\t\t//  expose public API\n\n\t\t/**\n\t\t *  Attach event handler(s) to elements\n\t\t *  @name    add\n\t\t *  @type    method\n\t\t *  @access  public\n\t\t *  @param   mixed target [one of: string CSSSelector, DOMElement, DOMNodeList, Array DOMElement, KonfluxIterator DOMElement]\n\t\t *  @param   mixed event [one of: string events, Array events, KonfluxIterator events]\n\t\t *  @param   mixed [one of: function handler or string CSSSelector]\n\t\t *  @param   mixed [one of: function handler or bool capture]\n\t\t *  @param   mixed [one of: bool capture or null]\n\t\t *  @return  KonfluxEvent reference\n\t\t *\n\t\t *  @note    event.add(target, event, handler [,capture]) - add event handler(s) to target(s)\n\t\t *  @note    event.add(target, event, filter, handler [,capture]) - add event handler(s) to a selection of elements in target(s) matching given filter\n\t\t */\n\t\tevent.add = function(targets, events, filter, handler, capture) {\n\t\t\tsetTimeout(function() {\n\t\t\t\tlisten.apply(event, [targets, events].concat(\n\t\t\t\t\tkonflux.isType('function', filter) ? [null, filter, handler] : [filter, handler, capture]\n\t\t\t\t));\n\t\t\t}, 1);\n\n\t\t\treturn event;\n\t\t};\n\n\t\t/**\n\t\t *  Remove event handlers from elements\n\t\t *  @name    remove\n\t\t *  @type    method\n\t\t *  @access  public\n\t\t *  @param   mixed [one of: string CSSSelector, DOMElement, DOMNodeList, Array DOMElement, KonfluxIterator DOMElement, function handler]\n\t\t *  @param   mixed [one of: string events, Array events, KonfluxIterator events, function handler, null]\n\t\t *  @param   mixed [one of: string CSSSelector, function handler, null]\n\t\t *  @param   mixed [one of: function handler, null]\n\t\t *  @return  KonfluxEvent reference\n\t\t *\n\t\t *  @note    event.remove(target)  - remove all event handling from given target(s)\n\t\t *  @note    event.remove(handler) - remove any event handling using given handler from any target\n\t\t *  @note    event.remove(target, event)   - remove given event(s) from given target(s)\n\t\t *  @note    event.remove(target, handler) - remove any event handling using given handler from given target(s)\n\t\t *  @note    event.remove(target, event, filter)  - remove given event(s) using given selector from given target(s)\n\t\t *  @note    event.remove(target, event, handler) - remove given event(s) using given handler from given target(s)\n\t\t *  @note    event.remove(target, event, filter, handler) - remove given event(s) matching given filter using given handler from given target(s)\n\t\t */\n\t\tevent.remove = function(targets, events, filter, handler) {\n\t\t\tvar arg = [targets, events, filter, handler];\n\n\t\t\t//  if the first argument is a function, we assume it is a handler\n\t\t\t//  and remove the events using it from all elements\n\t\t\tif (konflux.isType('function', targets)) {\n\t\t\t\targ = [null, null, null, targets];\n\t\t\t}\n\n\t\t\t//  if the second argument is a function, we assume the first argument\n\t\t\t//  to be the target(s) and remove all events using this handler from\n\t\t\t//  given target(s)\n\t\t\telse if (konflux.isType('function', events)) {\n\t\t\t\targ = [targets, null, null, events];\n\t\t\t}\n\n\t\t\t//  if the third argument is a function, we know it is not a filter\n\t\t\telse if (konflux.isType('function', filter)) {\n\t\t\t\targ = [targets, events, null, filter];\n\t\t\t}\n\n\t\t\tremove.apply(event, arg);\n\t\t\treturn event;\n\t\t};\n\n\t\t/**\n\t\t *  Trigger a custom event\n\t\t *  @name    trigger\n\t\t *  @type    method\n\t\t *  @access  public\n\t\t *  @param   DOMElement target\n\t\t *  @param   string     name\n\t\t *  @return  void\n\t\t */\n\t\tevent.trigger = function(target, name, option) {\n\t\t\treturn dispatch(target, name, option);\n\t\t};\n\n\t\t/**\n\t\t *  Is the browser capable of touch events\n\t\t *  @name    hasTouch\n\t\t *  @type    method\n\t\t *  @access  public\n\t\t *  @return  bool is touch device\n\t\t */\n\t\tevent.hasTouch = function() {\n\t\t\tif (!konflux.isType('boolean', touch)) {\n\t\t\t\ttouch = konflux.browser.supports('touch');\n\t\t\t}\n\n\t\t\treturn touch;\n\t\t};\n\n\t\t/**\n\t\t *  Register handlers which get triggered when the DOM is ready for interactions\n\t\t *  @name    ready\n\t\t *  @type    method\n\t\t *  @access  public\n\t\t *  @param   function handler\n\t\t *  @return  bool     isReady\n\t\t */\n\t\tevent.ready = function(handler) {\n\t\t\t//  the document is ready already\n\t\t\tif (/^interactive|complete$/.test(document.readyState)) {\n\t\t\t\t// make sure we run the 'event' asynchronously\n\t\t\t\tsetTimeout(handler, 1);\n\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\t//  we cannot use the event.listen method, as we need very different event listeners\n\t\t\tif (typeof queue.ready === 'undefined') {\n\t\t\t\tqueue.ready = [];\n\n\t\t\t\tif (document.addEventListener) {\n\t\t\t\t\t//  prefer the 'DOM ready' event\n\t\t\t\t\tdocument.addEventListener('DOMContentLoaded', handleReadyState, false);\n\n\t\t\t\t\t//  failsafe to window.onload\n\t\t\t\t\twindow.addEventListener('load', handleReadyState, false);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\t//  the closest we can get to 'DOMContentLoaded' in IE, this is still prior to onload\n\t\t\t\t\tdocument.attachEvent('onreadystatechange', handleReadyState);\n\n\t\t\t\t\t//  again the failsafe, now IE style\n\t\t\t\t\twindow.attachEvent('onload', handleReadyState);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tqueue.ready.push(handler);\n\t\t\treturn false;\n\t\t};\n\n\t\t//  Announce deprecation\n\t\tevent.listen = konflux.deprecate(\n\t\t\t'konflux.event.listen is deprecated, use konflux.event.add instead (a drop-in replacement)',\n\t\t\tevent.add\n\t\t);\n\t\tevent.live = konflux.deprecate(\n\t\t\t'konflux.event.live is deprecated, use konflux.event.add instead (a drop-in replacement)',\n\t\t\tevent.add\n\t\t);\n\t}\n\n\tkonflux.register('event', new KonfluxEvent());\n\n\t/**\n\t *  Convenience function bridging the event.ready method\n\t *  @name    ready\n\t *  @type    method\n\t *  @access  public\n\t *  @param   function handler\n\t *  @return  bool     is ready\n\t */\n\tkonflux.register('ready', function(handler) {\n\t\treturn 'event' in konflux ? konflux.event.ready(handler) : false;\n\t});\n\n\t//END INCLUDE: core/event [4.15ms, 33.40KB]\n\t//BEGIN INCLUDE: core/style\n\t/**\n\t *  Style(sheet) manipulation\n\t *  @module  style\n\t *  @note    available as konflux.style / kx.style\n\t */\n\tfunction KonfluxStyle() {\n\t\t/*jshint validthis: true*/\n\t\tvar style = this;\n\n\t\t/**\n\t\t *  Obtain the script property notation for given property\n\t\t *  @name    scriptProperty\n\t\t *  @type    function\n\t\t *  @access  internal\n\t\t *  @param   string property\n\t\t *  @return  string script property\n\t\t *  @note    'background-color' => 'backgroundColor'\n\t\t */\n\t\tfunction scriptProperty(property) {\n\t\t\tvar n = 0;\n\n\t\t\tif (property === 'float') {\n\t\t\t\treturn 'cssFloat';\n\t\t\t}\n\n\t\t\twhile ((n = property.indexOf('-', n)) >= 0) {\n\t\t\t\tproperty = property.substr(0, n) + property.charAt(++n).toUpperCase() + property.substring(n + 1);\n\t\t\t}\n\n\t\t\treturn property;\n\t\t}\n\n\t\t/**\n\t\t *  Obtain the CSS property notation for given property\n\t\t *  @name    cssProperty\n\t\t *  @type    function\n\t\t *  @access  internal\n\t\t *  @param   string property\n\t\t *  @return  string CSS property\n\t\t *  @note    'backgroundColor' => 'background-color'\n\t\t */\n\t\tfunction cssProperty(property) {\n\t\t\tif (property === 'cssFloat') {\n\t\t\t\tproperty = 'float';\n\t\t\t}\n\n\t\t\treturn property.replace(/([A-Z])/g, '-$1').toLowerCase();\n\t\t}\n\n\t\t/**\n\t\t *  Determine whether or not the property is supported and try a vendor prefix, otherwise return false\n\t\t *  @name    hasProperty\n\t\t *  @type    function\n\t\t *  @access  internal\n\t\t *  @param   string  property\n\t\t *  @param   DOMNode target [optional, default undefined - document.body]\n\t\t *  @return  mixed  (one of: string (script)property, or false)\n\t\t */\n\t\tfunction hasProperty(property, target) {\n\t\t\tproperty = scriptProperty(property);\n\t\t\ttarget   = target || document.body;\n\n\t\t\tif (property in target.style) {\n\t\t\t\treturn property;\n\t\t\t}\n\n\t\t\tproperty = konflux.browser.prefix() + konflux.string.ucFirst(property);\n\t\t\tif (property in target.style) {\n\t\t\t\treturn property;\n\t\t\t}\n\n\t\t\treturn false;\n\t\t}\n\n\t\t/**\n\t\t *  Obtain all local stylesheets, where local is determined on a match of the domain\n\t\t *  @name    getLocalStylesheets\n\t\t *  @type    function\n\t\t *  @access  internal\n\t\t *  @return  array stylesheets\n\t\t */\n\t\tfunction getLocalStylesheets() {\n\t\t\tvar all = document.styleSheets,\n\t\t\t\tlist = [],\n\t\t\t\ti;\n\n\t\t\tfor (i = 0; i < all.length; ++i) {\n\t\t\t\tif (konflux.url.isLocal(all[i].href)) {\n\t\t\t\t\tlist.push(all[i]);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn list;\n\t\t}\n\n\t\t/**\n\t\t *  Obtain specific stylesheets\n\t\t *  @name    getStylesheet\n\t\t *  @type    function\n\t\t *  @access  internal\n\t\t *  @param   string name [optional, default 'all' - all stylesheets. Possible values 'first', 'last', 'all' or string filename]\n\t\t *  @param   bool   includeOffset [optional, default false - local stylesheets only]\n\t\t *  @return  array stylesheets\n\t\t */\n\t\tfunction getStylesheet(name, includeOffsite) {\n\t\t\tvar list = includeOffsite ? document.styleSheets : getLocalStylesheets(),\n\t\t\t\tmatch = [],\n\t\t\t\ti;\n\n\t\t\tswitch (name) {\n\t\t\t\t//  get the first stylesheet from the list of selected stylesheets\n\t\t\t\tcase 'first':\n\t\t\t\t\tif (list.length > 0) {\n\t\t\t\t\t\tmatch = [list[0]];\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\t//  get the last stylesheet from the list of selected stylesheets\n\t\t\t\tcase 'last':\n\t\t\t\t\tif (list.length > 0) {\n\t\t\t\t\t\tmatch = [list[list.length - 1]];\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\n\t\t\t\t\t//  if no name was provided, return the entire list of (editable) stylesheets\n\t\t\t\t\tif (name === 'all') {\n\t\t\t\t\t\tmatch = list;\n\t\t\t\t\t}\n\t\t\t\t\telse if (!name) {\n\t\t\t\t\t\tmatch = false;\n\t\t\t\t\t}\n\n\t\t\t\t\t//  search for the stylesheet(s) whose href matches the given name\n\t\t\t\t\telse if (list.length > 0) {\n\t\t\t\t\t\tfor (i = 0; i < list.length; ++i) {\n\t\t\t\t\t\t\tif (list[i].href && list[i].href.substr(-name.length) === name) {\n\t\t\t\t\t\t\t\tmatch.push(list[i]);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse if (list[i].title && list[i].title === name) {\n\t\t\t\t\t\t\t\tmatch.push(list[i]);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\treturn match;\n\t\t}\n\n\t\t/**\n\t\t *  Obtain a stylesheet by its url or title\n\t\t *  @name    findStylesheet\n\t\t *  @type    function\n\t\t *  @access  internal\n\t\t *  @param   string url\n\t\t *  @param   string name\n\t\t *  @return  StyleSheet (bool false if not found)\n\t\t */\n\t\tfunction findStylesheet(url, name) {\n\t\t\tvar match = getStylesheet(url, true);\n\t\t\tif (name && match.length === 0) {\n\t\t\t\tmatch = getStylesheet(name, true);\n\t\t\t}\n\n\t\t\treturn match.length > 0 ? match[0] : false;\n\t\t}\n\n\t\t/**\n\t\t *  Create a new stylesheet\n\t\t *  @name    createStylesheet\n\t\t *  @type    function\n\t\t *  @access  internal\n\t\t *  @param   string url\n\t\t *  @param   bool   before (effectively true for being the first stylesheet, anything else for last)\n\t\t *  @param   string name\n\t\t *  @return  style node\n\t\t */\n\t\tfunction createStylesheet(url, before, name) {\n\t\t\tvar element = findStylesheet(url, name),\n\t\t\t\thead = document.head || document.getElementsByTagName('head')[0];\n\n\t\t\tif (!element) {\n\t\t\t\telement = document.createElement(url ? 'link' : 'style');\n\t\t\t\telement.setAttribute('type', 'text/css');\n\t\t\t\telement.setAttribute('title', name || 'konflux.style.' + konflux.unique());\n\n\t\t\t\tif (/link/i.test(element.nodeName)) {\n\t\t\t\t\telement.setAttribute('rel', 'stylesheet');\n\t\t\t\t\telement.setAttribute('href', url);\n\t\t\t\t}\n\n\t\t\t\tif (before && document.head.firstChild) {\n\t\t\t\t\thead.insertBefore(element, head.firstChild);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\thead.appendChild(element);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn element;\n\t\t}\n\n\t\t/**\n\t\t *  Parse the style declarations' cssText into key/value pairs\n\t\t *  @name    getStyleProperties\n\t\t *  @type    function\n\t\t *  @access  internal\n\t\t *  @param   CSS Rule\n\t\t *  @return  Object key value pairs\n\t\t */\n\t\tfunction getStyleProperties(declaration) {\n\t\t\tvar list = declaration.split(/\\s*;\\s*/),\n\t\t\t\trules = {},\n\t\t\t\ti, part;\n\n\t\t\tfor (i = 0; i < list.length; ++i) {\n\t\t\t\tpart = list[i].split(/\\s*:\\s*/);\n\n\t\t\t\tif (part[0] !== '') {\n\t\t\t\t\trules[scriptProperty(part.shift())] = normalizeValue(part.join(':'));\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn rules;\n\t\t}\n\n\t\t/**\n\t\t *  Normalize given selector string\n\t\t *  @name    normalizeSelector\n\t\t *  @type    function\n\t\t *  @access  internal\n\t\t *  @param   string selector\n\t\t *  @return  string normalized selector\n\t\t */\n\t\tfunction normalizeSelector(selector) {\n\t\t\treturn selector.split(/\\s+/).join(' ').toLowerCase();\n\t\t}\n\n\t\t/**\n\t\t *  Normalize given CSS value\n\t\t *  @name    normalizeValue\n\t\t *  @type    function\n\t\t *  @access  internal\n\t\t *  @param   string value\n\t\t *  @return  string normalized value\n\t\t */\n\t\tfunction normalizeValue(value) {\n\t\t\tvar pattern = {\n\t\t\t\t\t//  minimize whitespace\n\t\t\t\t\t' ': /\\s+/g,\n\n\t\t\t\t\t//  unify quotes\n\t\t\t\t\t'\"': /[\"']/g,\n\n\t\t\t\t\t//  unify whitespace around separators\n\t\t\t\t\t',': /\\s*,\\s*/g,\n\n\t\t\t\t\t//  remove leading 0 from decimals\n\t\t\t\t\t'.': /\\b0+\\./g,\n\n\t\t\t\t\t//  remove units from 0 value\n\t\t\t\t\t0: /0(?:px|em|%|pt)\\b/g\n\t\t\t\t},\n\t\t\t\tp;\n\n\t\t\tfor (p in pattern) {\n\t\t\t\tvalue = value.replace(pattern[p], p);\n\t\t\t}\n\n\t\t\t//  most browsers will recalculate hex color notation to rgb, so we do the same\n\t\t\tpattern = value.match(/#([0-9a-f]+)/);\n\t\t\tif (pattern && pattern.length > 0) {\n\t\t\t\tpattern = pattern[1];\n\t\t\t\tif (pattern.length % 3 !== 0) {\n\t\t\t\t\tpattern = konflux.string.pad(pattern, 6, '0');\n\t\t\t\t}\n\t\t\t\telse if (pattern.length === 3) {\n\t\t\t\t\tpattern = pattern[0] + pattern[0] + pattern[1] + pattern[1] + pattern[2] + pattern[2];\n\t\t\t\t}\n\n\t\t\t\tvalue = 'rgb(' + [\n\t\t\t\t\tparseInt(pattern[0] + pattern[1], 16),\n\t\t\t\t\tparseInt(pattern[2] + pattern[3], 16),\n\t\t\t\t\tparseInt(pattern[4] + pattern[5], 16)\n\t\t\t\t].join(',') + ')';\n\t\t\t}\n\n\t\t\treturn value;\n\t\t}\n\n\t\t/**\n\t\t *  Add one or more css classes to given element\n\t\t *  @name    addClass\n\t\t *  @type    method\n\t\t *  @access  public\n\t\t *  @param   DOMelement element\n\t\t *  @param   string classes (separated by any combination of whitespace and/or comma\n\t\t *  @return  string classes\n\t\t */\n\t\tstyle.addClass = function(element, classes) {\n\t\t\tvar current = konflux.string.trim(element.className).split(/\\s+/);\n\n\t\t\telement.className = current.concat(konflux.array.diff(classes.split(/[,\\s]+/), current)).join(' ');\n\n\t\t\treturn element.className;\n\t\t};\n\n\t\t/**\n\t\t *  Remove one or more css classes from given element\n\t\t *  @name    removeClass\n\t\t *  @type    method\n\t\t *  @access  public\n\t\t *  @param   DOMElement element\n\t\t *  @param   string classes (separated by any combination of whitespace and/or comma\n\t\t *  @return  string classes\n\t\t */\n\t\tstyle.removeClass = function(element, classes) {\n\t\t\tvar delta = konflux.string.trim(element.className).split(/\\s+/),\n\t\t\t\tclassList = konflux.string.trim(classes).split(/[,\\s]+/),\n\t\t\t\ti, p;\n\n\t\t\tfor (i = 0; i < classList.length; ++i) {\n\t\t\t\tp = konflux.array.contains(delta, classList[i]);\n\n\t\t\t\tif (p !== false) {\n\t\t\t\t\tdelta.splice(p, 1);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\telement.className = delta.join(' ');\n\n\t\t\treturn element.className;\n\t\t};\n\n\t\t/**\n\t\t *  Toggle one or more css classes on given element\n\t\t *  @name    toggleClass\n\t\t *  @type    method\n\t\t *  @access  public\n\t\t *  @param   DOMElement element\n\t\t *  @param   string classes (separated by any combination of whitespace and/or comma\n\t\t *  @return  string classes\n\t\t */\n\t\tstyle.toggleClass = function(element, classes) {\n\t\t\tvar current = konflux.string.trim(element.className).split(/\\s+/),\n\t\t\t\tclassList = konflux.string.trim(classes).split(/[,\\s]+/),\n\t\t\t\ti, p;\n\n\t\t\tfor (i = 0; i < classList.length; ++i) {\n\t\t\t\tp = konflux.array.contains(current, classList[i]);\n\t\t\t\tif (p !== false) {\n\t\t\t\t\tcurrent.splice(p, 1);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tcurrent.push(classList[i]);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\telement.className = current.join(' ');\n\n\t\t\treturn element.className;\n\t\t};\n\n\t\t/**\n\t\t *  Apply style rules to target DOMElement\n\t\t *  @name    inline\n\t\t *  @type    method\n\t\t *  @access  public\n\t\t *  @param   DOMElement target\n\t\t *  @param   object style rules\n\t\t *  @return  KonfluxStyle reference\n\t\t */\n\t\tstyle.inline = function(target, rules) {\n\t\t\tvar p, q;\n\n\t\t\tfor (p in rules) {\n\t\t\t\tq = hasProperty(p);\n\n\t\t\t\tif (q) {\n\t\t\t\t\ttarget.style[q] = rules[p];\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn style;\n\t\t};\n\n\t\t/**\n\t\t *  Obtain a CSS selector for given element\n\t\t *  @name    selector\n\t\t *  @type    method\n\t\t *  @access  public\n\t\t *  @param   DOMElement target\n\t\t *  @param   bool       skipNode [optional, default false - include node name]\n\t\t *  @return  string selector\n\t\t */\n\t\tstyle.selector = function(target, skipNode) {\n\t\t\tvar node = target.nodeName.toLowerCase(),\n\t\t\t\tid = target.hasAttribute('id') ? '#' + target.getAttribute('id') : null,\n\t\t\t\tclasses = target.hasAttribute('class') ? '.' + konflux.string.trim(target.getAttribute('class')).split(/\\s+/).join('.') : null,\n\t\t\t\tselect = '';\n\n\t\t\tif (arguments.length === 1 || id || classes) {\n\t\t\t\tselect = (skipNode ? '' : node) + (id || classes || '');\n\t\t\t}\n\n\t\t\treturn konflux.string.trim((!id && target.parentNode && target !== document.body ? style.selector(target.parentNode, true) + ' ' : '') + select);\n\t\t};\n\n\t\t/**\n\t\t *  Obtain a stylesheet by its name or by a mnemonic (first, last, all)\n\t\t *  @name    sheet\n\t\t *  @type    method\n\t\t *  @access  public\n\t\t *  @param   string target [optional, default 'all' - all stylesheets. Possible values 'first', 'last', 'all' or string filename]\n\t\t *  @param   bool   editable [optional, default true - only editable stylesheets]\n\t\t *  @return  array  stylesheets\n\t\t */\n\t\tstyle.sheet = function(target, editable) {\n\t\t\tvar list = getStylesheet(konflux.isType('string', target) ? target : null, editable === false ? true : false),\n\t\t\t\ti;\n\n\t\t\tif (konflux.isType('undefined', target.nodeName)) {\n\t\t\t\tfor (i = 0; i < list.length; ++i) {\n\t\t\t\t\tif (list[i].ownerNode === target) {\n\t\t\t\t\t\treturn [list[i]];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn list;\n\t\t};\n\n\t\t/**\n\t\t *  Create a new stylesheet, either as first or last\n\t\t *  @name    create\n\t\t *  @type    method\n\t\t *  @access  public\n\t\t *  @param   bool  before all other stylesheets\n\t\t *  @return  styleSheet\n\t\t */\n\t\tstyle.create = function(name, before) {\n\t\t\tvar element = createStylesheet(false, before, name);\n\n\t\t\treturn element.sheet || false;\n\t\t};\n\n\t\t/**\n\t\t *  Load an external stylesheet, either as first or last\n\t\t *  @name    load\n\t\t *  @type    method\n\t\t *  @access  public\n\t\t *  @param   string   url the url of the stylesheet to load\n\t\t *  @param   function callback\n\t\t *  @param   bool     before all other style sheets\n\t\t *  @return  style node (<link...> element)\n\t\t */\n\t\tstyle.load = function(url, callback, before) {\n\t\t\tvar style = createStylesheet(url, before);\n\n\t\t\t//  if style is a StyleSheet object, it has the ownerNode property containing the actual DOMElement in which it resides\n\t\t\tif (konflux.isType('undefined', style.ownerNode)) {\n\t\t\t\tstyle = style.ownerNode;\n\n\t\t\t\t//  it is safe to assume here that the stylesheet was loaded, hence we need to apply the callback (with a slight delay, so the order of returning and execution of the callback is the same for both load scenario's)\n\t\t\t\tif (callback) {\n\t\t\t\t\tsetTimeout(function() {\n\t\t\t\t\t\tcallback.apply(style, [style]);\n\t\t\t\t\t}, 1);\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if (callback) {\n\t\t\t\tkonflux.event.add(style, 'load', function(e) {\n\t\t\t\t\tcallback.apply(style, [e]);\n\t\t\t\t});\n\t\t\t}\n\n\t\t\treturn style;\n\t\t};\n\n\t\t/**\n\t\t *  Determine whether or not the given style (node) is editable\n\t\t *  @name    isEditable\n\t\t *  @type    method\n\t\t *  @access  public\n\t\t *  @param   Stylesheet object or DOMelement style/link\n\t\t *  @return  bool  editable\n\t\t */\n\t\tstyle.isEditable = function(stylesheet) {\n\t\t\tvar list = getLocalStylesheets(),\n\t\t\t\tnode = konflux.isType('undefined', stylesheet.ownerNode) ? stylesheet.ownerNode : stylesheet,\n\t\t\t\ti;\n\n\t\t\tfor (i = 0; i < list.length; ++i) {\n\t\t\t\tif (list[i].ownerNode === node) {\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn false;\n\t\t};\n\n\t\t/**\n\t\t *  Create and add a new style rule\n\t\t *  @name    add\n\t\t *  @type    method\n\t\t *  @access  public\n\t\t *  @param   string selector\n\t\t *  @param   mixed  rules (one of; object {property: value} or string 'property: value')\n\t\t *  @param   mixed  sheet (either a sheet object or named reference, like 'first', 'last' or file name)\n\t\t *  @param   bool   skipNode [optional, default false - include node name]\n\t\t *  @return  int    index at which the rule was added\n\t\t */\n\t\tstyle.add = function(selector, rules, sheet, skipNode) {\n\t\t\tvar rule = '',\n\t\t\t\tfind, p, pr;\n\n\t\t\t//  in case the selector is not a string but a DOMElement, we go out and create a selector from it\n\t\t\tif (konflux.isType('object', selector) && 'nodeType' in selector) {\n\t\t\t\tselector = style.selector(selector, skipNode) || style.selector(selector);\n\t\t\t}\n\n\t\t\t//  make the rules into an object\n\t\t\tif (konflux.isType('string', rules)) {\n\t\t\t\trules = getStyleProperties(rules);\n\t\t\t}\n\n\t\t\t//  if rules isn't an object, we exit right here\n\t\t\tif (!konflux.isType('object', rules)) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\t//  if no sheet was provided, or a string reference to a sheet was provided, resolve it\n\t\t\tif (!sheet || konflux.isType('string', sheet)) {\n\t\t\t\tsheet = getStylesheet(sheet || 'last');\n\t\t\t}\n\n\t\t\t//  in case we now have a list of stylesheets, we either want one (if there's just one) or we add the style to all\n\t\t\tif (sheet instanceof Array) {\n\t\t\t\tif (sheet.length === 1) {\n\t\t\t\t\tsheet = sheet[0];\n\t\t\t\t}\n\t\t\t\telse if (sheet.length <= 0) {\n\t\t\t\t\tsheet = createStylesheet().sheet;\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\trule = true;\n\t\t\t\t\tfor (p = 0; p < sheet.length; ++p) {\n\t\t\t\t\t\trule = rule && style.add(selector, rules, sheet[p]);\n\t\t\t\t\t}\n\n\t\t\t\t\treturn rule;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t//  populate the find buffer, so we can determine which style rules we actually need\n\t\t\tfind = style.find(selector, sheet);\n\t\t\tfor (p in rules) {\n\t\t\t\tif (!(p in find) || normalizeValue(find[p]) !== normalizeValue(rules[p])) {\n\t\t\t\t\tpr = hasProperty(p);\n\t\t\t\t\tif (pr) {\n\t\t\t\t\t\trule += (rule !== '' ? ';' : '') + cssProperty(pr) + ':' + rules[p];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t//  finally, add the rules to the stylesheet\n\t\t\tif (sheet.addRule) {\n\t\t\t\treturn sheet.addRule(selector, rule);\n\t\t\t}\n\t\t\telse if (sheet.insertRule) {\n\t\t\t\treturn sheet.insertRule(selector + '{' + rule + '}', sheet.cssRules.length);\n\t\t\t}\n\n\t\t\treturn false;\n\t\t};\n\n\t\t/**\n\t\t *  Find all style rules for given selector (in optionally given sheet)\n\t\t *  @name    find\n\t\t *  @type    method\n\t\t *  @access  public\n\t\t *  @param   string selector\n\t\t *  @param   mixed  sheet [optional, either a sheet object or named reference, like 'first', 'last' or file name]\n\t\t *  @return  object style rules\n\t\t */\n\t\tstyle.find = function(selector, sheet) {\n\t\t\tvar match = {},\n\t\t\t\trules, i, j;\n\n\t\t\tif (selector) {\n\t\t\t\tselector = normalizeSelector(selector);\n\t\t\t}\n\n\t\t\tif (!sheet) {\n\t\t\t\tsheet = getStylesheet();\n\t\t\t}\n\t\t\telse if (!(sheet instanceof Array)) {\n\t\t\t\tsheet = [sheet];\n\t\t\t}\n\n\t\t\tfor (i = 0; i < sheet.length; ++i) {\n\t\t\t\trules = konflux.type(sheet[i].cssRules) ? sheet[i].cssRules : sheet[i].rules;\n\t\t\t\tif (rules && rules.length) {\n\t\t\t\t\tfor (j = 0; j < rules.length; ++j) {\n\t\t\t\t\t\tif ('selectorText' in rules[j] && (!selector || normalizeSelector(rules[j].selectorText) === selector)) {\n\t\t\t\t\t\t\tmatch = konflux.combine(match, getStyleProperties(rules[j].style.cssText));\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn match;\n\t\t};\n\n\t\t/**\n\t\t *  Get the given style property from element\n\t\t *  @name    get\n\t\t *  @type    method\n\t\t *  @access  public\n\t\t *  @param   DOMElement element\n\t\t *  @param   string     property\n\t\t *  @param   string     pseudo tag [optional, default undefined - no pseudo tag]\n\t\t *  @return  string     value\n\t\t */\n\t\tstyle.get = function(element, property, pseudo) {\n\t\t\tvar value;\n\n\t\t\tproperty = hasProperty(property);\n\t\t\tif (property) {\n\t\t\t\tif (window.getComputedStyle) {\n\t\t\t\t\tvalue = document.defaultView.getComputedStyle(element, pseudo || null).getPropertyValue(cssProperty(property));\n\t\t\t\t}\n\t\t\t\telse if (element.currentStyle) {\n\t\t\t\t\tvalue = element.currentStyle(scriptProperty(property));\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn value;\n\t\t};\n\n\t\t/**\n\t\t *  Determine whether or not the property is supported and try a vendor prefix, otherwise return false\n\t\t *  @name    property\n\t\t *  @type    method\n\t\t *  @access  public\n\t\t *  @param   string  property\n\t\t *  @param   DOMNode target [optional, default undefined - document.body]\n\t\t *  @return  mixed  (one of: string (script)property, or false)\n\t\t */\n\t\tstyle.property = hasProperty;\n\n\t\t/**\n\t\t *  Calculate the specificity of a selector\n\t\t *  @name    specificity\n\t\t *  @type    method\n\t\t *  @access  public\n\t\t *  @param   string selector\n\t\t *  @return  string specificity ('0.0.0.0')\n\t\t */\n\t\tstyle.specificity = function(selector) {\n\t\t\tvar result = [0, 0, 0, 0],\n\t\t\t\tmatch = konflux.string.trim(selector.replace(/([#\\.\\:\\[]+)/g, ' $1')).split(/[^a-z0-9\\.\\[\\]'\":\\*\\.#=_-]+/),\n\t\t\t\ti;\n\n\t\t\tfor (i = 0; i < match.length; ++i) {\n\t\t\t\t++result[/^#/.test(match[i]) ? 1 : (/^(?:\\.|\\[|:[^:])/.test(match[i]) ? 2 : 3)];\n\t\t\t}\n\n\t\t\treturn result.join('.');\n\t\t};\n\t}\n\n\tkonflux.register('style', new KonfluxStyle());\n\n\t//END INCLUDE: core/style [2.16ms, 17.58KB]\n\t//BEGIN INCLUDE: core/storage\n\t/**\n\t *  Storage object, a simple wrapper for localStorage\n\t *  @module  storage\n\t *  @note    available as konflux.storage / kx.storage\n\t */\n\tfunction KonfluxStorage() {\n\t\t/*jshint validthis: true*/\n\t\tvar ls = this,\n\t\t\tmaxSize = 2048,\n\t\t\tstorage = konflux.isType('undefined', window.localStorage) ? window.localStorage : false,\n\t\t\tfragmentPattern = /^\\[fragment:([0-9]+),([0-9]+),([a-z0-9_]+)\\]$/;\n\n\t\t/**\n\t\t *  Combine stored fragments together into the original data string\n\t\t *  @name    combineFragments\n\t\t *  @type    function\n\t\t *  @access  internal\n\t\t *  @param   string data index\n\t\t *  @return  string data combined\n\t\t */\n\t\tfunction combineFragments(data) {\n\t\t\tvar match = data ? data.match(fragmentPattern) : false,\n\t\t\t\tpart, fragment, length, variable, i;\n\n\t\t\tif (match) {\n\t\t\t\tfragment = parseInt(match[1], 10);\n\t\t\t\tlength   = parseInt(match[2], 10);\n\t\t\t\tvariable = match[3];\n\t\t\t\tdata     = '';\n\n\t\t\t\tfor (i = 0; i < fragment; ++i) {\n\t\t\t\t\tpart = storage.getItem(variable + i);\n\t\t\t\t\tif (part !== null) {\n\t\t\t\t\t\tdata += part;\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (!data || data.length !== length) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn data;\n\t\t}\n\n\t\t/**\n\t\t *  Split a large data string into several smaller fragments\n\t\t *  @name    createFragments\n\t\t *  @type    function\n\t\t *  @access  internal\n\t\t *  @param   string name\n\t\t *  @param   string data\n\t\t *  @return  bool   success\n\t\t */\n\t\tfunction createFragments(name, data) {\n\t\t\tvar variable = '__' + name,\n\t\t\t\tfragment = Math.ceil(data.length / maxSize),\n\t\t\t\ti;\n\n\t\t\tfor (i = 0; i < fragment; ++i) {\n\t\t\t\tstorage.setItem(variable + i, data.substring(i * maxSize, Math.min((i + 1) * maxSize, data.length)));\n\t\t\t}\n\n\t\t\t//  write the index\n\t\t\tstorage.setItem(name, '[fragment:' + fragment + ',' + data.length + ',' + variable + ']');\n\t\t}\n\n\t\t/**\n\t\t *  Remove all fragmented keys\n\t\t *  @name    dropFragments\n\t\t *  @type    function\n\t\t *  @access  internal\n\t\t *  @param   array  match\n\t\t *  @return  void\n\t\t */\n\t\tfunction dropFragments(match) {\n\t\t\tvar fragment = parseInt(match[1], 10),\n\t\t\t\tvariable = match[3],\n\t\t\t\ti;\n\n\t\t\tfor (i = 0; i < fragment; ++i) {\n\t\t\t\tremove(variable + i);\n\t\t\t}\n\t\t}\n\n\t\t/**\n\t\t *  Obtain all data from localStorage\n\t\t *  @name    getAll\n\t\t *  @type    function\n\t\t *  @access  internal\n\t\t *  @return  mixed  data\n\t\t */\n\t\tfunction getAll() {\n\t\t\tvar result = null,\n\t\t\t\ti, key;\n\n\t\t\tif (storage) {\n\t\t\t\tresult = {};\n\t\t\t\tfor (i = 0; i < storage.length; ++i) {\n\t\t\t\t\tkey = storage.key(i);\n\t\t\t\t\tresult[key] = getItem(key);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn result;\n\t\t}\n\n\t\t/**\n\t\t *  Obtain the data for given name\n\t\t *  @name    getItem\n\t\t *  @type    function\n\t\t *  @access  internal\n\t\t *  @param   string name\n\t\t *  @return  mixed  data\n\t\t */\n\t\tfunction getItem(name) {\n\t\t\tvar data = storage ? storage.getItem(name) : false;\n\n\t\t\tif (data && data.match(fragmentPattern)) {\n\t\t\t\tdata = combineFragments(data);\n\t\t\t}\n\n\t\t\tif (data && data.match(/^[a-z0-9]+:.*$/i)) {\n\t\t\t\tdata = /([a-z0-9]+):(.*)/i.exec(data);\n\t\t\t\tif (data.length > 2 && data[1] === konflux.string.checksum(data[2])) {\n\t\t\t\t\treturn JSON.parse(data[2]);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn data ? data : false;\n\t\t}\n\n\t\t/**\n\t\t *  Set the data for given name\n\t\t *  @name    setItem\n\t\t *  @type    function\n\t\t *  @access  internal\n\t\t *  @param   string name\n\t\t *  @param   mixed  data\n\t\t *  @return  string data\n\t\t */\n\t\tfunction setItem(name, data) {\n\t\t\tdata = JSON.stringify(data);\n\t\t\tdata = konflux.string.checksum(data) + ':' + data;\n\n\t\t\tif (storage) {\n\t\t\t\treturn data.length > maxSize ? createFragments(name, data) : storage.setItem(name, data);\n\t\t\t}\n\n\t\t\treturn false;\n\t\t}\n\n\t\t/**\n\t\t *  Remove the data for given name\n\t\t *  @name    remove\n\t\t *  @type    function\n\t\t *  @access  internal\n\t\t *  @param   string name\n\t\t *  @return  bool   success\n\t\t */\n\t\tfunction remove(name) {\n\t\t\tvar data, match;\n\n\t\t\tif (storage) {\n\t\t\t\tdata = storage.getItem(name);\n\t\t\t\tif (data && (match = data.match(fragmentPattern))) {\n\t\t\t\t\tdropFragments(match);\n\t\t\t\t}\n\n\t\t\t\treturn storage.removeItem(name);\n\t\t\t}\n\n\t\t\treturn false;\n\t\t}\n\n\t\t/**\n\t\t *  Get the data for given name\n\t\t *  @name    get\n\t\t *  @type    method\n\t\t *  @access  public\n\t\t *  @param   string name [optional, default null - get all stored entries]\n\t\t *  @return  mixed  data\n\t\t */\n\t\tls.get = function(name) {\n\t\t\treturn name ? getItem(name) : getAll();\n\t\t};\n\n\t\t/**\n\t\t *  Set the data for given name\n\t\t *  @name    set\n\t\t *  @type    method\n\t\t *  @access  public\n\t\t *  @param   string name\n\t\t *  @param   mixed  data\n\t\t *  @return  void\n\t\t */\n\t\tls.set = setItem;\n\n\t\t/**\n\t\t *  Remove the data for given name\n\t\t *  @name    remove\n\t\t *  @type    method\n\t\t *  @access  public\n\t\t *  @param   string name\n\t\t *  @return  bool   success\n\t\t */\n\t\tls.remove = remove;\n\n\t\t/**\n\t\t *  Get the amount of stored keys\n\t\t *  @name    length\n\t\t *  @type    method\n\t\t *  @access  public\n\t\t *  @return  number stored keys\n\t\t */\n\t\tls.length = function() {\n\t\t\treturn storage ? storage.length : false;\n\t\t};\n\n\t\t/**\n\t\t *  Obtain all the keys\n\t\t *  @name    keys\n\t\t *  @type    method\n\t\t *  @access  public\n\t\t *  @return  Array  keys\n\t\t */\n\t\tls.keys = function() {\n\t\t\tvar key = getAll(),\n\t\t\t\tlist = [],\n\t\t\t\tp;\n\n\t\t\tfor (p in key) {\n\t\t\t\tlist.push(p);\n\t\t\t}\n\n\t\t\treturn list;\n\t\t};\n\n\t\t/**\n\t\t *  Flush all stored items\n\t\t *  @name    flush\n\t\t *  @type    method\n\t\t *  @access  public\n\t\t *  @return  void\n\t\t */\n\t\tls.flush = function() {\n\t\t\tvar list = ls.keys(),\n\t\t\t\ti;\n\t\t\tfor (i = 0; i < list.length; ++i) {\n\t\t\t\tremove(list[i]);\n\t\t\t}\n\t\t};\n\n\t\t/**\n\t\t *  Obtain the (approximate) byte size of the entire storage\n\t\t *  @name    size\n\t\t *  @type    method\n\t\t *  @access  public\n\t\t *  @return  int size\n\t\t */\n\t\tls.size = function() {\n\t\t\treturn decodeURI(encodeURIComponent(JSON.stringify(localStorage))).length;\n\t\t};\n\t}\n\n\tkonflux.register('storage', new KonfluxStorage());\n\n\t//END INCLUDE: core/storage [778.53µs, 5.42KB]\n\t//BEGIN INCLUDE: core/observer\n\t/**\n\t *  Observer object, handles subscriptions to messages\n\t *  @module  observer\n\t *  @note    available as konflux.observer / kx.observer\n\t */\n\tfunction KonfluxObserver() {\n\t\t/*jshint validthis: true*/\n\t\tvar observer = this,\n\t\t\tsubscription = {},\n\t\t\tactive = {};\n\n\t\t/*global KonfluxObservation*/\n\n\t\t//BEGIN INCLUDE: observer/observation\n\t\t/**\n\t\t *  Observation object, instances of this are be provided to all observer notification subscribers\n\t\t *  @name    KonfluxObservation\n\t\t *  @type    module\n\t\t *  @access  internal\n\t\t *  @param   string type\n\t\t *  @param   function handle\n\t\t *  @param   string reference\n\t\t *  @return  KonfluxObservation object\n\t\t */\n\t\tfunction KonfluxObservation(type, handle, reference) {\n\t\t\t'use strict';\n\n\t\t\t/*global konflux, disable, active*/\n\n\t\t\t/*jshint validthis: true*/\n\t\t\tvar observation = this;\n\n\t\t\tobservation.type      = type;\n\t\t\tobservation.reference = reference;\n\t\t\tobservation.timeStamp = konflux.time();\n\t\t\tobservation.timeDelta = konflux.elapsed();\n\n\t\t\t/**\n\t\t\t *  Unsubscribe from the current observer stack\n\t\t\t *  @name    unsubscribe\n\t\t\t *  @type    method\n\t\t\t *  @access  public\n\t\t\t *  @return  void\n\t\t\t */\n\t\t\tobservation.unsubscribe = function() {\n\t\t\t\treturn disable(type, handle);\n\t\t\t};\n\t\t\t/**\n\t\t\t *  Stop the execution of this Observation\n\t\t\t *  @name    stop\n\t\t\t *  @type    method\n\t\t\t *  @access  public\n\t\t\t *  @return  void\n\t\t\t */\n\t\t\tobservation.stop = function() {\n\t\t\t\tactive[reference] = false;\n\t\t\t};\n\t\t}\n\n\t\t//END INCLUDE: observer/observation [1.06ms, 1.02KB]\n\t\t/**\n\t\t *  Create the subscription stack if it does not exist\n\t\t *  @name    ensureSubscriptionStack\n\t\t *  @type    function\n\t\t *  @access  internal\n\t\t *  @param   string stack name\n\t\t *  @return  void\n\t\t */\n\t\tfunction ensureSubscriptionStack(stack) {\n\t\t\tif (typeof subscription[stack] === 'undefined') {\n\t\t\t\tsubscription[stack] = [];\n\t\t\t}\n\t\t}\n\n\t\t/**\n\t\t *  Add handler to specified stack\n\t\t *  @name    add\n\t\t *  @type    function\n\t\t *  @access  internal\n\t\t *  @param   string stack name\n\t\t *  @param   function handler\n\t\t *  @return  int total number of subscriptions in this stack\n\t\t */\n\t\tfunction add(stack, handle) {\n\t\t\tensureSubscriptionStack(stack);\n\n\t\t\treturn subscription[stack].push(handle);\n\t\t}\n\n\t\t/**\n\t\t *  Disable a handler for specified stack\n\t\t *  @name    disable\n\t\t *  @type    function\n\t\t *  @access  internal\n\t\t *  @param   string stack name\n\t\t *  @param   function handler\n\t\t *  @return  void\n\t\t *  @note    this method is used from the Observation object, which would influence the number of\n\t\t *           subscriptions if the subscription itself was removed immediately\n\t\t */\n\t\tfunction disable(stack, handle) {\n\t\t\tvar i;\n\n\t\t\tfor (i = 0; i < subscription[stack].length; ++i) {\n\t\t\t\tif (subscription[stack][i] === handle) {\n\t\t\t\t\tsubscription[stack][i] = false;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t/**\n\t\t *  Remove specified handler (and all disabled handlers) from specified stack\n\t\t *  @name    remove\n\t\t *  @type    function\n\t\t *  @access  internal\n\t\t *  @param   string stack name\n\t\t *  @param   function handler [optional, default null - remove the entire stack]\n\t\t *  @return  array removed handlers\n\t\t */\n\t\tfunction remove(stack, handle) {\n\t\t\tvar out = [],\n\t\t\t\tkeep = [],\n\t\t\t\ti;\n\n\t\t\tensureSubscriptionStack(stack);\n\n\t\t\tfor (i = 0; i < subscription[stack].length; ++i) {\n\t\t\t\t(!subscription[stack][i] || subscription[stack][i] === handle ? out : keep).push(subscription[stack][i]);\n\t\t\t}\n\n\t\t\tsubscription[stack] = keep;\n\n\t\t\treturn out;\n\t\t}\n\n\t\t/**\n\t\t *  Flush specified stack\n\t\t *  @name    flush\n\t\t *  @type    function\n\t\t *  @access  internal\n\t\t *  @param   string stack name\n\t\t *  @return  array removed handlers (false if the stack did not exist);\n\t\t */\n\t\tfunction flush(stack) {\n\t\t\tvar out = false;\n\n\t\t\tif (konflux.isType('undefined', subscription[stack])) {\n\t\t\t\tout = subscription[stack];\n\t\t\t\tdelete subscription[stack];\n\t\t\t}\n\n\t\t\treturn out;\n\t\t}\n\n\t\t/**\n\t\t *  Trigger the handlers in specified stack\n\t\t *  @name    trigger\n\t\t *  @type    function\n\t\t *  @access  internal\n\t\t *  @param   string stack name\n\t\t *  @param   mixed variable1\n\t\t *  @param   mixed ...\n\t\t *  @param   mixed variableN\n\t\t *  @return  void\n\t\t */\n\t\tfunction trigger(stack) {\n\t\t\tvar arg = konflux.array.cast(arguments),\n\t\t\t\tref = konflux.unique(),\n\t\t\t\tpart = stack.split('.'),\n\t\t\t\twildcard = false,\n\t\t\t\tname, i;\n\n\t\t\twhile (part.length >= 0) {\n\t\t\t\tactive[ref] = true;\n\t\t\t\tname = part.join('.') + (wildcard ? (part.length ? '.' : '') + '*' : '');\n\t\t\t\twildcard = true;\n\n\t\t\t\tif (typeof subscription[name] !== 'undefined') {\n\t\t\t\t\tfor (i = 0; i < subscription[name].length; ++i) {\n\t\t\t\t\t\tif (!active[ref]) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (subscription[name][i]) {\n\t\t\t\t\t\t\targ[0] = new KonfluxObservation(stack, subscription[name][i], ref);\n\t\t\t\t\t\t\tsubscription[name][i].apply(subscription[name][i], arg);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (!part.pop()) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tdelete active[ref];\n\t\t}\n\n\t\t/**\n\t\t *  Subscribe a handler to an observer stack\n\t\t *  @name    subscribe\n\t\t *  @type    method\n\t\t *  @access  public\n\t\t *  @param   string stack name\n\t\t *  @param   function handle\n\t\t *  @param   function callback [optional, default undefined]\n\t\t *  @return  KonfluxObserver reference\n\t\t */\n\t\tobserver.subscribe = function(stack, handle, callback) {\n\t\t\tvar list = stack.split(/[\\s,]+/),\n\t\t\t\tresult = true,\n\t\t\t\ti;\n\n\t\t\tfor (i = 0; i < list.length; ++i) {\n\t\t\t\tresult = (add(list[i], handle) ? true : false) && result;\n\t\t\t}\n\n\t\t\tif (callback) {\n\t\t\t\tcallback.apply(observer, [result]);\n\t\t\t}\n\n\t\t\treturn observer;\n\t\t};\n\n\t\t/**\n\t\t *  Unsubscribe a handler from an observer stack\n\t\t *  @name    unsubscribe\n\t\t *  @type    method\n\t\t *  @access  public\n\t\t *  @param   string stack name\n\t\t *  @param   function handle\n\t\t *  @param   function callback [optional, default undefined]\n\t\t *  @return  KonfluxObserver reference\n\t\t */\n\t\tobserver.unsubscribe = function(stack, handle, callback) {\n\t\t\tvar list = stack.split(/[\\s,]+/),\n\t\t\t\tresult = [],\n\t\t\t\ti;\n\n\t\t\tfor (i = 0; i < list.length; ++i) {\n\t\t\t\tresult = result.concat(handle ? remove(list[i], handle) : flush(list[i]));\n\t\t\t}\n\n\t\t\tif (callback) {\n\t\t\t\tcallback.apply(observer, [result]);\n\t\t\t}\n\n\t\t\treturn observer;\n\t\t};\n\n\t\t/**\n\t\t *  Notify all subscribers to a stack\n\t\t *  @name    notify\n\t\t *  @type    method\n\t\t *  @access  public\n\t\t *  @param   string stack name\n\t\t *  @param   mixed  variable1\n\t\t *  @param   mixed  ...\n\t\t *  @param   mixed  variableN\n\t\t *  @return  void\n\t\t */\n\t\tobserver.notify = function() {\n\t\t\tvar arg = konflux.array.cast(arguments),\n\t\t\t\tlist = arg.shift().split(/[\\s,]+/),\n\t\t\t\ti;\n\n\t\t\tfor (i = 0; i < list.length; ++i) {\n\t\t\t\ttrigger.apply(observer, [list[i]].concat(arg));\n\t\t\t}\n\t\t};\n\t}\n\n\tkonflux.register('observer', new KonfluxObserver());\n\n\t//END INCLUDE: core/observer [3.40ms, 6.31KB]\n\t//BEGIN INCLUDE: core/number\n\t/**\n\t *  Number utils\n\t *  @module  number\n\t *  @note    available as konflux.number / kx.number\n\t */\n\tfunction KonfluxNumber() {\n\t\t/*jshint validthis: true*/\n\t\tvar number = this;\n\n\t\t/**\n\t\t *  Test wheter given input is an even number\n\t\t *  @name    even\n\t\t *  @type    method\n\t\t *  @access  public\n\t\t *  @param   number input\n\t\t *  @return  bool even\n\t\t */\n\t\tnumber.even = function(input) {\n\t\t\tinput = +input;\n\n\t\t\treturn (input | 0) === input && input % 2 === 0;\n\t\t};\n\n\t\t/**\n\t\t *  Test wheter given input is an odd number\n\t\t *  @name    odd\n\t\t *  @type    method\n\t\t *  @access  public\n\t\t *  @param   number input\n\t\t *  @return  bool odd\n\t\t */\n\t\tnumber.odd = function(input) {\n\t\t\tinput = +input;\n\n\t\t\treturn (input | 0) === input && !number.even(input);\n\t\t};\n\n\t\t/**\n\t\t *  Test wheter given input lies between the low and high values (including the low and high values)\n\t\t *  @name    between\n\t\t *  @type    method\n\t\t *  @access  public\n\t\t *  @param   number input\n\t\t *  @param   number a\n\t\t *  @param   number b\n\t\t *  @return  bool between\n\t\t */\n\t\tnumber.between = function(input, a, b) {\n\t\t\tinput = +input;\n\t\t\ta     = +a;\n\t\t\tb     = +b;\n\n\t\t\treturn input >= Math.min(a, b) && input <= Math.max(a, b);\n\t\t};\n\n\t\t/**\n\t\t *  Format a number with a given set of decimal length, decimals separator and/or thousands separator\n\t\t *  @name    format\n\t\t *  @type    method\n\t\t *  @access  public\n\t\t *  @param   number input\n\t\t *  @param   number decimals [optional, default 0 - no precision]\n\t\t *  @param   string decimals separator [optional, default '.']\n\t\t *  @param   string thousands separator [optional, default ',']\n\t\t *  @return  string formatted number\n\t\t *  @note    this method is compatible with PHP's number_format function, it either accepts 2 or 4 arguments\n\t\t */\n\t\tnumber.format = function(input, precision, point, separator) {\n\t\t\tvar multiplier = precision ? Math.pow(10, precision) : 0;\n\n\t\t\t//  check whether default values need to be assigned\n\t\t\tpoint     = !konflux.isType('undefined', point) ? point : '.';\n\t\t\tseparator = !konflux.isType('undefined', separator) || arguments.length < 3 ? separator : ',';\n\n\t\t\t//  format the number\n\t\t\tinput = +(('' + input).replace(/[,\\.]+/, '.'));\n\n\t\t\t//  round the last desired decimal\n\t\t\tinput = multiplier > 0 ? Math.round(input * multiplier) / multiplier : input;\n\n\t\t\t//  split input into int value and decimal value\n\t\t\tinput = ('' + (!isFinite(input) ? 0 : +input)).split('.');\n\n\t\t\t//  apply thousands separator, if applicable (number length exceeds 3 and we have a non-empty separator)\n\t\t\tif (input[0].length > 3 && separator && separator !== '') {\n\t\t\t\tinput[0] = konflux.string.chunk(input[0], 3, konflux.string.CHUNK_END).join(separator);\n\t\t\t}\n\n\t\t\treturn input[0] + (precision > 0 ? point + konflux.string.pad(input[1] || '', precision, '0', konflux.string.PAD_RIGHT) : '');\n\t\t};\n\t}\n\n\tkonflux.register('number', new KonfluxNumber());\n\n\t//END INCLUDE: core/number [822.68µs, 2.74KB]\n\t//BEGIN INCLUDE: core/ajax\n\t/**\n\t *  Handle AJAX requests\n\t *  @module  ajax\n\t *  @note    available as konflux.ajax / kx.ajax\n\t */\n\tfunction KonfluxAjax() {\n\t\t/*jshint validthis: true*/\n\t\tvar ajax = this,\n\t\t\tstat = {},\n\t\t\theader = false;\n\n\t\t/*global KonfluxFormData*/\n\n\t\t//BEGIN INCLUDE: ajax/formdata\n\t\t/**\n\t\t *  FormData stub, in case a browser doesn't feature the FormData object\n\t\t *  @name    KonfluxFormData\n\t\t *  @type    module\n\t\t *  @access  internal\n\t\t *  @return  KonfluxFormData object\n\t\t */\n\t\tfunction KonfluxFormData() {\n\t\t\t'use strict';\n\n\t\t\t/*global  konflux*/\n\n\t\t\t/*jshint validthis: true*/\n\t\t\tvar formdata = this,\n\t\t\t\tdata = {};\n\n\t\t\t/**\n\t\t\t *  Append a key/value pair to the KonfluxFormData instance\n\t\t\t *  @name    append\n\t\t\t *  @type    method\n\t\t\t *  @access  public\n\t\t\t *  @param   string key\n\t\t\t *  @param   mixed  value (can be anything but an object)\n\t\t\t *  @return  KonfluxFormData reference\n\t\t\t */\n\t\t\tformdata.append = function(key, value) {\n\t\t\t\tif (konflux.isType('object', value)) {\n\t\t\t\t\tdata[key] = value;\n\t\t\t\t}\n\n\t\t\t\treturn formdata;\n\t\t\t};\n\n\t\t\t/**\n\t\t\t *  Serialize the KonfluxFormData instance into a string\n\t\t\t *  @name    serialize\n\t\t\t *  @type    method\n\t\t\t *  @access  public\n\t\t\t *  @return  string  urlencoded data\n\t\t\t */\n\t\t\tformdata.serialize = function() {\n\t\t\t\tvar r = [],\n\t\t\t\t\tp;\n\n\t\t\t\tfor (p in data) {\n\t\t\t\t\tr.push(p + '=' + encodeURIComponent(data[p]));\n\t\t\t\t}\n\n\t\t\t\treturn r.join('&');\n\t\t\t};\n\n\t\t\t/**\n\t\t\t *  Convenience method to make KonfluxFormData serialization work if used as string\n\t\t\t *  @name    toString\n\t\t\t *  @type    method\n\t\t\t *  @access  public\n\t\t\t *  @return  string urlencodes data\n\t\t\t *  @note    This method is autmatically called when a KonfluxFormData instance is used as string (e.g. KonfluxFormData + '')\n\t\t\t */\n\t\t\tKonfluxFormData.toString = function() {\n\t\t\t\treturn formdata.serialize();\n\t\t\t};\n\t\t}\n\n\t\t//END INCLUDE: ajax/formdata [554.03µs, 1.41KB]\n\t\t/**\n\t\t *  Obtain the default headers\n\t\t *  @name    getHeader\n\t\t *  @type    function\n\t\t *  @access  internal\n\t\t *  @param   string url\n\t\t *  @return  object headers\n\t\t */\n\t\tfunction getHeader(url) {\n\t\t\tif (!header) {\n\t\t\t\theader = {\n\t\t\t\t\t'X-Konflux': 'konflux/' + konflux.string.ascii(konflux.version())\n\t\t\t\t};\n\t\t\t}\n\n\t\t\t// Since browsers \"preflight\" requests for cross-site HTTP requests with\n\t\t\t// custom headers we should not try to send them, or request will fail\n\t\t\t// silently\n\t\t\t//\n\t\t\t// For more information, please refer to:\n\t\t\t// https://developer.mozilla.org/en-US/docs/Web/HTTP/Access_control_CORS#Preflighted_requests\n\n\t\t\treturn konflux.url.isLocal(url) ? header : {};\n\t\t}\n\n\t\t/**\n\t\t *  Obtain a new XHR object\n\t\t *  @name    getXMLHTTPRequest\n\t\t *  @type    function\n\t\t *  @access  internal\n\t\t *  @return  object XMLHttpRequest\n\t\t */\n\t\tfunction getXMLHTTPRequest() {\n\t\t\tvar xhr     = new XMLHttpRequest();\n\t\t\txhr.__kxref = konflux.unique();\n\n\t\t\treturn xhr;\n\t\t}\n\n\t\t/**\n\t\t *  Request a resource using XHR\n\t\t *  @name    request\n\t\t *  @type    function\n\t\t *  @access  internal\n\t\t *  @param   object config\n\t\t *  @return  object XMLHttpRequest\n\t\t */\n\t\tfunction request(config) {\n\t\t\tvar url     = 'url' in config ? config.url : (konflux.url ? konflux.url.path : null),\n\t\t\t\ttype    = 'type' in config ? config.type.toUpperCase() : 'GET',\n\t\t\t\tdata    = 'data' in config ? prepareData(config.data) : '',\n\t\t\t\tasync   = 'async' in config ? config.async : true,\n\t\t\t\theaders = 'header' in config ? combine(config.header, getHeader(url)) : getHeader(url),\n\t\t\t\txhr     = getXMLHTTPRequest(),\n\t\t\t\tp;\n\n\t\t\tif (!/^(POST|PUT)$/.test(type)) {\n\t\t\t\turl += 'data' in config && config.data !== '' ? '?' + (typeof config.data === 'string' ? config.data : data) : '';\n\t\t\t\tdata = null;\n\t\t\t}\n\n\t\t\txhr.onload = xhrComplete(xhr, config, type);\n\n\t\t\tif ('progress' in config && konflux.isType('function', config.progress)) {\n\t\t\t\tkonflux.event.add(xhr.upload, 'progress', config.progress);\n\t\t\t}\n\n\t\t\tif ('error' in config && konflux.isType('function', config.error)) {\n\t\t\t\tkonflux.event.add(xhr, 'error', config.error);\n\t\t\t}\n\n\t\t\tif ('abort' in config && konflux.isType('function', config.abort)) {\n\t\t\t\tkonflux.event.add(xhr, 'abort', config.abort);\n\t\t\t}\n\n\t\t\txhr.open(type, url, async);\n\t\t\tif (headers) {\n\t\t\t\tfor (p in headers) {\n\t\t\t\t\txhr.setRequestHeader(p, headers[p]);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\txhr.send(data);\n\n\t\t\treturn xhr;\n\t\t}\n\n\t\t/**\n\t\t *  Handle the XMLHTTPRequest 'load'-event\n\t\t *  @name    xhrComplete\n\t\t *  @access  internal\n\t\t *  @param   XMLHTTPRequest  xhr\n\t\t *  @param   object          config\n\t\t *  @param   string          type\n\t\t *  @return  function handler\n\t\t */\n\t\tfunction xhrComplete(xhr, config, type) {\n\t\t\treturn function() {\n\t\t\t\tvar status = Math.floor(this.status * 0.01),\n\t\t\t\t\tstate = false;\n\t\t\t\t++stat[type];\n\n\t\t\t\tif (status === 2 && 'success' in config) {\n\t\t\t\t\tstate = 'success';\n\t\t\t\t\tconfig.success.apply(this, process(this));\n\t\t\t\t}\n\t\t\t\telse if (status >= 4 && 'error' in config) {\n\t\t\t\t\tstate = 'error';\n\t\t\t\t\tconfig.error.apply(this, process(this));\n\t\t\t\t}\n\n\t\t\t\tif ('complete' in config) {\n\t\t\t\t\tstate = !state ? 'complete' : state;\n\t\t\t\t\tconfig.complete.apply(this, [this.status, this.statusText, this]);\n\t\t\t\t}\n\n\t\t\t\tif (state) {\n\t\t\t\t\tkonflux.observer.notify('konflux.ajax.' + type.toLowerCase() + '.' + state, xhr, config);\n\t\t\t\t}\n\t\t\t};\n\t\t}\n\n\t\t/**\n\t\t *  Process an XHR response\n\t\t *  @name    process\n\t\t *  @type    function\n\t\t *  @access  internal\n\t\t *  @param   object XMLHttpRequest\n\t\t *  @return  array  response ([status, response text, XMLHttpRequest])\n\t\t */\n\t\tfunction process(xhr) {\n\t\t\tvar contentType = xhr.getResponseHeader('content-type'),\n\t\t\t\tresult = [\n\t\t\t\t\txhr.status,\n\t\t\t\t\txhr.responseText,\n\t\t\t\t\txhr\n\t\t\t\t],\n\t\t\t\tmatch;\n\n\t\t\tif (contentType && (match = contentType.match(/([^;]+)/))) {\n\t\t\t\tcontentType = match[1];\n\t\t\t}\n\n\t\t\tswitch (contentType) {\n\t\t\t\tcase 'application/json':\n\t\t\t\t\tresult[1] = JSON.parse(result[1]);\n\t\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\treturn result;\n\t\t}\n\n\t\t/**\n\t\t *  Prepare data to be send\n\t\t *  @name    prepareData\n\t\t *  @type    function\n\t\t *  @access  internal\n\t\t *  @param   mixed  data\n\t\t *  @param   string name\n\t\t *  @param   FormData (or KonfluxFormData) object\n\t\t *  @return  FormData (or KonfluxFormData) object\n\t\t */\n\t\tfunction prepareData(data, name, formData) {\n\t\t\tvar r = formData || (typeof FormData !== 'undefined' ? new FormData() : new KonfluxFormData()),\n\t\t\t\tp;\n\n\t\t\tif (typeof File !== 'undefined' && data instanceof File) {\n\t\t\t\tr.append(name, data, data.name);\n\t\t\t}\n\t\t\telse if (typeof Blob !== 'undefined' && data instanceof Blob) {\n\t\t\t\tr.append(name, data, 'blob');\n\t\t\t}\n\t\t\telse if (data instanceof Array || (FileList !== 'undefined' && data instanceof FileList)) {\n\t\t\t\tfor (p = 0; p < data.length; ++p) {\n\t\t\t\t\tprepareData(data[p], (name || '') + '[' + p + ']', r);\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if (konflux.isType('object', data)) {\n\t\t\t\tfor (p in data) {\n\t\t\t\t\tprepareData(data[p], name ? name + '[' + encodeURIComponent(p) + ']' : encodeURIComponent(p), r);\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tr.append(name, data);\n\t\t\t}\n\n\t\t\treturn r;\n\t\t}\n\n\t\t/**\n\t\t *  Obtain a handler function for given request, this handler is triggered by the konflux observer (konflux.ajax.<type>)\n\t\t *  @name    requestType\n\t\t *  @type    function\n\t\t *  @access  internal\n\t\t *  @param   string   type\n\t\t *  @return  function handler\n\t\t */\n\t\tfunction requestType(t) {\n\t\t\tvar handler = function(config) {\n\t\t\t\t\tswitch (konflux.type(config)) {\n\t\t\t\t\t\tcase 'object':\n\t\t\t\t\t\t\tconfig.type = t;\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t//  we assume an URL\n\t\t\t\t\t\tcase 'string':\n\t\t\t\t\t\t\tconfig = {\n\t\t\t\t\t\t\t\turl: config,\n\t\t\t\t\t\t\t\ttype: t\n\t\t\t\t\t\t\t};\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\tconfig = {\n\t\t\t\t\t\t\t\ttype: t\n\t\t\t\t\t\t\t};\n\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\n\t\t\t\t\treturn request(config);\n\t\t\t\t};\n\n\t\t\tstat[t.toUpperCase()] = 0;\n\t\t\tkonflux.observer.subscribe('konflux.ajax.' + t.toLowerCase(), function(ob, config) {\n\t\t\t\thandler(config);\n\t\t\t});\n\n\t\t\treturn handler;\n\t\t}\n\n\t\t/**\n\t\t *  Perform a request\n\t\t *  @name    request\n\t\t *  @type    method\n\t\t *  @access  public\n\t\t *  @param   object config\n\t\t *  @return  object XMLHttpRequest\n\t\t */\n\t\tajax.request = request;\n\n\t\t/**\n\t\t *  Perform a GET request\n\t\t *  @name    get\n\t\t *  @type    method\n\t\t *  @access  public\n\t\t *  @param   object config\n\t\t *  @return  object XMLHttpRequest\n\t\t */\n\t\tajax.get = requestType('GET');\n\n\t\t/**\n\t\t *  Perform a POST request\n\t\t *  @name    post\n\t\t *  @type    method\n\t\t *  @access  public\n\t\t *  @param   object config\n\t\t *  @return  object XMLHttpRequest\n\t\t */\n\t\tajax.post = requestType('POST');\n\n\t\t/**\n\t\t *  Perform a PUT request\n\t\t *  @name    put\n\t\t *  @type    method\n\t\t *  @access  public\n\t\t *  @param   object config\n\t\t *  @return  object XMLHttpRequest\n\t\t */\n\t\tajax.put = requestType('PUT');\n\n\t\t/**\n\t\t *  Perform a DELETE request\n\t\t *  @name    del\n\t\t *  @type    method\n\t\t *  @access  public\n\t\t *  @param   object config\n\t\t *  @return  object XMLHttpRequest\n\t\t */\n\t\tajax.del = requestType('DELETE');\n\n\t\t/**\n\t\t *  Perform a PURGE request (mostly supported by caching servers such as Varnish)\n\t\t *  @name    purge\n\t\t *  @type    method\n\t\t *  @access  public\n\t\t *  @param   object config\n\t\t *  @return  object XMLHttpRequest\n\t\t */\n\t\tajax.purge = requestType('PURGE');\n\t}\n\n\tkonflux.register('ajax', new KonfluxAjax());\n\n\t//END INCLUDE: core/ajax [2.07ms, 8.58KB]\n});\n","/* jshint browser:true */\n/* global kx, kontext */\nkx.ready(function() {\n\t'use strict';\n\n\tvar error = function(status, response, xhr) {\n\t\t\tconsole.error(status, response);\n\t\t},\n\t\tversion = 'v1',\n\t\tendpoint = '/api/' + version + '/blog',\n\t\tlist, detail, blog;\n\n\tfunction load(type, file) {\n\t\tswitch (type) {\n\t\t\tcase 'script':\n\t\t\t\tvar script = document.createElement('script');\n\t\t\t\tscript.src = file;\n\t\t\t\tdocument.body.appendChild(script);\n\t\t\t\tbreak;\n\n\t\t\tcase 'style':\n\t\t\t\tvar style = document.createElement('link');\n\t\t\t\tstyle.rel = 'stylesheet';\n\t\t\t\tstyle.href = file;\n\t\t\t\tdocument.head.appendChild(style);\n\t\t\t\tbreak;\n\t\t}\n\t}\n\n\tkx.event.add('.site-content', 'click', '.blog-item a', function(event) {\n\t\tvar target = this,\n\t\t\tid = target.attributes['data-id'].value;\n\n\t\tevent.preventDefault();\n\n\t\tif (!history.state || ('id' in history.state && history.state.id !== id)) {\n\t\t\thistory.pushState({id: id}, 'test', target.href.replace(window.location.href, ''));\n\t\t}\n\n\t\tkx.ajax.get({\n\t\t\turl: endpoint + '/' + id,\n\t\t\tsuccess: function(status, response, xhr) {\n\t\t\t\tif (!blog) {\n\t\t\t\t\tblog = kontext.bind(response.result, detail);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tObject.keys(response.result).forEach(function(key) {\n\t\t\t\t\t\tblog[key] = response.result[key];\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t\tkx.style.addClass(document.querySelector('.site-header'), '-small');\n\n\t\t\t\tdetail.style.display = 'block';\n\t\t\t\tlist.style.display = 'none';\n\n\t\t\t\twindow.scroll(0, 0);\n\t\t\t},\n\n\t\t\terror: error\n\t\t});\n\n\t\treturn false;\n\t});\n\n\tkx.ajax.get({\n\t\turl: '/template/detail',\n\t\tsuccess: function(status, response, xhr) {\n\t\t\tdocument.querySelector('.site-content').innerHTML += response;\n\n\t\t\tlist = document.querySelector('.blog-list');\n\t\t\tdetail = document.querySelector('.blog-item.-detail');\n\n\t\t\tdetail.style.display = 'none';\n\n\t\t\tkx.ajax.get({\n\t\t\t\turl: endpoint,\n\t\t\t\tsuccess: function(status, response, xhr) {\n\t\t\t\t\tvar anchor;\n\n\t\t\t\t\tkontext.bind({blogs: response.result}, list);\n\n\t\t\t\t\tif (window.location.pathname !== '/' && (anchor = document.querySelector('a[href=\"' + window.location.pathname + '\"]')) === null) {\n\t\t\t\t\t\thistory.replaceState(null, '', '/');\n\t\t\t\t\t\twindow.location.href = '/404';\n\t\t\t\t\t}\n\n\t\t\t\t\tif (anchor) {\n\t\t\t\t\t\tanchor.click();\n\t\t\t\t\t\tlist.style.display = 'none';\n\t\t\t\t\t}\n\t\t\t\t},\n\n\t\t\t\terror: error\n\t\t\t});\n\t\t},\n\n\t\terror: function(status, response, xhr) {\n\n\t\t}\n\t});\n\n\twindow.onpopstate = function(event) {\n\t\tif (!event.state || typeof event.state !== 'object' || !('id' in event.state)) {\n\t\t\tlist.style.display = 'block';\n\t\t\tdetail.style.display = 'none';\n\n\t\t\tkx.style.removeClass(document.querySelector('.site-header'), '-small');\n\n\t\t\treturn true;\n\t\t}\n\n\t\treturn document.querySelector('.blog-item a[data-id=\"' + event.state.id + '\"]').click();\n\t};\n\n\tkontext.extension('html', function(element, model, key) {\n\t\tvar template = element.appendChild(document.createElement('div'));\n\n\t\tmodel.delegation(key).on('update', function(model) {\n\t\t\ttemplate.innerHTML = model[key];\n\t\t});\n\n\t\ttemplate.innerHTML = model[key];\n\t});\n});\n","!function(n){\"use strict\";function e(){function n(){[\"_\",\"public\"].forEach(t)}function e(n,t){return Object.keys(t).forEach(function(r){\"object\"==typeof t[r]&&t[r]?n[r]=e(\"object\"==typeof n[r]?n[r]:{},t[r]):n[r]=t[r]}),n}function t(n){var t={};r[n]=function(n,r){return\"string\"==typeof n?(arguments.length>1&&(t[n]=r),t[n]):(\"object\"==typeof n&&e(t,n),t)}}var r=this;r.combine=function(n){return e(e({},r[\"public\"]()),n||{})},n()}function t(){function n(e,t,r){setTimeout(function(){return e.length&&e.shift().apply(null,t)!==!1?n(e,t,r):void r()},0)}var e=this,t=[];e.add=function(n,e,r){return t.push({type:n,handle:e,invoke:r||1/0}),e},e.remove=function(n,e){var r=[];return t=t.filter(function(t){return n&&t.type!==n||e&&t.handle!==e?!0:(r.push(t.handle),!1)}),r},e.list=function(n){return t.filter(function(e){return!n||\"*\"===n||e.type===n})},e.trigger=function(t,r,o){var i=e.list(t).map(function(n){return--n.invoke<=0&&e.remove(t,n.handle),n.invoke>=0?n.handle:!1}).filter(function(n){return\"function\"==typeof n});arguments.length<3&&\"function\"==typeof arguments[arguments.length-1]&&(o=r,r=[]),n(i,r instanceof Array?r:[r],function(){o&&o()})}}function r(){function e(){var e=n.MutationObserver||n.webkitMutationObserver||!1;e&&(o={observer:e,config:{characterData:!0,characterDataOldValue:!0}})}function t(n,e){var t=typeof n;switch(t){case\"boolean\":return!!e;case\"number\":return+e}return e}function r(n,e){var r=n(),o=t(r,e);o!==r&&n(o)}var o,i=this;i.monitor=function(n,e){o?new o.observer(function(n){n.forEach(function(n){r(e,n.target.nodeValue)})}).observe(n,o.config):n.addEventListener&&n.addEventListener(\"DOMCharacterDataModified\",function(n){r(e,n.newValue)})},e()}function o(){function n(n){var e,t,r=[];if(3===n.nodeType)r.push(n);else for(e=document.createTreeWalker(n,NodeFilter.SHOW_TEXT,null,!1);t=e.nextNode();)r.push(t);return r}function e(n){var t=n.nodeValue.match(/(\\{\\$?[a-z0-9_-]+(?::[^\\}]+)?\\})/i),r=t?0===t.index?n:n.splitText(t.index):null,o=t?r.splitText(t[1].length):null,i=[];return r&&(i.push(r),r.original=r.nodeValue),o&&(i=i.concat(e(o))),i}function t(t){var r=[];return n(t).forEach(function(n){r=r.concat(e(n))}),r}var r=this;r.placeholders=function(n,e){t(n).forEach(e)}}function i(){function n(){function e(n){return s.indexOf(n)>=0}function t(n,t){var r=l;return t||!e(n)&&!d.noquote.test(n)||(r=\"\"),r+n+r}function r(n){return d.trailer.test(n)?r(n.substr(0,n.length-1)):n}function o(n,e){for(var r,o=[];e.length;)if(r=e.shift(),\"\\\\\"!==r[r.length-1]){if(r===n)break;o.push(r)}else d.escape.test(e[0])||(r=r.substr(0,r.length-1)),o.push(r),o.push(e.shift());return t(o.join(\"\"))}function i(n){for(var e=\"\";n.length;)e=u(e,n);return e}function u(n,e){var i=e.shift();switch(i){case\" \":break;case\"}\":case\"]\":n=r(n)+i;break;case'\"':case\"'\":n+=o(i,e);break;default:n+=t(i,\":\"===e[0])}return n}function a(n){var t,r=[];for(t=0;t<n.length;++t)0===r.length||e(n[t])||e(r[r.length-1])?r.push(n[t]):r[r.length-1]+=n[t];return r}function c(n,e){var t=\":\"===e?\"{}\":\"[]\",o=n.indexOf(e),i=2===(n.match(/\"/g)||[]).length&&n.indexOf('\"')<o&&n.lastIndexOf('\"')>o;return i||n[0]===t[0]?n:t[0]+r(n)+t[1]}if(\"undefined\"!=typeof n.prototype.__instance||!(this instanceof n))return n.prototype.__instance||new n;n.prototype.__instance=this;var f=this,s=\"'\\\":,{}[] \",l='\"',d={escape:/[\"\\\\\\/\\b\\f\\n\\r\\t]/,noquote:/^(?:true|false|null|-?[0-9]+(?:\\.[0-9]+)?)$/i,trailer:/[,]+$/};f.prepare=function(n){return\"string\"!=typeof n?\"\":i(a(n)).replace(/^.*?([:,]).*$/,c)},f.parse=function(n){var e=f.prepare(n);return e?JSON.parse(e):null}}function e(){r=new n}function t(n,e){var t,r,o=[];switch(e.nodeType){case 1:e.hasAttribute(n)&&o.push(e);case 9:case 11:for(t=e.querySelectorAll(\"[\"+n+\"]\"),r=0;r<t.length;++r)o.push(t[r])}return o}var r,o=this;o.find=function(n,e,o){t(n,e).forEach(function(e){o(e,r.parse(e.getAttribute(n)))})},e()}function u(){function u(){return a()?(O._({rAF:n.requestAnimationFrame||function(n){setTimeout(n,1e3/60)}}),O[\"public\"]({greedy:!0,attribute:\"data-kontext\"}),k.add(\"ready\",function(n){O._(\"ready\",n||!0)},1),void document.addEventListener(\"DOMContentLoaded\",function(){k.trigger(\"ready\",[void 0,w])},!1)):setTimeout(function(){k.trigger(\"ready\",[\"Unsupported browser\"])},0)}function a(){var n=!0;return n=n&&\"addEventListener\"in document,n=n&&\"defineProperties\"in Object,n=n&&\"getOwnPropertyDescriptor\"in Object}function c(n,e){Object.keys(n).forEach(function(t,r){e(t,n[t],r)})}function f(n){return Array.prototype.slice.call(n)}function s(n,e,t,r,o){var i={enumerable:t};\"boolean\"==typeof o?(i.writable=o,i.value=r):(i.get=r,i.set=o),Object.defineProperty(n,e,i)}function l(n,e){var t=O._(\"extension\")||{};return e&&(t[n]=e,O._(\"extension\",t)),n in t?t[n]:function(){console.error('Kontext: Unknown extension \"'+n+'\"')}}function d(n){var e=new t;return s(n,\"on\",!0,e.add,!1),s(n,\"off\",!0,e.remove,!1),\"object\"==typeof n&&n.on(\"update\",function(){k.trigger(\"update\",f(arguments))}),e}function p(n,e){var t=\"\"+e();n.filter(function(n){return t!==n.nodeValue}).forEach(function(n){n.nodeValue=t})}function h(n){var e;return\"on\"in n&&\"off\"in n||(c(n,function(t,r){var o;y(n,t)||(o=v(r,n,t),s(n,t,!0,o,o),o.on(\"update\",function(){e.trigger(\"update\",[n,t,r,n[t]])})),!r||\"object\"!=typeof r||r instanceof Array||(h(r),r.on(\"update\",function(r,o,i,u){e.trigger(\"update\",[n,t+\".\"+o,i,u])}))}),e=d(n),s(n,\"delegation\",!0,function(e){return y(n,e)},!1)),n}function g(n,e){n.forEach(function(t,r){\"object\"==typeof n[r]&&(n[r]=h(t,e.model,e.key),n[r].on(\"update\",function(){e.emission.trigger(\"update\",[e.model,e.key,e.value])}))})}function v(n,e,t){var r=function(n){var e=arguments.length>0;return e&&(o.value=n),o.emission.trigger(e?\"update\":\"access\",[o.model,o.key,o.value,n]),o.value},o={emission:d(r),element:[],value:n,model:e,key:t};return n instanceof Array&&([\"copyWithin\",\"fill\",\"pop\",\"push\",\"reverse\",\"shift\",\"sort\",\"splice\",\"unshift\"].forEach(function(e){var t;\"function\"==typeof n[e]&&(t=n[e],n[e]=function(){var e=t.apply(n,arguments);return g(n,o),o.emission.trigger(\"update\",[o.model,o.key,o.value]),e})}),g(n,o)),r.scope=function(){!e&&arguments.length>0&&(e=arguments[0]),!t&&arguments.length>1&&(t=arguments[1])},r.element=function(){var n=f(arguments);return n.forEach(function(n){x.monitor(n,r)}),p(n,r),o.element=o.element.concat(n),o.element},o.emission.add(\"update\",function(){O._(\"rAF\")(function(){p(o.element,r)})}),r}function m(n){return\"function\"==typeof n&&\"function\"==typeof n.element}function y(n,e){var t,r=!1,o=e.split(\".\");return o.forEach(function(t,r,o){e=t,r<o.length-1&&(n=n[e])}),e in n&&(m(n[e])?r=n[e]:(t=Object.getOwnPropertyDescriptor(n,e),r=t.get)),r}function b(n,e){var t,r=O._(\"bindings\")||[];if(!e){for(t=[n];t[t.length-1].parentNode;)t.push(t[t.length-1].parentNode);return r.filter(function(n){return t.indexOf(n.target)>=0}).map(function(n){return n.model}).filter(function(n,e,t){return e===t.indexOf(n)})}r.push({model:e,target:n}),O._(\"bindings\",r)}var w=this,O=new e,k=new t,x=new r;w.defaults=function(n,e){return n&&O[\"public\"](n,e),O[\"public\"]()},w.ready=function(n){var e=O._(\"ready\");return k.add(\"ready\",n,1),void 0!==e&&k.trigger(\"ready\",e!==!0?e:void 0),w},w.on=function(n,e){return k.add(n,e)},w.off=function(n,e){return k.remove(n,e)},w.extension=l,w.delegate=function(n){return v(n)},w.bind=function(){var n=f(arguments),e=h(n.shift()),t=n.length?n.pop():{};return\"nodeType\"in t&&(n.push(t),t={}),t=O.combine(t),n.length<=0&&n.push(document.body),n.forEach(function(n){b(n,e),(new i).find(t.attribute,n,function(n,t){c(t,function(t,r){var o=l(t);o(n,e,r,w)})}),(new o).placeholders(n,function(n){var r=n.nodeValue.substr(1,n.nodeValue.length-2).split(/:/),o=r.shift(),i=r.length?r.join(\":\"):\"\",u=y(e,o);u?(u.scope(e,o),u()||u(i)):t.greedy&&(u=v(i,e,o),s(e,o,!0,u,u)),u&&u.element(n)})}),e},w.bindings=function(n){return b(n||document.body)},u()}n.kontext=n.kontext||new u}(window);\nkontext.extension(\"attribute\",function(t,e,n){\"use strict\";function i(n,i){e[i]?t.setAttribute(n,e[i]):t.hasAttribute(n)&&t.removeAttribute(n)}var o=Object.keys(n);e.on(\"update\",function(t,e){o.forEach(function(t){n[t]===e&&i(t,e)})}),o.forEach(function(t){i(t,n[t])})});\nkontext.extension(\"css\",function(n,s,c){\"use strict\";function e(c,e){var t=!!s[e];\"classList\"in n?n.classList[t?\"add\":\"remove\"](c):n.className=n.className.replace(new RegExp(\"(?:^|\\\\s+)\"+e+\"(\\\\s+|$)\"),function(n,s){return s||\"\"})+(t?\" \"+c:\"\")}var t=Object.keys(c);s.on(\"update\",function(n,s){t.forEach(function(n){c[n]===s&&e(n,s)})}),t.forEach(function(n){e(n,c[n])})});\nkontext.extension(\"each\",function(n,t,e){\"use strict\";function o(n){var o;return[\"map\",\"filter\"].forEach(function(i){i in e&&(o=e[i]instanceof Array?e[i]:[e[i]],o.forEach(function(e){if(\"function\"==typeof t[e])n=n[i](t[e]);else{if(\"function\"!=typeof window[e])throw new Error(e+\" is not a \"+i+\" function\");n=n[i](window[e])}}))}),n}function i(n){var t=d.filter(function(t){return t.item===n});return t.length?t[0]:null}function r(n){var o,r=i(n);return r||(o=a.map(function(n){return n.cloneNode(!0)}),r={item:n,model:kontext.bind.apply(kontext,[\"object\"==typeof n?n:{}].concat(o)),nodes:o},r.model.$index=null,r.model.$item=n,r.model.$parent=t[e],d.push(r)),r}function f(n,t){return n.length!==t.length||0!==n.filter(function(n,e){return t[e]!==n}).length}function c(){var i,c=[],a=t[l],d=!1;if(\"object\"==typeof e&&(a=o(a),i=!0),(!u||f(u,a))&&(u=a.slice(),d=!0),d||i){for(a.forEach(function(n,t){var e=r(n);e.model.$index=t,c=c.concat(e.nodes)});n.lastChild;)n.removeChild(n.lastChild);c.forEach(function(t){n.appendChild(t)})}}var l,u,a=[],d=[];if(\"object\"==typeof e){if(l=e.target||!1,!l)throw new Error('Missing target for \"each\"')}else l=e;for(;n.firstChild;)a.push(n.removeChild(n.firstChild).cloneNode(!0));t.on(\"update\",function(n,t){t===l&&c()}),c()});\nkontext.extension(\"event\",function(n,t,e){\"use strict\";function o(e,o,c){n.addEventListener(e,function(n){var e=t.delegation(o),i=e?e():!1;e&&(\"function\"==typeof i?i.apply(null,[n,t,o,c]):e(c))},!1)}function c(n,t){\"object\"==typeof t?(t instanceof Array?t:Object.keys(t)).forEach(function(e){o(n,e,e in t?t[e]:void 0)}):o(n,t)}Object.keys(e).forEach(function(n){c(n,e[n])})});\nkontext.extension(\"input\",function(e,t,n){\"use strict\";function o(e){return e.hasAttribute(\"type\")?e.getAttribute(\"type\"):u.test(e.nodeName)?\"select-\"+(e.multiple?\"multiple\":\"one\"):\"text\"}function i(t){return t in c||(c[t]={model:function(){a(e[t])},element:function(n,o){e[t]=n[o]}}),c[t]}function l(){var o=\"default\"in n?{value:null,label:n[\"default\"]}:!1,i=function(){var i=0;\"options\"in n&&n.options in t&&(o&&(e.options[i]=new Option(o.label,o.value),++i),e.options.length=i,\"object\"==typeof t[n.options]&&(t[n.options]instanceof Array?t[n.options].forEach(function(t,n){\"object\"==typeof t?e.options[n+i]=new Option(t.label||t.value||\"\",t.value||\"\"):e.options[n+i]=new Option(t)}):Object.keys(t[n.options]).forEach(function(o,l){e.options[l+i]=new Option(t[n.options][o],o)})))},l=function(t){var n;for(n=0;n<e.options.length;++n)t instanceof Array?e.options[n].selected=t.indexOf(e.options[n].value)>=0:e.options[n].selected=e.options[n].value===t},s=\"options\"in n?t.delegation(n.options):!1,a=\"value\"in n?t.delegation(n.value):!1,u=a?a():null;a&&(u instanceof Array?e.setAttribute(\"multiple\",\"\"):e.removeAttribute(\"multiple\"),e.addEventListener(\"change\",function(){var o,i;if(e.options.length)if(u instanceof Array)for(o=0;o<e.options.length;++o)e.options[o].selected&&t[n.value].indexOf(e.options[o].value)<0?t[n.value].push(e.options[o].value):!e.options[o].selected&&(i=t[n.value].indexOf(e[o].value))>=0&&t[n.value].splice(i,1);else a(e.options[e.selectedIndex].value)},!1),a.on(\"update\",function(e,t){l(e[t])})),(s||a)&&(i(),l(u))}var s,a,u=/^select/i,c={};switch(o(e)){case\"checkbox\":case\"radio\":s=\"checked\";break;case\"select\":case\"select-one\":case\"select-multiple\":l();break;default:s=\"value\"}s&&(a=t.delegation(n[s]),a&&(e.addEventListener(\"input\",i(s).model,!1),e.addEventListener(\"change\",i(s).model,!1),a.on(\"update\",i(s).element),e[s]=a()))});\nkontext.extension(\"text\",function(e,t,i){\"use strict\";var n=e.firstChild&&3===e.firstChild.nodeType?e.firstChild:document.createTextNode(t[i]),r=t.delegation(i);r&&(n.parentNode!==e&&n!==e.firstChild&&e.insertBefore(n,e.firstChild),r.element(n))});\n"],"sourceRoot":"/source/"}