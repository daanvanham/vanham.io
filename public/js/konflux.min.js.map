{"version":3,"sources":["konflux.js"],"names":["window","register","undefined","Konflux","init","timestamp","kx","time","empty","p","types","array","a","length","object","o","boolean","b","number","n","string","s","test","t","type","isType","variable","full","check","substr","parseInt","this","counter","Date","now","getTime","elapsed","day","hour","minute","delta","Math","abs","days","floor","hours","minutes","seconds","ms","zero","unique","toString","combine","i","obj","arg","arguments","Array","prototype","slice","call","shift","explicit","name","result","exec","constructor","version","info","match","split","prop","deprecate","message","callback","scope","shown","method","console","apply","module","konflux","KonfluxURL","parse","location","query","replace","c","url","current","href","isLocal","domain","KonfluxTiming","KonfluxTimingDelay","handler","timeout","reference","cancel","clearTimeout","timer","start","setTimeout","raf","browser","feature","ready","delay","remove","stack","create","timing","KonfluxArray","contains","v","diff","ret","push","range","r","shuffle","j","x","random","cast","mixed","len","e","KonfluxString","hashCode","l","charCodeAt","hash","pad","ceil","ord","chr","String","fromCharCode","join","PAD_LEFT","PAD_BOTH","checksum","uuid","chunk","input","size","end","source","output","unshift","min","substring","ascii","convert","PAD_RIGHT","TRIM_LEFT","TRIM_BOTH","TRIM_RIGHT","CHUNK_START","CHUNK_END","user","A","C","E","I","D","N","O","U","Y","ss","beta","u","y","trim","dir","f","chars","indexOf","charAt","reverse","ucFirst","toUpperCase","escapeRegExp","delimeter","pattern","RegExp","concat","KonfluxPoint","point","to","snap","grid","round","clone","move","equal","scale","factor","subtract","add","distance","sqrt","pow","angle","atan2","max","iso","PI","mid","KonfluxIterator","collection","property","iterator","relay","keys","member","Object","defineProperty","get","append","implement","evaluate","one","context","list","cursor","index","item","each","value","key","filter","find","map","previous","prev","next","thisArg","KonfluxDOM","appendTo","target","document","querySelector","appendChild","ancestor","element","parentNode","createStructure","struct","nodeName","tag","createElement","setAttribute","createTextNode","stackOrderIndex","node","zIndex","style","opacity","parseFloat","position","display","floatValue","blockType","dom","STACK_NEGATIVE","STACK_POSITIONED","STACK_POSITIVE","STACK_GLOBAL","elementReference","hidden","prepare","root","documentElement","head","body","nodeType","getAttribute","STACK_BLOCK","STACK_FLOAT","STACK_INLINE","select","selector","parent","querySelectorAll","stackLevel","KonfluxBrowser","detectIE","getElementsByTagName","innerHTML","Function","hasFeature","support","getFeature","uc","vendor","vendorPrefix","navigator","search","toLowerCase","regex","script","prefix","pop","ieVersion","touch","ie","supports","fullscreen","ALLOW_KEYBOARD_INPUT","KonfluxEvent","KonfluxEventDelegate","unifier","namespace","targetKey","strip","ns","capture","separator","store","delegate","evt","event","srcElement","stopPropagation","cancelBubble","wildcard","delegation","finds","handleReadyState","run","removeEventListener","readyState","detachEvent","queue","getEventName","getEventType","getEventProperty","unifyEvent","eventType","family","mouse","pageX","clientX","scrollLeft","pageY","clientY","scrollTop","prepareTargetIterator","targets","prepareEventIterator","events","listen","setting","attach","detach","addEventListener","attachEvent","configurable","enumerable","set","returnValue","dispatch","option","Support","detail","trigger","cancelable","createEvent","initCustomEvent","initEvent","createEventObject","dispatchEvent","fireEvent","hasTouch","live","KonfluxStyle","scriptProperty","cssProperty","hasProperty","getLocalStylesheets","all","styleSheets","getStylesheet","includeOffsite","title","findStylesheet","createStylesheet","before","firstChild","insertBefore","getStyleProperties","declaration","part","rules","normalizeValue","normalizeSelector"," ","\"",",",".","addClass","classes","className","removeClass","classList","splice","toggleClass","inline","q","skipNode","id","hasAttribute","sheet","editable","ownerNode","load","isEditable","stylesheet","pr","rule","addRule","insertRule","cssRules","selectorText","cssText","pseudo","getComputedStyle","defaultView","getPropertyValue","currentStyle","specificity","KonfluxStorage","combineFragments","data","fragment","fragmentPattern","storage","getItem","createFragments","maxSize","setItem","dropFragments","getAll","JSON","stringify","removeItem","ls","localStorage","flush","decodeURI","encodeURIComponent","KonfluxObserver","KonfluxObservation","handle","observation","timeStamp","timeDelta","unsubscribe","disable","stop","active","ensureSubscriptionStack","subscription","out","keep","ref","observer","subscribe","notify","KonfluxNumber","even","odd","between","format","precision","multiplier","isFinite","KonfluxAjax","KonfluxFormData","formdata","serialize","getHeader","header","X-Konflux","getXMLHTTPRequest","xhr","XMLHttpRequest","__kxref","request","config","path","prepareData","async","headers","onload","xhrComplete","progress","upload","error","abort","open","setRequestHeader","send","status","state","stat","success","process","complete","statusText","contentType","getResponseHeader","responseText","formData","FormData","File","Blob","FileList","requestType","ob","ajax","post","put","del","purge"],"mappings":"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","file":"konflux.min.js","sourcesContent":["/*\n *       __    Konflux (version 1.0.0-alpha.59 - 2015-10-02) - a javascript helper library\n *      /\\_\\\n *   /\\/ / /   Copyright 2012-2015, Konfirm (Rogier Spieker)\n *   \\  / /    Released under the MIT license\n *    \\/_/     More information: http://konfirm.net/konflux\n *\n *  Contributors:\n *  - Daan van Ham <daan@vanham.io>\n *  - Paul den Otter <pauldenotter@gmail.com>\n */\n\n;(function(window, register, undefined) {\n\t'use strict';\n\n\t/*\n\t *  BUILD INFO\n\t *  ---------------------------------------------------------------------\n\t *    date: Fri Oct 02 2015 10:26:02 GMT+0200 (CEST)\n\t *    time: 27.74ms\n\t *    size: 135.72KB\n\t *  ---------------------------------------------------------------------\n\t *   files: included 14 files\n\t *     +2.02KB src/core/url\n\t *     +3.35KB src/core/timing\n\t *     +3.81KB src/core/array\n\t *     +9.57KB src/core/string [uses: array]\n\t *     +5.63KB src/core/point\n\t *    +10.22KB src/core/iterator [uses: array]\n\t *     +9.38KB src/core/dom [uses: iterator, style]\n\t *     +7.45KB src/core/browser [uses: string]\n\t *    +34.34KB src/core/event [uses: browser, dom, iterator, point, string, style]\n\t *    +18.22KB src/core/style [uses: array, browser, event, string, url]\n\t *     +5.73KB src/core/storage [uses: string]\n\t *     +6.62KB src/core/observer [uses: array]\n\t *     +2.89KB src/core/number [uses: string]\n\t *     +8.97KB src/core/ajax [uses: event, observer, string, url]\n\t */\n\n\tvar version = '1.0.0-alpha.59 - 2015-10-02 - 5203429';\n\n\t/**\n\t *  The Konflux object\n\t *  @name    Konflux\n\t *  @type    constructor function\n\t *  @access  internal\n\t *  @return  object   konflux\n\t *  @note    konflux is available both as (window.)konflux and (window.)kx\n\t */\n\tfunction Konflux() {\n\t\t/*jshint validthis: true*/\n\t\tvar kx = this,\n\t\t\tcounter = 0,\n\t\t\ttimestamp;\n\n\t\tfunction init() {\n\t\t\ttimestamp = kx.time();\n\t\t}\n\n\t\t/**\n\t\t *  Verify whether given argument is empty\n\t\t *  @name    empty\n\t\t *  @type    function\n\t\t *  @access  internal\n\t\t *  @param   mixed variable to check\n\t\t *  @return  bool  empty\n\t\t *  @note    The function follows PHP's empty function; null, undefined, 0, '', '0', {}, [] and false are all considered empty\n\t\t */\n\t\tfunction empty(p) {\n\t\t\tvar types = {\n\t\t\t\t\tarray:   function(a) {\n\t\t\t\t\t\treturn a.length > 0;\n\t\t\t\t\t},\n\n\t\t\t\t\tobject:  function(o) {\n\t\t\t\t\t\tfor (o in o) {\n\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t},\n\n\t\t\t\t\tboolean: function(b) {\n\t\t\t\t\t\treturn b;\n\t\t\t\t\t},\n\n\t\t\t\t\tnumber:  function(n) {\n\t\t\t\t\t\treturn n !== 0;\n\t\t\t\t\t},\n\n\t\t\t\t\tstring:  function(s) {\n\t\t\t\t\t\treturn !/^0?$/.test(s);\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tt = kx.type(p);\n\n\t\t\tif (isType('function', types[t]) && types[t](p)) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\treturn true;\n\t\t}\n\n\t\t/**\n\t\t *  Test the type of given variable\n\t\t *  @name    isType\n\t\t *  @type    method\n\t\t *  @access  internal\n\t\t *  @param   string type\n\t\t *  @param   mixed  variable\n\t\t *  @return  bool   is type\n\t\t */\n\t\tfunction isType(type, variable) {\n\t\t\tvar full = kx.type(variable),\n\t\t\t\tcheck = type && type.length ? full.substr(0, type.length) : null;\n\n\t\t\tif (check !== type) {\n\t\t\t\tswitch (full) {\n\t\t\t\t\tcase 'object':\n\t\t\t\t\t\tcheck = kx.type(variable, true).substr(0, type.length);\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'number':\n\t\t\t\t\t\tcheck = (parseInt(variable, 10) === variable ? 'integer' : 'float').substr(0, type.length);\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn check === type;\n\t\t}\n\n\t\t/**\n\t\t *  Obtain the milliseconds since the UNIX Epoch (Jan 1, 1970 00:00:00.000)\n\t\t *  @name    time\n\t\t *  @type    method\n\t\t *  @access  public\n\t\t *  @return  int milliseconds\n\t\t */\n\t\tkx.time = function() {\n\t\t\treturn Date.now ? Date.now() : (new Date()).getTime();\n\t\t};\n\n\t\t/**\n\t\t *  Obtain the elapsed time since Konflux started (roughly), using the format: [Nd] hh:mm:ss.ms\n\t\t *  @name    elapsed\n\t\t *  @type    method\n\t\t *  @access  public\n\t\t *  @return  string formatted time\n\t\t */\n\t\tkx.elapsed = function() {\n\t\t\tvar day = 86400000,\n\t\t\t\thour = 3600000,\n\t\t\t\tminute = 60000,\n\t\t\t\tdelta = Math.abs((new Date()).getTime() - timestamp),\n\t\t\t\tdays = Math.floor(delta / day),\n\t\t\t\thours = Math.floor((delta -= days * day) / hour),\n\t\t\t\tminutes = Math.floor((delta -= hours * hour) / minute),\n\t\t\t\tseconds = Math.floor((delta -= minutes * minute) / 1000),\n\t\t\t\tms = Math.floor(delta -= seconds * 1000),\n\t\t\t\tzero = '000';\n\n\t\t\treturn (days > 0 ? days + 'd ' : '') +\n\t\t\t\t\t(zero + hours).substr(-2) + ':' +\n\t\t\t\t\t(zero + minutes).substr(-2) + ':' +\n\t\t\t\t\t(zero + seconds).substr(-2) + '.' +\n\t\t\t\t\t(zero + ms).substr(-3);\n\t\t};\n\n\t\t/**\n\t\t *  Obtain an unique key, the key is guaranteed to be unique within the browser runtime\n\t\t *  @name    unique\n\t\t *  @type    method\n\t\t *  @access  public\n\t\t *  @return  string key\n\t\t */\n\t\tkx.unique = function() {\n\t\t\treturn (++counter + kx.time() % 86400000).toString(36);\n\t\t};\n\n\t\t/**\n\t\t *  Shorthand method for creating a combined version of several objects\n\t\t *  @name    combine\n\t\t *  @type    method\n\t\t *  @access  public\n\t\t *  @param   object variable1\n\t\t *  @param   object ...\n\t\t *  @param   object variableN\n\t\t *  @return  function constructor\n\t\t */\n\t\tkx.combine = function() {\n\t\t\tvar obj = {},\n\t\t\t\targ = arguments,\n\t\t\t\ti, p;\n\n\t\t\tfor (i = 0; i < arg.length; ++i) {\n\t\t\t\tif (kx.isType('object', arg[i])) {\n\t\t\t\t\tfor (p in arg[i]) {\n\t\t\t\t\t\tobj[p] = p in obj && kx.isType('object', obj[p]) ? kx.combine(arg[i][p], obj[p]) : arg[i][p];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn obj;\n\t\t};\n\n\t\t/**\n\t\t *  Verify whether given arguments are empty\n\t\t *  @name    empty\n\t\t *  @type    method\n\t\t *  @access  public\n\t\t *  @param   mixed variable1\n\t\t *  @param   mixed ...\n\t\t *  @param   mixed variableN\n\t\t *  @return  bool  variables are empty\n\t\t */\n\t\tkx.empty = function() {\n\t\t\tvar arg = Array.prototype.slice.call(arguments);\n\n\t\t\twhile (arg.length) {\n\t\t\t\tif (!empty(arg.shift())) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn true;\n\t\t};\n\n\t\t/**\n\t\t *  Determine the type of given variable\n\t\t *  @name    type\n\t\t *  @type    method\n\t\t *  @access  public\n\t\t *  @param   mixed  variable\n\t\t *  @param   bool   explicit types [optional, default undefined - simple types]\n\t\t *  @return  string type\n\t\t */\n\t\tkx.type = function(variable, explicit) {\n\t\t\tvar result = variable instanceof Array ? 'array' : (variable === null ? 'null' : typeof variable),\n\t\t\t\tname;\n\n\t\t\tif (explicit && result === 'object') {\n\t\t\t\tname = /(?:function\\s+)?(.{1,})\\(/i.exec(variable.constructor.toString());\n\n\t\t\t\tif (name && name.length > 1 && name[1] !== 'Object') {\n\t\t\t\t\treturn name[1];\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn result;\n\t\t};\n\n\t\t/**\n\t\t *  Test the type of given variable\n\t\t *  @name    isType\n\t\t *  @type    method\n\t\t *  @access  public\n\t\t *  @param   string type\n\t\t *  @param   mixed  variable\n\t\t *  @return  bool   is type\n\t\t */\n\t\tkx.isType = isType;\n\n\t\t/**\n\t\t *  Obtain the konflux version info\n\t\t *  @name   version\n\t\t *  @type   method\n\t\t *  @access public\n\t\t *  @param  bool   info [optional, default false - no build information]\n\t\t *  @return string version (object info if bool info is true)\n\t\t */\n\t\tkx.version = function(info) {\n\t\t\tvar match = version.split(' - '),\n\t\t\t\tprop = ['version', 'date', 'revision', 'type'],\n\t\t\t\tresult = {};\n\n\t\t\twhile (prop.length && match.length) {\n\t\t\t\tresult[prop.shift()] = match.shift();\n\t\t\t}\n\n\t\t\treturn info ? result : result.version;\n\t\t};\n\n\t\t/**\n\t\t *  Provide feedback about deprecated features, once (per function, per browser view)\n\t\t *  @name    deprecate\n\t\t *  @type    function\n\t\t *  @access  public\n\t\t *  @param   string   message\n\t\t *  @param   function callback\n\t\t *  @param   object   scope [optional, default undefined - no scope]\n\t\t *  @return  void\n\t\t */\n\t\tkx.deprecate = function(message, callback, scope) {\n\t\t\tvar shown;\n\n\t\t\treturn function() {\n\t\t\t\tvar method = ['info', 'warn', 'log'],\n\t\t\t\t\ti;\n\n\t\t\t\tif (!shown) {\n\t\t\t\t\tshown = true;\n\n\t\t\t\t\tfor (i = 0 ; i < method.length; ++i) {\n\t\t\t\t\t\t/*global console*/\n\t\t\t\t\t\tif (kx.isType('function', console[method[i]])) {\n\t\t\t\t\t\t\tconsole[method[i]](kx.elapsed() + ' DEPRECATED: ' + message);\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn callback.apply(scope || null, arguments);\n\t\t\t};\n\t\t};\n\n\t\t/**\n\t\t *  Register a module or function onto the kx object\n\t\t *  @name    register\n\t\t *  @access  public\n\t\t *  @param   string  name\n\t\t *  @param   mixed   value [one of: object (module) or function]\n\t\t *  @return  mixed   old value\n\t\t */\n\t\tkx.register = function(name, module) {\n\t\t\tvar result = false;\n\n\t\t\tif (kx.isType('function', module) || kx.isType('object', module)) {\n\t\t\t\tresult = name in kx ? kx[name] : null;\n\t\t\t\tkx[name] = module;\n\t\t\t}\n\n\t\t\treturn result;\n\t\t};\n\n\t\tinit();\n\t}\n\n\t(function(konflux) {\n\t\t//  register object instances\n\t\tif (register) {\n\t\t\tregister(konflux);\n\t\t}\n\n\t\t//  make konflux available on the global (window) scope both as 'konflux' and 'kx'\n\t\twindow.konflux = window.kx = konflux;\n\t})(new Konflux());\n\n})(window, function(konflux) {\n\t//BEGIN INCLUDE: core/url\n\t/**\n\t *  Handle URL's/URI's\n\t *  @module  url\n\t *  @note    available as konflux.url / kx.url\n\t */\n\tfunction KonfluxURL() {\n\t\t/*jshint validthis: true*/\n\t\tvar url = this;\n\n\t\t/**\n\t\t *  Parse given URL into its URI components\n\t\t *  @name    parse\n\t\t *  @type    function\n\t\t *  @access  internal\n\t\t *  @param   string location\n\t\t *  @return  object result\n\t\t */\n\t\tfunction parse(location) {\n\t\t\t//  URL regex + key processing based on the work of Derek Watson's jsUri (http://code.google.com/p/jsuri/)\n\t\t\tvar match = /^(?:([^:\\/?#]+):)?(?:\\/\\/((?:(([^:@]*)(?::([^:@]*))?)?@)?([^:\\/?#]*)(?::(\\d*))?))?((((?:[^?#\\/]*\\/)*)([^?#]*))(?:\\?([^#]*))?(?:#(.*))?)/.exec(location),\n\t\t\t\tprop = ['source', 'protocol', 'domain', 'userInfo', 'user', 'password', 'host', 'port', 'relative', 'path', 'directory', 'file', 'query', 'anchor'],\n\t\t\t\tresult = {};\n\t\t\twhile (prop.length) {\n\t\t\t\tresult[prop.shift()] = match.length ? match.shift() : '';\n\t\t\t}\n\n\t\t\tif (result.query) {\n\t\t\t\tresult.query.replace(/(?:^|&)([^&=]*)=?([^&]*)/g, function(a, b, c) {\n\t\t\t\t\tif (konflux.isType('object', result.query)) {\n\t\t\t\t\t\tresult.query = {};\n\t\t\t\t\t}\n\n\t\t\t\t\tif (b) {\n\t\t\t\t\t\tresult.query[b] = c;\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\n\t\t\treturn result;\n\t\t}\n\n\t\t/**\n\t\t *  The parsed url for the URL of the current page\n\t\t *  @name    current\n\t\t *  @type    object\n\t\t *  @access  public\n\t\t */\n\t\turl.current = !konflux.isType('undefined', window.location.href) ? parse(window.location.href) : false;\n\n\t\t/**\n\t\t *  Parse given URL into its URI components\n\t\t *  @name    parse\n\t\t *  @type    method\n\t\t *  @access  public\n\t\t *  @param   string url\n\t\t *  @return  object result\n\t\t */\n\t\turl.parse   = parse;\n\n\t\t/**\n\t\t *  Determine whether given URL is on the same domain as the page itself\n\t\t *  @name    isLocal\n\t\t *  @type    method\n\t\t *  @access  public\n\t\t *  @param   string location\n\t\t *  @return  bool   local\n\t\t */\n\t\turl.isLocal = function(location) {\n\t\t\treturn url.current.domain === url.parse(location).domain;\n\t\t};\n\t}\n\n\tkonflux.register('url', new KonfluxURL());\n\n\t//END INCLUDE: core/url [726.34µs, 1.89KB]\n\t//BEGIN INCLUDE: core/timing\n\t/**\n\t *  Timing utils\n\t *  @module  timing\n\t *  @note    available as konflux.timing / kx.timing\n\t */\n\tfunction KonfluxTiming() {\n\t\t/*jshint validthis: true*/\n\t\tvar timing = this,\n\t\t\tstack = {};\n\n\t\t/*global KonfluxTimingDelay*/\n\n\t\t//BEGIN INCLUDE: timing/delay\n\t\t/**\n\t\t *  Delay object, instances of this are be provided for all KonfluxTimings\n\t\t *  @name    KonfluxTimingDelay\n\t\t *  @type    class\n\t\t *  @access  internal\n\t\t *  @param   function handle\n\t\t *  @param   Number   timeout\n\t\t *  @param   string   reference\n\t\t *  @return  KonfluxTimingDelay  object\n\t\t */\n\t\tfunction KonfluxTimingDelay(handler, timeout, reference) {\n\t\t\t//\n\t\t\t'use strict';\n\n\t\t\t/*jshint validthis: true*/\n\t\t\tvar delay = this,\n\t\t\t\ttimer, raf;\n\n\t\t\t/**\n\t\t\t *  Cancel the timer\n\t\t\t *  @name    cancel\n\t\t\t *  @type    function\n\t\t\t *  @access  internal\n\t\t\t *  @return  void\n\t\t\t */\n\t\t\tfunction cancel() {\n\t\t\t\tclearTimeout(timer);\n\t\t\t}\n\n\t\t\t/**\n\t\t\t *  Start the timer\n\t\t\t *  @name    start\n\t\t\t *  @type    function\n\t\t\t *  @access  internal\n\t\t\t *  @return  void\n\t\t\t */\n\t\t\tfunction start() {\n\t\t\t\ttimer = setTimeout(function() {\n\t\t\t\t\tif (!raf) {\n\t\t\t\t\t\traf = konflux.browser.feature('requestAnimationFrame') || function(ready) {\n\t\t\t\t\t\t\tsetTimeout(ready, 16);\n\t\t\t\t\t\t};\n\t\t\t\t\t}\n\n\t\t\t\t\traf(cancel);\n\n\t\t\t\t\thandler.call();\n\t\t\t\t}, timeout);\n\t\t\t}\n\n\t\t\t//  expose\n\t\t\t/**\n\t\t\t *  Cancel the timer\n\t\t\t *  @name    cancel\n\t\t\t *  @type    method\n\t\t\t *  @access  public\n\t\t\t *  @return  void\n\t\t\t */\n\t\t\tdelay.cancel = cancel;\n\n\t\t\t/**\n\t\t\t *  Obtain the associated reference\n\t\t\t *  @name    reference\n\t\t\t *  @type    method\n\t\t\t *  @access  public\n\t\t\t *  @return  string reference\n\t\t\t */\n\t\t\tdelay.reference = function() {\n\t\t\t\treturn reference;\n\t\t\t};\n\n\t\t\tstart();\n\t\t}\n\n\t\t//END INCLUDE: timing/delay [733.16µs, 1.29KB]\n\t\t/**\n\t\t *  Remove timer object by their reference\n\t\t *  @name    remove\n\t\t *  @type    function\n\t\t *  @access  internal\n\t\t *  @param   string reference\n\t\t *  @return  void\n\t\t */\n\t\tfunction remove(reference) {\n\t\t\tif (typeof stack[reference] !== 'undefined') {\n\t\t\t\t//  cancel the stack reference\n\t\t\t\tstack[reference].cancel();\n\n\t\t\t\t//  delete it\n\t\t\t\tdelete stack[reference];\n\t\t\t}\n\t\t}\n\n\t\t/**\n\t\t *  Create a timer object to call given handler after given delay and store it with given reference\n\t\t *  @name    create\n\t\t *  @type    function\n\t\t *  @access  internal\n\t\t *  @param   function handle\n\t\t *  @param   Number   delay\n\t\t *  @param   string   reference\n\t\t *  @return  KonfluxTimingDelay  object\n\t\t */\n\t\tfunction create(handler, delay, reference) {\n\t\t\tif (reference) {\n\t\t\t\tremove(reference);\n\t\t\t}\n\t\t\telse {\n\t\t\t\treference = handler.toString() || konflux.unique();\n\t\t\t}\n\n\t\t\tstack[reference] = new KonfluxTimingDelay(handler, delay || 0, reference);\n\n\t\t\treturn stack[reference];\n\t\t}\n\n\t\t//  expose\n\t\t/**\n\t\t *  Remove timer object by their reference\n\t\t *  @name    remove\n\t\t *  @type    method\n\t\t *  @access  public\n\t\t *  @param   string reference\n\t\t *  @return  void\n\t\t */\n\t\ttiming.remove = remove;\n\n\t\t/**\n\t\t *  Create a timer object to call given handler after given delay and store it with given reference\n\t\t *  @name    create\n\t\t *  @type    method\n\t\t *  @access  public\n\t\t *  @param   function handle\n\t\t *  @param   Number   delay\n\t\t *  @param   string   reference\n\t\t *  @return  KonfluxTimingDelay  object\n\t\t */\n\t\ttiming.create = create;\n\t}\n\n\tkonflux.register('timing', new KonfluxTiming());\n\n\t//END INCLUDE: core/timing [1.93ms, 3.14KB]\n\t//BEGIN INCLUDE: core/array\n\t/**\n\t *  Array utils\n\t *  @module  array\n\t *  @note    available as konflux.array / kx.array\n\t */\n\tfunction KonfluxArray() {\n\t\t/*jshint validthis: true*/\n\t\tvar array = this;\n\n\t\t/**\n\t\t *  Determine whether given value (needle) is in the array (haystack)\n\t\t *  @name    contains\n\t\t *  @type    function\n\t\t *  @access  internal\n\t\t *  @param   array haystack\n\t\t *  @param   mixed needle\n\t\t *  @return  int   position\n\t\t */\n\t\tfunction contains(a, v) {\n\t\t\tfor (var i = 0; i < a.length; ++i) {\n\t\t\t\tif (a[i] === v) {\n\t\t\t\t\treturn i;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn false;\n\t\t}\n\n\t\t/**\n\t\t *  Return the difference between two arrays\n\t\t *  @name    diff\n\t\t *  @type    function\n\t\t *  @access  internal\n\t\t *  @param   array array1\n\t\t *  @param   array array2\n\t\t *  @return  array difference\n\t\t */\n\t\tfunction diff(a, b) {\n\t\t\tvar ret = [],\n\t\t\t\ti;\n\n\t\t\tfor (i = 0; i < a.length; ++i) {\n\t\t\t\tif (contains(b, a[i]) === false) {\n\t\t\t\t\tret.push(a[i]);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn ret;\n\t\t}\n\n\t\t/**\n\t\t *  Create an array with values between (including) given start and end\n\t\t *  @name    range\n\t\t *  @type    function\n\t\t *  @access  internal\n\t\t *  @param   number start\n\t\t *  @param   number end\n\t\t *  @return  array range\n\t\t */\n\t\tfunction range(a, b) {\n\t\t\tvar r = [];\n\t\t\tb -= a;\n\t\t\twhile (r.length <= b) {\n\t\t\t\tr.push(a + r.length);\n\t\t\t}\n\n\t\t\treturn r;\n\t\t}\n\n\t\t/**\n\t\t *  Shuffle given array\n\t\t *  @name    shuffle\n\t\t *  @type    function\n\t\t *  @access  internal\n\t\t *  @param   array source\n\t\t *  @return  array shuffled\n\t\t */\n\t\tfunction shuffle(a) {\n\t\t\tfor (var j, x, i = a.length; i; j = (Math.random() * i) | 0, x = a[--i], a[i] = a[j], a[j] = x);\n\t\t\treturn a;\n\t\t}\n\n\t\t/**\n\t\t *  Cast given value to an array\n\t\t *  @name    cast\n\t\t *  @type    function\n\t\t *  @access  internal\n\t\t *  @param   mixed source\n\t\t *  @return  array source (bool false if the cast could not be done)\n\t\t *  @note    any scalar value will become an array holding that value (e.g. 'my string' becomes ['my string'])\n\t\t */\n\t\tfunction cast(mixed) {\n\t\t\tvar result = false,\n\t\t\t\tlen, i;\n\n\t\t\tswitch (konflux.type(mixed)) {\n\t\t\t\tcase 'object':\n\t\t\t\t\tif (!('length' in mixed)) {\n\t\t\t\t\t\tresult = [mixed];\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tresult = Array.prototype.slice.call(mixed);\n\t\t\t\t\t}\n\t\t\t\t\tcatch (e) {\n\t\t\t\t\t\tfor (result = [], len = mixed.length, i = 0; i < len; ++i) {\n\t\t\t\t\t\t\tresult.push(mixed[i]);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'null':\n\t\t\t\tcase 'undefined':\n\t\t\t\t\tresult = [];\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\t\t\t\t\tresult = [mixed];\n\t\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\treturn result;\n\t\t}\n\n\t\t//  expose\n\t\t/**\n\t\t *  Does the array contain given value\n\t\t *  @name    contains\n\t\t *  @type    method\n\t\t *  @access  public\n\t\t *  @param   array   haystack\n\t\t *  @param   mixed   needle\n\t\t *  @return  boolean contains\n\t\t */\n\t\tarray.contains = contains;\n\n\t\t/**\n\t\t *  Return the difference between two arrays\n\t\t *  @name    diff\n\t\t *  @type    method\n\t\t *  @access  public\n\t\t *  @param   array array1\n\t\t *  @param   array array2\n\t\t *  @return  array difference\n\t\t */\n\t\tarray.diff = diff;\n\n\t\t/**\n\t\t *  Create an array with values between (including) given start and end\n\t\t *  @name    range\n\t\t *  @type    method\n\t\t *  @access  public\n\t\t *  @param   int start\n\t\t *  @param   int end\n\t\t *  @return  array range\n\t\t */\n\t\tarray.range = range;\n\n\t\t/**\n\t\t *  Shuffle given array\n\t\t *  @name    shuffle\n\t\t *  @type    method\n\t\t *  @access  public\n\t\t *  @param   array source\n\t\t *  @return  array shuffled\n\t\t */\n\t\tarray.shuffle = shuffle;\n\n\t\t/**\n\t\t *  Cast given value to an array\n\t\t *  @name    cast\n\t\t *  @type    method\n\t\t *  @access  public\n\t\t *  @param   mixed source\n\t\t *  @return  array source (bool false if the cast could not be done)\n\t\t *  @note    any scalar value will become an array holding that value (e.g. 'my string' becomes ['my string'])\n\t\t */\n\t\tarray.cast = cast;\n\t}\n\n\tkonflux.register('array', new KonfluxArray());\n\n\t//END INCLUDE: core/array [1.03ms, 3.58KB]\n\t//BEGIN INCLUDE: core/string\n\t/**\n\t *  String utils\n\t *  @module  string\n\t *  @note    available as konflux.string / kx.string\n\t */\n\tfunction KonfluxString() {\n\t\t/*jshint validthis: true*/\n\t\tvar string = this;\n\n\t\t//  'constants'\n\t\tstring.PAD_LEFT    = 1;\n\t\tstring.PAD_BOTH    = 2;\n\t\tstring.PAD_RIGHT   = 3;\n\t\tstring.TRIM_LEFT   = 1;\n\t\tstring.TRIM_BOTH   = 2;\n\t\tstring.TRIM_RIGHT  = 3;\n\t\tstring.CHUNK_START = 1;\n\t\tstring.CHUNK_END   = 2;\n\n\t\t/**\n\t\t *  Javascript port of Java's String.hashCode()\n\t\t *  (Based on http://werxltd.com/wp/2010/05/13/javascript-implementation-of-javas-string-hashcode-method/)\n\t\t *  @name    hashCode\n\t\t *  @type    function\n\t\t *  @access  internal\n\t\t *  @param   string input\n\t\t *  @return  number hash (32bit integer)\n\t\t */\n\t\tfunction hashCode(s) {\n\t\t\tfor (var r = 0, i = 0, l = s.length; i < l; ++i) {\n\t\t\t\tr  = (r = r * 31 + s.charCodeAt(i)) & r;\n\t\t\t}\n\n\t\t\treturn r;\n\t\t}\n\n\t\t/**\n\t\t *  Create a hash from a string\n\t\t *  @name    hash\n\t\t *  @type    function\n\t\t *  @access  internal\n\t\t *  @param   string source\n\t\t *  @return  string hash\n\t\t */\n\t\tfunction hash(s) {\n\t\t\tvar p = 16,\n\t\t\t\tpad = ('abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ' + s).substr(-(Math.ceil((s.length || 1) / p) * p)),\n\t\t\t\tr = 0;\n\n\t\t\twhile (pad.length) {\n\t\t\t\tr  += hashCode(pad.substr(0, p));\n\t\t\t\tpad = pad.substr(p);\n\t\t\t}\n\n\t\t\treturn Math.abs(r).toString(36);\n\t\t}\n\n\t\t/**\n\t\t *  Return the ASCII value of given character\n\t\t *  @name    ord\n\t\t *  @type    function\n\t\t *  @access  internal\n\t\t *  @param   string character\n\t\t *  @return  number character code\n\t\t */\n\t\tfunction ord(s) {\n\t\t\treturn s.charCodeAt(0);\n\t\t}\n\n\t\t/**\n\t\t *  Return the character corresponding with given ASCII value\n\t\t *  @name    chr\n\t\t *  @type    function\n\t\t *  @access  internal\n\t\t *  @param   number character code\n\t\t *  @return  string character\n\t\t */\n\t\tfunction chr(n) {\n\t\t\treturn String.fromCharCode(n);\n\t\t}\n\n\t\t/**\n\t\t *  Pad a string\n\t\t *  @name    pad\n\t\t *  @type    function\n\t\t *  @access  internal\n\t\t *  @param   string to pad\n\t\t *  @param   number length\n\t\t *  @param   string pad string\n\t\t *  @param   int pad type\n\t\t *  @return  padded string\n\t\t */\n\t\tfunction pad(s, n, c, t) {\n\t\t\tc = new Array(n + 1).join(c);\n\n\t\t\treturn (n -= s.length) > 0 && (t = t === string.PAD_LEFT ? n : (t === string.PAD_BOTH ? Math.ceil(n / 2) : 0)) !== false ? (t > 0 ? c.substr(0, t) : '') + s + c.substr(0, n - t) : s;\n\t\t}\n\n\t\t/**\n\t\t *  Generate a checksum for given string\n\t\t *  @name    checksum\n\t\t *  @type    function\n\t\t *  @access  internal\n\t\t *  @param   string source\n\t\t *  @return  string checksum\n\t\t */\n\t\tfunction checksum(s) {\n\t\t\tfor (var n = s.length, r = 0; n > 0; --n) {\n\t\t\t\tr += n * ord(s[n]);\n\t\t\t}\n\n\t\t\treturn Math.abs((r + '' + s.length) | 0).toString(36);\n\t\t}\n\n\t\t/**\n\t\t *  Generate a UUID\n\t\t *  @name    uuid\n\t\t *  @type    function\n\t\t *  @access  internal\n\t\t *  @return  string uuid\n\t\t */\n\t\tfunction uuid() {\n\t\t\treturn 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function(c) {\n\t\t\t\tvar r = Math.random() * 16 | 0;\n\n\t\t\t\treturn (c === 'x' ? r : (r & 0x3 | 0x8)).toString(16);\n\t\t\t});\n\t\t}\n\n\t\t/**\n\t\t *  Split given string into chunks of given size\n\t\t *  @name    chunk\n\t\t *  @type    function\n\t\t *  @access  internal\n\t\t *  @param   string input\n\t\t *  @param   int    size [optional, default 1]\n\t\t *  @param   bool   end [optional, default false - start from the beginning of the input string]\n\t\t *  @return  array chunks\n\t\t *  @note    the last chunk is provided as is, there for it can be of a length less than given size\n\t\t */\n\t\tfunction chunk(input, size, end) {\n\t\t\tvar source = '' + input,\n\t\t\t\toutput = [],\n\t\t\t\ti;\n\n\t\t\tif (!size || size === 1) {\n\t\t\t\toutput = source.split('');\n\t\t\t}\n\t\t\telse if (input.length < size) {\n\t\t\t\toutput.push(input);\n\t\t\t}\n\t\t\telse if (end) {\n\t\t\t\tfor (i = source.length; i > 0; output.unshift(source.substr(i -= Math.min(source.length, size))), source) {\n\t\t\t\t\tsource = source.substring(0, i);\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\twhile (source.length > 0, output.push(source.substring(0, size)), source) {\n\t\t\t\t\tsource = source.substr(size);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn output;\n\t\t}\n\n\t\t/**\n\t\t *  Convert characters based on their ASCII value\n\t\t *  @name    ascii\n\t\t *  @type    function\n\t\t *  @access  internal\n\t\t *  @param   string input\n\t\t *  @param   object conversion (syntax: {replacement: [ASCII value, ASCII value, ...]})\n\t\t *  @return  string converted\n\t\t */\n\t\tfunction ascii(input, convert) {\n\t\t\tvar result = [],\n\t\t\t\ti, p, s;\n\n\t\t\tfor (i = 0; i < input.length; ++i) {\n\t\t\t\ts = input.substr(i, 1);\n\t\t\t\tfor (p in convert) {\n\t\t\t\t\tif (konflux.array.contains(convert[p], s.charCodeAt(0)) !== false) {\n\t\t\t\t\t\ts = p;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tresult.push(s);\n\t\t\t}\n\n\t\t\treturn result.join('');\n\t\t}\n\n\t\t/**\n\t\t *  Convert characters based on their ASCII value\n\t\t *  @name    ascii\n\t\t *  @type    method\n\t\t *  @access  public\n\t\t *  @param   string input\n\t\t *  @param   object conversion (syntax: {replacement: [ASCII value, ASCII value, ...]} - optional, default high ASCII characters)\n\t\t *  @return  string converted\n\t\t */\n\t\tstring.ascii = function(input, user) {\n\t\t\treturn ascii(input, user || {\n\t\t\t\tA: [192, 193, 194, 195, 196, 197],\n\t\t\t\tC: [199],\n\t\t\t\tE: [200, 201, 202, 203],\n\t\t\t\tI: [204, 205, 206, 207],\n\t\t\t\tD: [208],\n\t\t\t\tN: [209],\n\t\t\t\tO: [210, 211, 212, 213, 214, 216],\n\t\t\t\tU: [217, 218, 219, 220],\n\t\t\t\tY: [221],\n\t\t\t\tss: [223],\n\t\t\t\ta: [224, 225, 226, 227, 228, 229],\n\t\t\t\tbeta: [946],\n\t\t\t\tc: [231],\n\t\t\t\te: [232, 233, 234, 235],\n\t\t\t\ti: [236, 237, 238, 239],\n\t\t\t\tn: [241],\n\t\t\t\to: [240, 242, 243, 244, 245, 246],\n\t\t\t\tu: [249, 250, 251, 252],\n\t\t\t\ty: [253]\n\t\t\t});\n\t\t};\n\n\t\t/**\n\t\t *  Trim string from leading/trailing pattern (whitespace by default)\n\t\t *  @name    trim\n\t\t *  @type    method\n\t\t *  @access  public\n\t\t *  @param   string input\n\t\t *  @param   string character [default \\s, may be the contents of a regular expression pattern]\n\t\t *  @param   int    side [optional, One of: TRIM_BOTH (default), TRIM_LEFT, TRIM_RIGHT]\n\t\t *  @return  string trimmed\n\t\t *  @note    the side params are located in konflux.string (e.g. konflux.string.TRIM_LEFT)\n\t\t */\n\t\tstring.trim = function(input, chr, dir) {\n\t\t\tvar chars = chr || ' \\n\\r\\t\\f',\n\t\t\t\tf, t;\n\n\t\t\tfor (t = input.length; t > 0 && dir !== string.TRIM_LEFT && chars.indexOf(input.charAt(--t)) >= 0;);\n\t\t\tfor (f = 0; f < t && dir !== string.TRIM_RIGHT && chars.indexOf(input.charAt(f)) >= 0; ++f);\n\n\t\t\treturn input.substring(f, t + 1);\n\t\t};\n\n\t\t/**\n\t\t *  Reverse given string\n\t\t *  @name    reverse\n\t\t *  @type    method\n\t\t *  @access  public\n\t\t *  @param   string input\n\t\t *  @return  string reversed\n\t\t */\n\t\tstring.reverse = function(s) {\n\t\t\tfor (var n = s.length, r = ''; n > 0; --n) {\n\t\t\t\tr += s[n];\n\t\t\t}\n\n\t\t\treturn r;\n\t\t};\n\n\t\t/**\n\t\t *  Pad a string\n\t\t *  @name    pad\n\t\t *  @type    method\n\t\t *  @access  public\n\t\t *  @param   string to pad\n\t\t *  @param   number length\n\t\t *  @param   string pad string [optional, default ' ' - a space]\n\t\t *  @param   int type [optional, default PAD_RIGHT - add padding to the right. One of: PAD_LEFT, PAD_RIGHT (default), PAD_BOTH]\n\t\t *  @return  string padded\n\t\t *  @note    the type params are located in konflux.string (e.g. konflux.string.PAD_LEFT)\n\t\t */\n\t\tstring.pad = function(s, n, c, t) {\n\t\t\treturn pad(s, n, c || ' ', t || string.PAD_RIGHT);\n\t\t};\n\n\t\t/**\n\t\t *  Uppercase the first character of given string\n\t\t *  @name    ucFirst\n\t\t *  @type    method\n\t\t *  @access  public\n\t\t *  @param   string input\n\t\t *  @return  string uppercased first character\n\t\t */\n\t\tstring.ucFirst = function(input) {\n\t\t\treturn input.charAt(0).toUpperCase() + input.substr(1);\n\t\t};\n\n\t\t/**\n\t\t *  Create a hash from a string\n\t\t *  @name    hash\n\t\t *  @type    method\n\t\t *  @access  public\n\t\t *  @param   string input\n\t\t *  @return  string hash\n\t\t */\n\t\tstring.hash = hash;\n\n\t\t/**\n\t\t *  Generate a checksum for given string\n\t\t *  @name    checksum\n\t\t *  @type    method\n\t\t *  @access  public\n\t\t *  @param   string source\n\t\t *  @return  string checksum\n\t\t */\n\t\tstring.checksum = checksum;\n\n\t\t/**\n\t\t *  Generate a UUID\n\t\t *  @name    uuid\n\t\t *  @type    method\n\t\t *  @access  public\n\t\t *  @return  string uuid\n\t\t */\n\t\tstring.uuid = uuid;\n\n\t\t/**\n\t\t *  Return the ASCII value of given character\n\t\t *  @name    ord\n\t\t *  @type    method\n\t\t *  @access  public\n\t\t *  @param   string character\n\t\t *  @return  number character code\n\t\t */\n\t\tstring.ord = ord;\n\n\t\t/**\n\t\t *  Return the character corresponding with given ASCII value\n\t\t *  @name    chr\n\t\t *  @type    method\n\t\t *  @access  public\n\t\t *  @param   int    code\n\t\t *  @return  string character\n\t\t */\n\t\tstring.chr = chr;\n\n\t\t/**\n\t\t *  Divide the given input string into chunks of certain size\n\t\t *  @name    chunk\n\t\t *  @type    method\n\t\t *  @access  public\n\t\t *  @param   string input\n\t\t *  @param   int    size [optional, default 1]\n\t\t *  @param   int    direction [optional, default CHUNK_START - start the chunks from the start, one of: CHUNK_START, CHUNK_END]\n\t\t *  @return  array chunks\n\t\t *  @note    the last chunk is provided as is, there for it can be of a length less than given size\n\t\t */\n\t\tstring.chunk = function(input, size, start) {\n\t\t\treturn chunk(input, size || 1, start === string.CHUNK_END);\n\t\t};\n\n\t\t/**\n\t\t *  Prepare given input string for use in a regular expression\n\t\t *  @name    escapeRegExp\n\t\t *  @type    method\n\t\t *  @access  public\n\t\t *  @param   string input\n\t\t *  @param   string delimiter [optional, default null - no delimeter to consider]\n\t\t *  @return  string escaped\n\t\t */\n\t\tstring.escapeRegExp = function(input, delimeter) {\n\t\t\tvar chars = '.\\\\+*?[^]$(){}=!<>|:-'.split(''),\n\t\t\t\tpattern = new RegExp('[' + chars.concat(delimeter ? [delimeter] : []).join('\\\\') + ']', 'g');\n\n\t\t\treturn konflux.isType('string', input) ? input.replace(pattern, '\\\\$&') : '';\n\t\t};\n\t}\n\n\tkonflux.register('string', new KonfluxString());\n\n\t//END INCLUDE: core/string [1.83ms, 9.17KB]\n\t//BEGIN INCLUDE: core/point\n\t/**\n\t *  KonfluxPoint object, handling the (heavy) lifting of working with points\n\t *  @module  point\n\t *  @factory konflux.point\n\t *  @param   number x position\n\t *  @param   number y position\n\t *  @note    available as konflux.point / kx.point\n\t */\n\tfunction KonfluxPoint(x, y) {\n\t\t/*jshint validthis: true*/\n\t\tvar point = this;\n\n\t\tpoint.x = x || 0;\n\t\tpoint.y = y || 0;\n\n\t\t/**\n\t\t *  Move the point to a specific position\n\t\t *  @name    to\n\t\t *  @type    method\n\t\t *  @access  public\n\t\t *  @param   number x\n\t\t *  @param   number y\n\t\t *  @return  KonfluxPoint  point\n\t\t */\n\t\tpoint.to = function(x, y) {\n\t\t\tpoint.x = x;\n\t\t\tpoint.y = y;\n\n\t\t\treturn point;\n\t\t};\n\n\t\t/**\n\t\t *  Snap the point to a grid\n\t\t *  @name    snap\n\t\t *  @type    method\n\t\t *  @access  public\n\t\t *  @param   number grid [optional, default 1 - round the position x and y]\n\t\t *  @return  KonfluxPoint  point\n\t\t */\n\t\tpoint.snap = function(grid) {\n\t\t\tpoint.x = grid ? Math.round(point.x / grid) * grid : Math.round(point.x);\n\t\t\tpoint.y = grid ? Math.round(point.y / grid) * grid : Math.round(point.y);\n\n\t\t\treturn point;\n\t\t};\n\n\t\t/**\n\t\t *  Create a new point based on the current\n\t\t *  @name    clone\n\t\t *  @type    method\n\t\t *  @access  public\n\t\t *  @return  KonfluxPoint  point\n\t\t */\n\t\tpoint.clone = function() {\n\t\t\treturn new KonfluxPoint(point.x, point.y);\n\t\t};\n\n\t\t/**\n\t\t *  Move the point object by given x and y\n\t\t *  @name    move\n\t\t *  @type    method\n\t\t *  @access  public\n\t\t *  @param   number x\n\t\t *  @param   number y\n\t\t *  @return  KonfluxPoint  point\n\t\t */\n\t\tpoint.move = function(x, y) {\n\t\t\tpoint.x += x;\n\t\t\tpoint.y += y;\n\n\t\t\treturn point;\n\t\t};\n\n\t\t/**\n\t\t *  Is given point on the exact same position\n\t\t *  @name    equal\n\t\t *  @type    method\n\t\t *  @access  public\n\t\t *  @param   KonfluxPoint point\n\t\t *  @param   bool    round\n\t\t *  @return  bool    equal\n\t\t */\n\t\tpoint.equal = function(p, round) {\n\t\t\treturn round ? Math.round(point.x) === Math.round(p.x) && Math.round(point.y) === Math.round(p.y) : point.x === p.x && point.y === p.y;\n\t\t};\n\n\t\t/**\n\t\t *  Scale the points coordinates by given factor\n\t\t *  @name    scale\n\t\t *  @type    method\n\t\t *  @access  public\n\t\t *  @param   number factor\n\t\t *  @return  void\n\t\t */\n\t\tpoint.scale = function(factor) {\n\t\t\tpoint.x *= factor;\n\t\t\tpoint.y *= factor;\n\n\t\t\treturn point;\n\t\t};\n\n\t\t/**\n\t\t *  Subtract a point for the current point\n\t\t *  @name    subtract\n\t\t *  @type    method\n\t\t *  @access  public\n\t\t *  @param   object point\n\t\t *  @return  KonfluxPoint\n\t\t */\n\t\tpoint.subtract = function(p) {\n\t\t\treturn new KonfluxPoint(point.x - p.x, point.y - p.y);\n\t\t};\n\n\t\t/**\n\t\t *  Add a point to the current point\n\t\t *  @name    add\n\t\t *  @type    method\n\t\t *  @access  public\n\t\t *  @param   object point\n\t\t *  @return  KonfluxPoint\n\t\t */\n\t\tpoint.add = function(p) {\n\t\t\treturn new KonfluxPoint(point.x + p.x, point.y + p.y);\n\t\t};\n\n\t\t/**\n\t\t *  Get the distance between given and current point\n\t\t *  @name    distance\n\t\t *  @type    method\n\t\t *  @access  public\n\t\t *  @param   object point\n\t\t *  @return  number distance\n\t\t */\n\t\tpoint.distance = function(p) {\n\t\t\treturn Math.sqrt(Math.pow(Math.abs(point.x - p.x), 2) + Math.pow(Math.abs(point.y - p.y), 2));\n\t\t};\n\n\t\t/**\n\t\t *  Get the angle in radians between given and current point\n\t\t *  @name    angle\n\t\t *  @type    method\n\t\t *  @access  public\n\t\t *  @param   object point\n\t\t *  @return  number angle\n\t\t */\n\t\tpoint.angle = function(p) {\n\t\t\treturn Math.atan2(p.x - point.x, p.y - point.y);\n\t\t};\n\n\t\t/**\n\t\t *  Create a point with the maximum coordinates of both the current and given point\n\t\t *  @name    max\n\t\t *  @type    method\n\t\t *  @access  public\n\t\t *  @param   KonfluxPoint point1\n\t\t *  @param   KonfluxPoint ...\n\t\t *  @param   KonfluxPoint pointN\n\t\t *  @return  KonfluxPoint\n\t\t */\n\t\tpoint.max = function() {\n\t\t\tvar x = point.x,\n\t\t\t\ty = point.y,\n\t\t\t\ti;\n\n\t\t\tfor (i = 0; i < arguments.length; ++i) {\n\t\t\t\tx = Math.max(x, arguments[i].x);\n\t\t\t\ty = Math.max(y, arguments[i].y);\n\t\t\t}\n\n\t\t\treturn new KonfluxPoint(x, y);\n\t\t};\n\n\t\t/**\n\t\t *  Create a point with the minimum coordinates of both the current and given point\n\t\t *  @name    min\n\t\t *  @type    method\n\t\t *  @access  public\n\t\t *  @param   KonfluxPoint point1\n\t\t *  @param   KonfluxPoint ...\n\t\t *  @param   KonfluxPoint pointN\n\t\t *  @return  KonfluxPoint\n\t\t */\n\t\tpoint.min = function() {\n\t\t\tvar x = point.x,\n\t\t\t\ty = point.y,\n\t\t\t\ti;\n\n\t\t\tfor (i = 0; i < arguments.length; ++i) {\n\t\t\t\tx = Math.min(x, arguments[i].x);\n\t\t\t\ty = Math.min(y, arguments[i].y);\n\t\t\t}\n\n\t\t\treturn new KonfluxPoint(x, y);\n\t\t};\n\n\t\t/**\n\t\t *  Create a new point from the current mapped to isometric coordinates\n\t\t *  @name    iso\n\t\t *  @type    method\n\t\t *  @access  public\n\t\t *  @param   number angle [optional, default 30 degrees]\n\t\t *  @return  KonfluxPoint\n\t\t */\n\t\tpoint.iso = function(angle) {\n\t\t\tangle = (angle || 30) * Math.PI / 180;\n\n\t\t\treturn new KonfluxPoint(\n\t\t\t\tpoint.x - point.y,\n\t\t\t\t(point.x + point.y) * angle\n\t\t\t);\n\t\t};\n\n\t\t/**\n\t\t *  Create a new point between the current and given point\n\t\t *  @name    mid\n\t\t *  @type    method\n\t\t *  @access  public\n\t\t *  @param   KonfluxPoint p\n\t\t *  @return  KonfluxPoint mid\n\t\t */\n\t\tpoint.mid = function(p) {\n\t\t\treturn new KonfluxPoint(\n\t\t\t\t(point.x + p.x) * 0.5,\n\t\t\t\t(point.y + p.y) * 0.5\n\t\t\t);\n\t\t};\n\t}\n\n\t/**\n\t *  Create a KonfluxPoint instance\n\t *  @name   point\n\t *  @type   method\n\t *  @access public\n\t *  @param  number x position\n\t *  @param  number y position\n\t *  @return KonfluxPoint point\n\t *  @note   As of konflux version > 0.3.1 the points are created without the new keyword\n\t *          ('new konflux.point(X, Y)' can now be 'konflux.point(X, Y)')\n\t */\n\tkonflux.register('point', function(x, y) {\n\t\treturn new KonfluxPoint(x, y);\n\t});\n\n\t//END INCLUDE: core/point [794.50µs, 5.34KB]\n\t//BEGIN INCLUDE: core/iterator\n\t/**\n\t *  Iterator object, providing a uniform mechanism to traverse collections (Array, Object, DOMNodeList, etc)\n\t *  @module  iterator\n\t *  @factory konflux.iterator\n\t *  @param   mixed collection\n\t *  @note    available as konflux.iterator / kx.iterator\n\t */\n\tfunction KonfluxIterator(collection) {\n\t\t/*jshint validthis: true*/\n\t\tvar iterator = this,\n\t\t\tkeys, current;\n\n\t\t/**\n\t\t *  Initialize the iterator object\n\t\t *  @name    init\n\t\t *  @type    function\n\t\t *  @access  internal\n\t\t *  @return  void\n\t\t */\n\t\tfunction init() {\n\t\t\tvar p;\n\n\t\t\tcollection = collection || [];\n\n\t\t\tif (typeof collection !== 'object') {\n\t\t\t\tcollection = [collection];\n\t\t\t}\n\n\t\t\t//  create a magic property for the length\n\t\t\tif ('length' in collection) {\n\t\t\t\tproperty('length');\n\t\t\t}\n\n\t\t\t//  decorate the iterator with the various collection members\n\t\t\tfor (p in collection) {\n\t\t\t\tif (!(p in iterator)) {\n\t\t\t\t\titerator[p] = relay(p);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tkeys = iterator.keys();\n\t\t}\n\n\t\t/**\n\t\t *  Create relayed access to a collection member\n\t\t *  @name    relay\n\t\t *  @type    function\n\t\t *  @access  internal\n\t\t *  @param   string member name\n\t\t *  @return  function relay\n\t\t */\n\t\tfunction relay(member) {\n\t\t\tif (konflux.isType('function', collection[member])) {\n\t\t\t\treturn function() {\n\t\t\t\t\treturn collection[member].apply(collection, konflux.array.cast(arguments));\n\t\t\t\t};\n\t\t\t}\n\n\t\t\treturn collection[member];\n\t\t}\n\n\t\t/**\n\t\t *  Try to create a getter for the given property, copy the value if a getter is not possible\n\t\t *  @name    property\n\t\t *  @type    function\n\t\t *  @access  internal\n\t\t *  @param   string name\n\t\t *  @return  mixed  result (the property value if it was copied, KonfluxIterator otherwise)\n\t\t */\n\t\tfunction property(name) {\n\t\t\t//  Unfortunatly we have to fall back onto a try catch block, as the IE8 implementation does not\n\t\t\t//  accept defined properties on any object other than DOMElements\n\t\t\ttry {\n\t\t\t\treturn Object.defineProperty(iterator, name, {\n\t\t\t\t\tget: function() {\n\t\t\t\t\t\treturn collection[name];\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t\tcatch (e) {\n\t\t\t\treturn (iterator[name] = collection[name]);\n\t\t\t}\n\t\t}\n\n\t\t/**\n\t\t *  Expand the underlying collection with another\n\t\t *  @name    add\n\t\t *  @type    function\n\t\t *  @access  internal\n\t\t *  @param   mixed  append\n\t\t *  @return  void\n\t\t */\n\t\tfunction add(append) {\n\t\t\tvar length, i;\n\n\t\t\t//  for now we only support index based objects to handle expansion\n\t\t\tif (!('length' in collection)) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\t//  we enforce the underlying collection to become an array\n\t\t\tif (!(collection instanceof Array)) {\n\t\t\t\tcollection = konflux.array.cast(collection);\n\t\t\t}\n\n\t\t\t//  if we are trying to append a KonfluxIterator instance, we want the underlying collection\n\t\t\tif (append instanceof KonfluxIterator) {\n\t\t\t\tappend = append.collection();\n\t\t\t}\n\n\t\t\t//  and ensure it'll be an array\n\t\t\tif (!(append instanceof Array)) {\n\t\t\t\tappend = konflux.isType('object', append) ? [append] : konflux.array.cast(append);\n\t\t\t}\n\n\t\t\t//  if the appending variable holds an array, we concatenate it into the collection\n\t\t\tif (append instanceof Array) {\n\t\t\t\tlength     = collection.length;\n\t\t\t\tcollection = collection.concat(append);\n\t\t\t\tkeys       = iterator.keys();\n\n\t\t\t\tfor (i = length; i < collection.length; ++i) {\n\t\t\t\t\tproperty(i);\n\t\t\t\t}\n\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\treturn false;\n\t\t}\n\n\t\t/**\n\t\t *  Create a function which implements a specific signature (which occurs repeatedly)\n\t\t *  @name    implement\n\t\t *  @type    function\n\t\t *  @access  internal\n\t\t *  @param   string   name\n\t\t *  @param   function evaluation\n\t\t *  @param   bool     one [optional, default undefined (false-ish) - return a KonfluxIterator]\n\t\t *  @return  function implementation\n\t\t */\n\t\tfunction implement(name, evaluate, one) {\n\t\t\treturn function(callback, context) {\n\t\t\t\tvar list, result, keys, i;\n\n\t\t\t\t//  always use the native implementation, if it exists\n\t\t\t\tif (name in collection && konflux.isType('function', collection[name])) {\n\t\t\t\t\treturn new KonfluxIterator(collection[name].apply(collection, arguments));\n\t\t\t\t}\n\n\t\t\t\tlist = collection instanceof Array ? [] : {};\n\n\t\t\t\tkeys = iterator.keys();\n\t\t\t\tfor (i = 0; i < keys.length; ++i) {\n\t\t\t\t\tresult = evaluate(callback.apply(context || undefined, [collection[keys[i]], keys[i], collection]), collection[keys[i]]);\n\n\t\t\t\t\tif (result) {\n\t\t\t\t\t\tif (one) {\n\t\t\t\t\t\t\treturn result;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tlist[keys[i]] = result;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn konflux.iterator(list);\n\t\t\t};\n\t\t}\n\n\t\t/**\n\t\t *  Obtain the raw underlying collection\n\t\t *  @name    collection\n\t\t *  @type    method\n\t\t *  @access  public\n\t\t *  @return  mixed collection\n\t\t */\n\t\titerator.collection = function() {\n\t\t\treturn collection;\n\t\t};\n\n\t\t/**\n\t\t *  Get or set the cursor position, if an non-existant position is given, the cursor does not budge\n\t\t *  @name    cursor\n\t\t *  @type    method\n\t\t *  @access  public\n\t\t *  @param   mixed index [optional, default null - don't update the cursor]\n\t\t *  @return  mixed value\n\t\t */\n\t\titerator.cursor = function(index) {\n\t\t\tvar result;\n\n\t\t\tif (index) {\n\t\t\t\tif (collection instanceof Array && index in keys) {\n\t\t\t\t\tcurrent = index;\n\t\t\t\t}\n\t\t\t\telse if (!(collection instanceof Array)) {\n\t\t\t\t\tresult = konflux.array.contains(keys, index);\n\n\t\t\t\t\tif (result) {\n\t\t\t\t\t\tcurrent = result;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tresult = current || 0;\n\n\t\t\treturn collection instanceof Array ? result : keys[result];\n\t\t};\n\n\t\t/**\n\t\t *  Obtain a member from the underlying collection\n\t\t *  @name    item\n\t\t *  @type    method\n\t\t *  @access  public\n\t\t *  @param   mixed index\n\t\t *  @return  mixed value\n\t\t */\n\t\titerator.item = function(index) {\n\t\t\tif ('item' in collection && konflux.isType('function', collection.item)) {\n\t\t\t\treturn collection.item(index);\n\t\t\t}\n\n\t\t\treturn ('length' in collection && (index >= 0 || index < collection.length)) || index in collection ? collection[index] : null;\n\t\t};\n\n\t\t/**\n\t\t *  Obtain the current value, whithout shifting the cursor\n\t\t *  @name    current\n\t\t *  @type    method\n\t\t *  @access  public\n\t\t *  @return  mixed value\n\t\t */\n\t\titerator.current = function() {\n\t\t\tif (!current) {\n\t\t\t\tcurrent = 0;\n\t\t\t}\n\n\t\t\treturn typeof keys[current] !== 'undefined' ? iterator.item(keys[current]) : false;\n\t\t};\n\n\t\t/**\n\t\t *  Obtain an array which contains all the keys for the underlying collection\n\t\t *  @name    keys\n\t\t *  @type    method\n\t\t *  @access  public\n\t\t *  @return  Array keys\n\t\t */\n\t\titerator.keys = function() {\n\t\t\tvar result = [];\n\n\t\t\titerator.each(function(value, key) {\n\t\t\t\tresult.push(key);\n\t\t\t});\n\n\t\t\treturn result;\n\t\t};\n\n\t\t/**\n\t\t *  Create a new KonfluxIterator from the current containing only elements which received a true(-ish) result\n\t\t *  from the provided filter method\n\t\t *  @name    filter\n\t\t *  @type    method\n\t\t *  @access  public\n\t\t *  @param   function evaluate\n\t\t *  @param   object   thisArg 'this' [optional, default undefined]\n\t\t *  @return  KonfluxIterator matches\n\t\t */\n\t\titerator.filter = implement('filter', function(result, item) {\n\t\t\treturn !!result ? item : false;\n\t\t});\n\n\t\t/**\n\t\t *  Return the first matching item (true-ish result from the evaluation function) from the iterator\n\t\t *  @name    find\n\t\t *  @type    method\n\t\t *  @access  public\n\t\t *  @param   function map\n\t\t *  @param   object   thisArg 'this' [optional, default undefined]\n\t\t *  @return  KonfluxIterator found\n\t\t */\n\t\titerator.find = implement('find', function(result, item) {\n\t\t\treturn !!result ? item : false;\n\t\t}, true);\n\n\t\t/**\n\t\t *  Create a new KonfluxIterator from the current containing items (possibly) modified by the map function\n\t\t *  @name    map\n\t\t *  @type    method\n\t\t *  @access  public\n\t\t *  @param   function map\n\t\t *  @param   object   thisArg 'this' [optional, default undefined]\n\t\t *  @return  KonfluxIterator mapped\n\t\t */\n\t\titerator.map = implement('map', function(result) {\n\t\t\treturn result;\n\t\t});\n\n\t\t/**\n\t\t *  Obtain the previous value, shifting the cursor to the previous position\n\t\t *  @name    previous\n\t\t *  @type    method\n\t\t *  @access  public\n\t\t *  @return  mixed value\n\t\t */\n\t\titerator.previous = function() {\n\t\t\tcurrent = Math.max(typeof current !== 'undefined' ? current - 1 : 0, -1);\n\n\t\t\treturn iterator.current();\n\t\t};\n\n\t\t/**\n\t\t *  Obtain the previous value, shifting the cursor back\n\t\t *  @name    prev\n\t\t *  @type    method\n\t\t *  @access  public\n\t\t *  @return  mixed value\n\t\t *  @alias   iterator.previous\n\t\t */\n\t\titerator.prev = iterator.previous;\n\n\t\t/**\n\t\t *  Obtain the next value, shifting the cursor to the next position\n\t\t *  @name    next\n\t\t *  @type    method\n\t\t *  @access  public\n\t\t *  @return  mixed value\n\t\t */\n\t\titerator.next = function() {\n\t\t\tcurrent = Math.min(typeof current !== 'undefined' ? current + 1 : 0, keys.length);\n\n\t\t\treturn iterator.current();\n\t\t};\n\n\t\t/**\n\t\t *  Traverse the underlying collection and call given handle on every item in the collection\n\t\t *  @name    each\n\t\t *  @type    method\n\t\t *  @access  public\n\t\t *  @param   function   callback\n\t\t *  @param   object     thisArg (value to use as this when executing callback)\n\t\t *  @return  KonfluxIterator instance\n\t\t */\n\t\titerator.each = function(callback, thisArg) {\n\t\t\tvar p;\n\n\t\t\tif ('length' in collection) {\n\t\t\t\tfor (p = 0; p < collection.length; ++p) {\n\t\t\t\t\tcallback.apply(thisArg || undefined, [collection[p], p, iterator]);\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tfor (p in collection) {\n\t\t\t\t\tcallback.apply(thisArg || undefined, [collection[p], p, iterator]);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn iterator;\n\t\t};\n\n\t\t/**\n\t\t *  Add items to the collection\n\t\t *  @name    add\n\t\t *  @type    method\n\t\t *  @access  public\n\t\t *  @param   mixed argument1\n\t\t *  @param   mixed ...\n\t\t *  @param   mixed argumentN\n\t\t *  @return  KonfluxIterator instance\n\t\t *  @note    Adding items to the collection will destroy the original collection and turn it into an array\n\t\t *  @note    Any scalar variable type (String, Number, Boolean and NULL) will added as is, any\n\t\t *           Array or Object will be disected and treated as array (if possible)\n\t\t */\n\t\titerator.add = function() {\n\t\t\tvar i;\n\n\t\t\tfor (i = 0; i < arguments.length; ++i) {\n\t\t\t\tadd(arguments[i]);\n\t\t\t}\n\n\t\t\treturn iterator;\n\t\t};\n\n\t\tinit();\n\t}\n\n\t/**\n\t *  Create a KonfluxIterator instance\n\t *  @name   iterator\n\t *  @type   method\n\t *  @access public\n\t *  @param  mixed collection\n\t *  @return KonfluxIterator iterator\n\t */\n\tkonflux.register('iterator', function(collection) {\n\t\treturn collection instanceof KonfluxIterator ? collection : new KonfluxIterator(collection);\n\t});\n\n\t//END INCLUDE: core/iterator [963.28µs, 9.80KB]\n\t//BEGIN INCLUDE: core/dom\n\t/**\n\t *  DOM Structure helper\n\t *  @module  dom\n\t *  @note    available as konflux.dom / kx.dom\n\t */\n\tfunction KonfluxDOM() {\n\t\t/*jshint validthis: true*/\n\t\tvar dom = this;\n\n\t\t//  constants\n\t\tdom.STACK_NEGATIVE   = 1;\n\t\tdom.STACK_BLOCK      = dom.STACK_NEGATIVE << 1;\n\t\tdom.STACK_FLOAT      = dom.STACK_BLOCK << 1;\n\t\tdom.STACK_INLINE     = dom.STACK_FLOAT << 1;\n\t\tdom.STACK_POSITIONED = dom.STACK_INLINE << 1;\n\t\tdom.STACK_POSITIVE   = dom.STACK_POSITIONED << 1;\n\t\tdom.STACK_GLOBAL     = dom.STACK_POSITIVE << 1;\n\n\t\t/**\n\t\t *  Append given source element or structure to the target element\n\t\t *  @name   appendTo\n\t\t *  @type   function\n\t\t *  @access internal\n\t\t *  @param  DOMElement target\n\t\t *  @param  mixed source (one of: DOMElement, Object structure)\n\t\t *  @return Array of added source elements\n\t\t */\n\t\tfunction appendTo(target, source) {\n\t\t\tvar result, i;\n\n\t\t\tif (konflux.isType('string', target)) {\n\t\t\t\ttarget = document.querySelector(target);\n\t\t\t}\n\n\t\t\tif (source instanceof Array) {\n\t\t\t\tresult = [];\n\t\t\t\tfor (i = 0; i < source.length; ++i) {\n\t\t\t\t\tresult.push(appendTo(target, source[i]));\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tresult = target.appendChild(source);\n\t\t\t}\n\n\t\t\treturn result;\n\t\t}\n\n\t\t/**\n\t\t *  Determine whether element is in the ancestor element or the ancestor element itself\n\t\t *  @name   contains\n\t\t *  @type   function\n\t\t *  @access internal\n\t\t *  @param  DOMElement ancestor\n\t\t *  @param  DOMElement element\n\t\t *  @return bool element is (in) ancestor\n\t\t */\n\t\tfunction contains(ancestor, element) {\n\t\t\t//  use the contains method if it exists\n\t\t\tif ('contains' in ancestor) {\n\t\t\t\treturn ancestor.contains(element);\n\t\t\t}\n\n\t\t\t//  old school tree walker\n\t\t\twhile (element !== ancestor && element) {\n\t\t\t\telement = element.parentNode;\n\t\t\t}\n\n\t\t\treturn !!element;\n\t\t}\n\n\t\t/**\n\t\t *  Create a dom structure from given variable\n\t\t *  @name   createStructure\n\t\t *  @type   function\n\t\t *  @access internal\n\t\t *  @param  mixed   source\n\t\t *  @param  DOMNode scope\n\t\t *  @return DOMElement structure\n\t\t */\n\t\tfunction createStructure(struct, scope) {\n\t\t\tvar nodeName, element, p, i;\n\n\t\t\tswitch (konflux.type(struct)) {\n\t\t\t\tcase 'array':\n\t\t\t\t\telement = [];\n\t\t\t\t\tfor (i = 0; i < struct.length; ++i) {\n\t\t\t\t\t\telement.push(createStructure(struct[i]));\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'object':\n\t\t\t\t\tnodeName = 'tag' in struct ? struct.tag : ('name' in struct ? struct.name : 'div');\n\n\t\t\t\t\tif (!/^[a-z]+[a-z0-9-]*$/i.test(nodeName)) {\n\t\t\t\t\t\telement = (scope ? scope.querySelector(nodeName) : null) || document.querySelector(nodeName);\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\telement = document.createElement(nodeName);\n\t\t\t\t\t}\n\n\t\t\t\t\tfor (p in struct) {\n\t\t\t\t\t\tswitch (p)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tcase 'name':\n\t\t\t\t\t\t\t\tif ('tag' in struct) {\n\t\t\t\t\t\t\t\t\telement.setAttribute('name', struct[p]);\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase 'child':\n\t\t\t\t\t\t\tcase 'content':\n\t\t\t\t\t\t\t\tappendTo(element, createStructure(struct[p], element));\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase 'class':\n\t\t\t\t\t\t\tcase 'className':\n\t\t\t\t\t\t\t\telement.setAttribute('class', struct[p]);\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t\telement.setAttribute(p, struct[p]);\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'boolean':\n\t\t\t\t\tstruct = struct ? 'true' : 'false';\n\t\t\t\t\t/* falls through */\n\t\t\t\tdefault:\n\t\t\t\t\telement = document.createTextNode(struct);\n\t\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\treturn element;\n\t\t}\n\n\t\t/**\n\t\t *  Obtain the stacking order index\n\t\t *  @name   stackOrderIndex\n\t\t *  @type   function\n\t\t *  @access internal\n\t\t *  @param  DOMElement node\n\t\t *  @return object stack order (format: {type:<int>, index:<int>})\n\t\t *  @note   the dom constants: STACK_NEGATIVE, STACK_BLOCK, STACK_FLOAT\n\t\t *          STACK_INLINE, STACK_POSITIONED, STACK_POSITIVE, STACK_GLOBAL\n\t\t *          with the type number to determine the matching type.\n\t\t *          e.g. type & konflux.dom.STACK_POSITIONED !== 0 is a positioned element\n\t\t *  @see    spec:  http://www.w3.org/TR/CSS2/zindex.html#painting-order\n\t\t *  @see    human: http://philipwalton.com/articles/what-no-one-told-you-about-z-index/\n\t\t */\n\t\tfunction stackOrderIndex(node) {\n\t\t\tvar zIndex = +konflux.style.get(node, 'z-index'),\n\t\t\t\topacity = parseFloat(konflux.style.get(node, 'opacity')),\n\t\t\t\tposition = konflux.style.get(node, 'position'),\n\t\t\t\tdisplay = konflux.style.get(node, 'display'),\n\t\t\t\tfloatValue = konflux.style.get(node, 'float'),\n\t\t\t\tcontext = (position !== 'static' && zIndex !== 'auto') || opacity < 1,\n\n\t\t\t\t//  https://developer.mozilla.org/en-US/docs/Web/CSS/display\n\t\t\t\tblockType = /^(?:(?:inline\\-)?block|list\\-item|table(?:\\-(?:cell|caption|column|row))?|table\\-(?:column|footer|header|row)\\-group|flex|grid)$/.test(display),\n\t\t\t\ttype = parseInt([\n\n\t\t\t\t\t//  fixed positioning, a world in its own\n\t\t\t\t\tposition === 'fixed' ? 1 : 0,\n\n\t\t\t\t\t//  positive stacking context: 0/1\n\t\t\t\t\tcontext && (zIndex === 'auto' || zIndex >= 0) ? 1 : 0,\n\n\t\t\t\t\t//  positioned (and not stacking context)\n\t\t\t\t\tposition !== 'static' && !context ? 1 : 0,\n\n\t\t\t\t\t//  inline level elements (natural position order)\n\t\t\t\t\tfloatValue === 'none' && position === 'static' && !blockType ? 1 : 0,\n\n\t\t\t\t\t//  floating elements are between natural positioned inline and block level elements\n\t\t\t\t\tfloatValue !== 'none' && !context && position === 'static' ? 1 : 0,\n\n\t\t\t\t\t//  block level element (natural position order)\n\t\t\t\t\tfloatValue === 'none' && position === 'static' && blockType ? 1 : 0,\n\n\t\t\t\t\t//  negative stacking context\n\t\t\t\t\tcontext && zIndex < 0 ? 1 : 0\n\t\t\t\t].join(''), 2);\n\n\t\t\treturn {\n\t\t\t\ttype: type,\n\t\t\t\tindex: position !== 'static' || !zIndex || zIndex === 'auto' ? 0 : zIndex,\n\t\t\t\tcontext: (dom.STACK_NEGATIVE & type || dom.STACK_POSITIONED & type || dom.STACK_POSITIVE & type || dom.STACK_GLOBAL & type) !== 0\n\t\t\t};\n\t\t}\n\n\t\t/**\n\t\t *  Get the unique reference for given DOM element, adds it if it does not yet exist\n\t\t *  @name    elementReference\n\t\t *  @type    function\n\t\t *  @access  internal\n\t\t *  @param   DOMElement element\n\t\t *  @param   bool       hidden [optional, default false]\n\t\t *  @return  string unique reference\n\t\t *  @note    this function adds an attribute 'data-kxref' to the element if the reference is not hidden\n\t\t *           (the hidden option is not considered to be best practise)\n\t\t */\n\t\tfunction elementReference(element, hidden) {\n\t\t\tvar name = 'kxref',\n\t\t\t\tprepare = {\n\t\t\t\t\twindow: window,\n\t\t\t\t\tdocument: document,\n\t\t\t\t\troot: document.documentElement,\n\t\t\t\t\thead: document.head,\n\t\t\t\t\tbody: document.body\n\t\t\t\t},\n\t\t\t\treference, p;\n\n\t\t\t//  we don't ever contaminate the window object, document, documentElement or body element\n\t\t\tfor (p in prepare) {\n\t\t\t\tif (element === prepare[p]) {\n\t\t\t\t\treturn p;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (!element || !('nodeType' in element) || element.nodeType !== 1) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\telse {\n\t\t\t\treference = hidden ? (name in element ? element[name] : null) : element.getAttribute('data-' + name);\n\t\t\t}\n\n\t\t\t//  if no reference was set yet, do so now\n\t\t\tif (!reference) {\n\t\t\t\treference = konflux.unique();\n\n\t\t\t\tif (hidden) {\n\t\t\t\t\telement[name] = reference;\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\telement.setAttribute('data-' + name, reference);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn reference;\n\t\t}\n\n\t\t/**\n\t\t *  Create a dom structure from given variable\n\t\t *  @name   create\n\t\t *  @type   method\n\t\t *  @access public\n\t\t *  @param  mixed source\n\t\t *  @return DOMElement structure\n\t\t */\n\t\tdom.create = createStructure;\n\n\t\t/**\n\t\t *  Append given source element or structure to the target element\n\t\t *  @name   appendTo\n\t\t *  @type   method\n\t\t *  @access public\n\t\t *  @param  DOMElement target\n\t\t *  @param  mixed source (one of: DOMElement, Object structure)\n\t\t *  @return Array of added source elements\n\t\t */\n\t\tdom.appendTo = function(target, source) {\n\t\t\treturn appendTo(target, konflux.isType('object', source) && !konflux.isType('undefined', source.nodeType) ? source : createStructure(source, target));\n\t\t};\n\n\t\t/**\n\t\t *  Determine whether element is in the ancestor element or the ancestor element itself\n\t\t *  @name   contains\n\t\t *  @type   method\n\t\t *  @access public\n\t\t *  @param  DOMElement ancestor\n\t\t *  @param  DOMElement element\n\t\t *  @return bool is (in) ancestor\n\t\t */\n\t\tdom.contains = contains;\n\n\t\t/**\n\t\t *  Select elements matching given CSS selector\n\t\t *  @name   select\n\t\t *  @type   method\n\t\t *  @access public\n\t\t *  @param  string     selector\n\t\t *  @param  DOMElement parent\n\t\t *  @return KonfluxIterator nodeList\n\t\t */\n\t\tdom.select = function(selector, parent) {\n\t\t\treturn konflux.iterator((parent || document).querySelectorAll(selector));\n\t\t};\n\n\t\t/**\n\t\t *  Get the unique reference for given DOM element, adds it if it does not yet exist\n\t\t *  @name    reference\n\t\t *  @type    method\n\t\t *  @access  public\n\t\t *  @param   DOMElement element\n\t\t *  @return  string unique reference\n\t\t *  @note    this function adds an attribute 'data-kxref' to the element\n\t\t */\n\t\tdom.reference = function(element) {\n\t\t\treturn elementReference(element);\n\t\t};\n\n\t\t/**\n\t\t *  Obtain the stacking order level\n\t\t *  @name   stackLevel\n\t\t *  @type   method\n\t\t *  @access public\n\t\t *  @param  DOMElement node\n\t\t *  @return object stack order (format: {type:<int>, index:<int>})\n\t\t */\n\t\tdom.stackLevel = stackOrderIndex;\n\t}\n\n\t;(function(dom) {\n\t\tkonflux.register('dom', dom);\n\n\t\t/**\n\t\t *  Select elements matching given CSS selector\n\t\t *  @name   select\n\t\t *  @type   method\n\t\t *  @access public\n\t\t *  @param  string     selector\n\t\t *  @param  DOMElement parent\n\t\t *  @return DOMNodeList (empty Array if the dom module is not available)\n\t\t */\n\t\tkonflux.register('select', function(selector, parent) {\n\t\t\treturn dom.select(selector, parent);\n\t\t});\n\t})(new KonfluxDOM());\n\n\t//END INCLUDE: core/dom [1.80ms, 9.03KB]\n\t//BEGIN INCLUDE: core/browser\n\t/**\n\t *  Browser/feature detection\n\t *  @module  browser\n\t *  @note    available as konflux.browser / kx.browser\n\t */\n\tfunction KonfluxBrowser() {\n\t\t/*jshint validthis: true*/\n\t\tvar browser = this,\n\t\t\tsupport = {\n\t\t\t\ttouch: 'ontouchstart' in window || 'msMaxTouchPoints' in navigator\n\t\t\t},\n\t\t\tprefix,\n\t\t\tieVersion;\n\n\t\t/**\n\t\t *  Determine whether or not the browser is Internet Explorer (4+)\n\t\t *  @name    detectIE\n\t\t *  @type    function\n\t\t *  @access  internal\n\t\t *  @return  mixed (boolean false if not IE, version number if IE)\n\t\t */\n\t\tfunction detectIE() {\n\t\t\t//  https://gist.github.com/527683 (Conditional comments only work for IE 5 - 9)\n\t\t\tvar node = document.createElement('div'),\n\t\t\t\tcheck = node.getElementsByTagName('i'),\n\t\t\t\tversion = 4;\n\n\t\t\t//  Starting with IE 4 (as version is incremented before first use), an <i> element is added to\n\t\t\t//  the 'node' element surrounded by conditional comments. The 'check' variable is automatically updated\n\t\t\t//  to contain all <i> elements. These elements are not there if the browser does not support conditional\n\t\t\t//  comments or does not match the IE version\n\t\t\t//  Note that there are two conditions for the while loop; the innerHTML filling and the check, the while\n\t\t\t//  loop itself has no body (as it is closed off by a semi-colon right after declaration)\n\t\t\twhile (node.innerHTML = '<!--[if gt IE ' + version + ']><i></i><![endif]-->', check.length && version < 10) {\n\t\t\t\t++version;\n\t\t\t}\n\n\t\t\t//  Added IE's @cc_on trickery for browser which do not support conditional comments (such as IE10)\n\t\t\tversion = version > 4 ? version : /*jshint evil: true */Function('/*@cc_on return document.documentMode;@*/return false')()/*jshint evil: false */;\n\n\t\t\t//  IE11 removed the @cc_on syntax, so we need to go deeper\n\t\t\treturn version ? version : ('-ms-ime-align' in document.documentElement.style ? 11 : false);\n\t\t}\n\n\t\t/**\n\t\t *  Determine whether or not the browser has given feature in either the window or document scope\n\t\t *  @name    hasFeature\n\t\t *  @type    function\n\t\t *  @access  internal\n\t\t *  @param   string   feature\n\t\t *  @return  boolean  has feature\n\t\t */\n\t\tfunction hasFeature(feature) {\n\t\t\treturn !konflux.isType('undefined', support[feature]) ? support[feature] : feature in window || feature in document;\n\t\t}\n\n\t\t/**\n\t\t *  Obtain a specific feature from the browser, be it the native property or the vendor prefixed property\n\t\t *  @name    getFeature\n\t\t *  @type    function\n\t\t *  @access  internal\n\t\t *  @param   mixed    feature [one of: string feature or array with string features]\n\t\t *  @param   array    scope(s) [optional, default null - global scopes]\n\t\t *  @return  mixed    feature (false if it doesn't exist)\n\t\t */\n\t\tfunction getFeature(feature, scope) {\n\t\t\tvar vendor = vendorPrefix(),\n\n\t\t\t\t//  the objects to search for the feature\n\t\t\t\tobject = scope ? scope : [\n\t\t\t\t\twindow,\n\t\t\t\t\tdocument,\n\t\t\t\t\tnavigator\n\t\t\t\t],\n\t\t\t\tsearch = [],\n\t\t\t\tuc, i;\n\n\t\t\tif (!(feature instanceof Array)) {\n\t\t\t\tfeature = [feature];\n\t\t\t}\n\n\t\t\tfor (i = 0; i < feature.length; ++i) {\n\t\t\t\tuc = konflux.string.ucFirst(feature[i]);\n\t\t\t\tsearch = search.concat([\n\t\t\t\t\tfeature[i],\n\t\t\t\t\tvendor + uc,\n\t\t\t\t\tvendor.toLowerCase() + uc\n\t\t\t\t]);\n\t\t\t}\n\n\t\t\twhile (search.length) {\n\t\t\t\tfeature = search.shift();\n\n\t\t\t\tfor (i = 0; i < object.length; ++i) {\n\t\t\t\t\tif (feature in object[i]) {\n\t\t\t\t\t\treturn object[i][feature];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn false;\n\t\t}\n\n\t\t/**\n\t\t *  Obtain the vendor prefix for the current browser\n\t\t *  @name   vendorPrefix\n\t\t *  @type   function\n\t\t *  @access internal\n\t\t *  @return string prefix\n\t\t */\n\t\tfunction vendorPrefix() {\n\t\t\tvar vendor = ['Icab', 'Khtml', 'O', 'ms', 'Moz', 'webkit'],\n\t\t\t\tregex  = new RegExp('^(' + vendor.join('|') + ')(?=[A-Z])'),\n\t\t\t\tscript = document.createElement('script'),\n\t\t\t\tp;\n\n\t\t\t//  try to find any vendor prefixed style property on our script node\n\t\t\tfor (p in script.style) {\n\t\t\t\tif (regex.test(p)) {\n\t\t\t\t\tprefix = p.match(regex).shift();\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t//  as a last resort, try to see if the <pre>Opacity property exists\n\t\t\twhile (!prefix && vendor.length) {\n\t\t\t\tp = vendor.pop();\n\t\t\t\tif (p + 'Opacity' in script.style) {\n\t\t\t\t\tprefix = p;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tscript = null;\n\n\t\t\treturn prefix;\n\t\t}\n\n\t\t/**\n\t\t *  Verify if the browser at hand is any version of Internet Explorer (4+)\n\t\t *  @name    ie\n\t\t *  @type    method\n\t\t *  @access  public\n\t\t *  @param   number min version [optional, default null - obtain the version number]\n\t\t *  @return  mixed (boolean false if not IE (or not minimal version), version number if IE)\n\t\t *  @see     detectIE\n\t\t *  @note    this public implementation caches the result\n\t\t */\n\t\tbrowser.ie = function(min) {\n\t\t\tif (konflux.isType('undefined', ieVersion)) {\n\t\t\t\tieVersion = detectIE();\n\t\t\t}\n\n\t\t\treturn min && ieVersion ? ieVersion < min : ieVersion;\n\t\t};\n\n\t\t/**\n\t\t *  Obtain the vendor prefix for the current browser\n\t\t *  @name    prefix\n\t\t *  @type    method\n\t\t *  @access  public\n\t\t *  @return  string prefix\n\t\t *  @note    this public implementation caches the result\n\t\t */\n\t\tbrowser.prefix = function() {\n\t\t\tif (!prefix) {\n\t\t\t\tprefix = vendorPrefix();\n\t\t\t}\n\n\t\t\treturn prefix;\n\t\t};\n\n\t\t/**\n\t\t *  Obtain a specific feature from the browser\n\t\t *  @name    feature\n\t\t *  @type    method\n\t\t *  @access  public\n\t\t *  @param   mixed    feature [one of: string feature or array with string features]\n\t\t *  @param   mixed    scope(s) [optional, default null - global scopes]\n\t\t *  @return  mixed    feature (false if it doesn't exist)\n\t\t *  @note    this method attempts to search for the native feature and falls back onto vendor prefixed features\n\t\t */\n\t\tbrowser.feature = function(feature, scope) {\n\t\t\tif (scope && !(scope instanceof Array)) {\n\t\t\t\tscope = [scope];\n\t\t\t}\n\n\t\t\treturn getFeature(feature, scope);\n\t\t};\n\n\t\t/**\n\t\t *  Test whether or not the browser at hand is aware of given feature(s) exist in either the window or document scope\n\t\t *  @name    supports\n\t\t *  @type    method\n\t\t *  @access  public\n\t\t *  @param   string feature1\n\t\t *  @param   string ...\n\t\t *  @param   string featureN\n\t\t *  @return  boolean support\n\t\t *  @note    multiple features can be provided, in which case the return value indicates the support of all given features\n\t\t */\n\t\tbrowser.supports = function() {\n\t\t\tvar r = true,\n\t\t\t\ti = arguments.length;\n\n\t\t\t//  test all the features given\n\t\t\twhile (r && --i >= 0) {\n\t\t\t\tr = r && hasFeature(arguments[i]);\n\t\t\t}\n\n\t\t\treturn r;\n\t\t};\n\n\t\t/**\n\t\t *  Enable the HTML5 fullscreen mode for given element\n\t\t *  @name    fullscreen\n\t\t *  @type    method\n\t\t *  @access  public\n\t\t *  @param   DOMNode target [optional, default document.documentElement]\n\t\t *  @return  bool    success\n\t\t *  @note    this method is highly experimental\n\t\t */\n\t\tbrowser.fullscreen = function(target) {\n\t\t\tvar check = ['fullScreen', 'isFullScreen'],\n\t\t\t\tvendor = browser.prefix().toLowerCase(),\n\t\t\t\tmethod, i;\n\n\t\t\tif (!target) {\n\t\t\t\ttarget = document.documentElement;\n\t\t\t}\n\n\t\t\tfor (i = 0, method = null; i < check.length, method === null; ++i) {\n\t\t\t\tmethod = check[i] in document ? check[i] : vendor + konflux.string.ucFirst(check[i]);\n\t\t\t\tif (!(method in document)) {\n\t\t\t\t\tmethod = null;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tvendor = method.match(new RegExp('^' + vendor)) ? vendor : null;\n\t\t\tvendor = (vendor || (document[method] ? 'cancel' : 'request')) + konflux.string.ucFirst((vendor ? (document[method] ? 'cancel' : 'request') : '') + konflux.string.ucFirst(check[0]));\n\n\t\t\t(document[method] ? document : target)[vendor](target.ALLOW_KEYBOARD_INPUT || null);\n\t\t};\n\t}\n\n\tkonflux.register('browser', new KonfluxBrowser());\n\n\t//END INCLUDE: core/browser [1.46ms, 7.17KB]\n\t//BEGIN INCLUDE: core/event\n\t/**\n\t *  Event attachment handler\n\t *  @module  event\n\t *  @note    available as konflux.event / Konflux.event\n\t */\n\tfunction KonfluxEvent() {\n\t\t/*jshint validthis: true*/\n\t\tvar event = this,\n\t\t\tqueue = {},\n\t\t\tdelegate, touch;\n\n\t\t/*global KonfluxEventDelegate*/\n\n\t\t//BEGIN INCLUDE: event/delegate\n\t\t/**\n\t\t *  Delegate manager object, keep track of all delegates created for DOMElement/Event combinations\n\t\t *  @name    KonfluxEventDelegate\n\t\t *  @type    module\n\t\t *  @access  internal\n\t\t */\n\t\tfunction KonfluxEventDelegate(unifier) {\n\t\t\t//\n\t\t\t'use strict';\n\n\t\t\t/*global konflux*/\n\n\t\t\t/*jshint validthis: true*/\n\t\t\tvar delegation = this,\n\t\t\t\tseparator = '!',\n\t\t\t\tstore = {};\n\n\t\t\t/**\n\t\t\t *  Unify the event type into an object alway containing the name and the namespace\n\t\t\t *  @name    namespace\n\t\t\t *  @type    function\n\t\t\t *  @access  internal\n\t\t\t *  @param   string event type\n\t\t\t *  @return  object namespace ({name: * | type, namespace: * || namespace})\n\t\t\t */\n\t\t\tfunction namespace(type) {\n\t\t\t\tvar match = type ? type.match(/^([^\\.]*)?(?:\\.(.+))?$/) : ['', '*', '*'];\n\n\t\t\t\treturn {\n\t\t\t\t\tname: match[1] || '*',\n\t\t\t\t\tnamespace: match[2] || '*'\n\t\t\t\t};\n\t\t\t}\n\n\t\t\t/**\n\t\t\t *  Obtain a proper key value for given target DOMElement\n\t\t\t *  @name    targetKey\n\t\t\t *  @type    function\n\t\t\t *  @access  internal\n\t\t\t *  @param   DOMElement target\n\t\t\t *  @return  string     key\n\t\t\t */\n\t\t\tfunction targetKey(target) {\n\t\t\t\treturn konflux.dom.reference(target);\n\t\t\t}\n\n\t\t\t/**\n\t\t\t *  Remove whitespace and comments from given input, making nearly every string usable as key\n\t\t\t *  @name    strip\n\t\t\t *  @type    function\n\t\t\t *  @access  internal\n\t\t\t *  @param   string input\n\t\t\t *  @return  string stripped\n\t\t\t */\n\t\t\tfunction strip(input) {\n\t\t\t\treturn (input + '').replace(/\\s+|\\/\\*.*?\\*\\//g, '');\n\t\t\t}\n\n\t\t\t/**\n\t\t\t *  Create a delegate function for the given combination of arguments, or return the previously created one\n\t\t\t *  @name    create\n\t\t\t *  @type    function\n\t\t\t *  @access  internal\n\t\t\t *  @param   DOMElement target\n\t\t\t *  @param   string event namespace\n\t\t\t *  @param   string event name\n\t\t\t *  @param   string filter\n\t\t\t *  @param   function handler\n\t\t\t *  @param   bool capture\n\t\t\t *  @return  object delegate ({target, namespace, type, filter, capture, delegate})\n\t\t\t */\n\t\t\tfunction create(target, ns, type, filter, handler, capture) {\n\t\t\t\tvar key = [\n\t\t\t\t\t\ttargetKey(target),\n\t\t\t\t\t\tns,\n\t\t\t\t\t\ttype,\n\t\t\t\t\t\tfilter ? strip(filter) : false,\n\t\t\t\t\t\tcapture || false,\n\t\t\t\t\t\tstrip(handler)\n\t\t\t\t\t].join(separator);\n\n\t\t\t\t//  if the key does not yet exist in the store, we create it\n\t\t\t\tif (!(key in store)) {\n\t\t\t\t\tstore[key] = {\n\t\t\t\t\t\ttarget: target,\n\t\t\t\t\t\tnamespace: ns,\n\t\t\t\t\t\ttype: type,\n\t\t\t\t\t\tfilter: filter,\n\t\t\t\t\t\tcapture: capture || false,\n\t\t\t\t\t\tdelegate: function(e) {\n\t\t\t\t\t\t\tvar evt = e || window.event,\n\t\t\t\t\t\t\t\tresult;\n\n\t\t\t\t\t\t\tif (filter) {\n\t\t\t\t\t\t\t\tif (!('target' in evt) && 'srcElement' in evt) {\n\t\t\t\t\t\t\t\t\tevt.target = evt.srcElement;\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\tkonflux.select(filter, target).each(function(element) {\n\t\t\t\t\t\t\t\t\tif (evt.target === element || konflux.dom.contains(element, evt.target)) {\n\t\t\t\t\t\t\t\t\t\tevt.delegate = target;\n\t\t\t\t\t\t\t\t\t\tresult = handler.apply(element, [unifier(evt)]);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse if (handler) {\n\t\t\t\t\t\t\t\tresult = handler.apply(target, [unifier(evt)]);\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif (result === false) {\n\t\t\t\t\t\t\t\tif (evt.stopPropagation) {\n\t\t\t\t\t\t\t\t\tevt.stopPropagation();\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\telse if (evt.cancelBubble) {\n\t\t\t\t\t\t\t\t\tevt.cancelBubble = true;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t};\n\t\t\t\t}\n\n\t\t\t\treturn store[key];\n\t\t\t}\n\n\t\t\t/**\n\t\t\t *  Remove given key from the store\n\t\t\t *  @name    remove\n\t\t\t *  @type    function\n\t\t\t *  @access  internal\n\t\t\t *  @param   string key\n\t\t\t *  @return  void\n\t\t\t */\n\t\t\tfunction remove(key) {\n\t\t\t\tif (key in store) {\n\t\t\t\t\tdelete store[key];\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t/**\n\t\t\t *  Find all delegates that match given arguments\n\t\t\t *  @name    find\n\t\t\t *  @type    function\n\t\t\t *  @access  internal\n\t\t\t *  @param   DOMElement target\n\t\t\t *  @param   string event namespace\n\t\t\t *  @param   string event name\n\t\t\t *  @param   string filter\n\t\t\t *  @param   function handler\n\t\t\t *  @return  Array matches\n\t\t\t */\n\t\t\tfunction find(target, ns, type, filter, handler) {\n\t\t\t\tvar wildcard = '.*?',\n\t\t\t\t\tpattern = new RegExp([\n\t\t\t\t\t\t'^' + (target ? konflux.string.escapeRegExp(targetKey(target)) : wildcard),\n\t\t\t\t\t\tns && ns !== '*' ? konflux.string.escapeRegExp(ns) : wildcard,\n\t\t\t\t\t\ttype && type !== '*' ? konflux.string.escapeRegExp(type) : wildcard,\n\t\t\t\t\t\tfilter ? konflux.string.escapeRegExp(strip(filter)) : wildcard,\n\t\t\t\t\t\twildcard,\n\t\t\t\t\t\t(handler ? konflux.string.escapeRegExp(strip(handler)) : wildcard) + '$'\n\t\t\t\t\t].join(separator)),\n\t\t\t\t\tresult = {},\n\t\t\t\t\tp;\n\n\t\t\t\tfor (p in store) {\n\t\t\t\t\tif (pattern.test(p)) {\n\t\t\t\t\t\tresult[p] = store[p];\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn result;\n\t\t\t}\n\n\t\t\t/**\n\t\t\t *  Find all delegates that match given arguments\n\t\t\t *  @name    find\n\t\t\t *  @type    method\n\t\t\t *  @access  public\n\t\t\t *  @param   DOMElement target\n\t\t\t *  @param   string event namespace\n\t\t\t *  @param   string event name\n\t\t\t *  @param   string filter\n\t\t\t *  @param   function handler\n\t\t\t *  @return  Array matches\n\t\t\t */\n\t\t\tdelegation.find = function(target, name, filter, handler) {\n\t\t\t\tvar type = namespace(name),\n\t\t\t\t\tfinds = find(target, type.namespace, type.name, filter, handler),\n\t\t\t\t\tresult = [],\n\t\t\t\t\tp;\n\n\t\t\t\tfor (p in finds) {\n\t\t\t\t\tresult.push(finds[p]);\n\t\t\t\t}\n\n\t\t\t\treturn result;\n\t\t\t};\n\n\t\t\t/**\n\t\t\t *  Remove all delegates that match given arguments, and return all of the removed delegates\n\t\t\t *  @name    find\n\t\t\t *  @type    method\n\t\t\t *  @access  public\n\t\t\t *  @param   DOMElement target\n\t\t\t *  @param   string event namespace\n\t\t\t *  @param   string event name\n\t\t\t *  @param   string filter\n\t\t\t *  @param   function handler\n\t\t\t *  @return  Array matches\n\t\t\t */\n\t\t\tdelegation.remove = function(target, name, filter, handler) {\n\t\t\t\tvar type = namespace(name),\n\t\t\t\t\tfinds = find(target, type.namespace, type.name, filter, handler),\n\t\t\t\t\tresult = [],\n\t\t\t\t\tp;\n\n\t\t\t\tfor (p in finds) {\n\t\t\t\t\tresult.push(finds[p]);\n\t\t\t\t\tremove(p);\n\t\t\t\t}\n\n\t\t\t\treturn result;\n\t\t\t};\n\n\t\t\t/**\n\t\t\t *  Create a delegate function for the given combination of arguments, or return the previously created one\n\t\t\t *  @name    create\n\t\t\t *  @type    method\n\t\t\t *  @access  public\n\t\t\t *  @param   DOMElement target\n\t\t\t *  @param   string event\n\t\t\t *  @param   string filter\n\t\t\t *  @param   function handler\n\t\t\t *  @param   bool capture\n\t\t\t *  @return  object delegate ({target, namespace, type, filter, capture, delegate})\n\t\t\t */\n\t\t\tdelegation.create = function(target, name, filter, handler, capture) {\n\t\t\t\tvar type = namespace(name);\n\n\t\t\t\treturn create(target, type.namespace, type.name, filter, handler, capture || false);\n\t\t\t};\n\t\t}\n\n\t\t//END INCLUDE: event/delegate [1.10ms, 5.88KB]\n\t\t/**\n\t\t *  Ready state handler, removes all relevant triggers and executes any handler that is set\n\t\t *  @name    handleReadyState\n\t\t *  @type    function\n\t\t *  @access  internal\n\t\t *  @return  void\n\t\t */\n\t\tfunction handleReadyState(e) {\n\t\t\tvar run = false,\n\t\t\t\tp;\n\n\t\t\tif (document.removeEventListener) {\n\t\t\t\tdocument.removeEventListener('DOMContentLoaded', handleReadyState, false);\n\t\t\t\twindow.removeEventListener('load', handleReadyState, false);\n\t\t\t\trun = true;\n\t\t\t}\n\t\t\telse if (document.readyState === 'complete') {\n\t\t\t\tdocument.detachEvent('onreadystate', handleReadyState);\n\t\t\t\twindow.detachEvent('onload', handleReadyState);\n\t\t\t\trun = true;\n\t\t\t}\n\n\t\t\tif (run && queue.ready) {\n\t\t\t\tfor (p in queue.ready) {\n\t\t\t\t\tqueue.ready[p].call(e);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t/**\n\t\t *  Get the event name for given event\n\t\t *  @name    getEventName\n\t\t *  @type    function\n\t\t *  @access  internal\n\t\t *  @param   string     name\n\t\t *  @param   DOMElement target\n\t\t *  @return  string     name\n\t\t */\n\t\tfunction getEventName(name, target) {\n\t\t\tvar match = name.match(/^(transition|animation)(end|iteration|start)$/i),\n\t\t\t\tproperty;\n\n\t\t\tif (match && (property = konflux.style.property(match[1], target)) !== match[1]) {\n\t\t\t\tproperty = property.substr(0, property.length - match[1].length);\n\t\t\t\tname = property['to' + (property.length <= 2 ? 'Upper' : 'Lower') + 'Case']() + konflux.string.ucFirst(match[1]) + konflux.string.ucFirst(match[2]);\n\t\t\t}\n\n\t\t\treturn name;\n\t\t}\n\n\t\t/**\n\t\t *  Get the proper event type for given event trigger\n\t\t *  @name    getEventType\n\t\t *  @type    function\n\t\t *  @access  internal\n\t\t *  @param   string name\n\t\t *  @return  string type\n\t\t */\n\t\tfunction getEventType(name) {\n\t\t\tvar list = '!afterprint!beforeprint!canplay!canplaythrough!change!domcontentloaded!durationchange!emptied!ended!input!invalid!loadeddata!loadedmetadata!offline!online!pause!play!playing!ratechange!readystatechange!reset!seeked!seeking!stalled!submit!suspend!timeupdate!volumechange!waiting!abort!domactivate!error!load!resize!scroll!select!unload!animationend!animationiteration!animationstart!beforeunload!blur!domfocusin!domfocusout!focus!focusin!focusout!click!contextmenu!dblclick!mousedown!mouseenter!mouseleave!mousemove!mouseout!mouseover!mouseup!show!compositionend!compositionstart!compositionupdate!copy!cut!paste!drag!dragend!dragenter!dragleave!dragover!dragstart!drop!hashchange!keydown!keypress!keyup!pagehide!pageshow!popstate!touchcancel!touchend!touchmove!touchstart!transitionend!wheel!',\n\t\t\t\tposition = list.indexOf('!' + name.toLowerCase() + '!'),\n\t\t\t\tresult;\n\n\t\t\tif (position < 0) {\n\t\t\t\t//  Use a Custom event for anything we don't know\n\t\t\t\tresult = 'Custom';\n\t\t\t}\n\n\t\t\t//  'afterprint'         (HTML5) The associated document has started printing or the print preview has been closed.\n\t\t\t//  'beforeprint'        (HTML5) The associated document is about to be printed or previewed for printing.\n\t\t\t//  'canplay'            (HTML5 media) The user agent can play the media, but estimates that not enough data has been\n\t\t\t//                                     loaded to play the media up to its end without having to stop for further\n\t\t\t//                                     buffering of content.\n\t\t\t//  'canplaythrough'     (HTML5 media) The user agent can play the media, and estimates that enough data has been\n\t\t\t//                                     loaded to play the media up to its end without having to stop for further\n\t\t\t//                                     buffering of content.\n\t\t\t//  'change'             (DOM L2, HTML5) An element loses focus and its value changed since gaining focus.\n\t\t\t//  'DOMContentLoaded'   (HTML5) The document has finished loading (but not its dependent resources).\n\t\t\t//  'durationchange'     (HTML5 media) The duration attribute has been updated.\n\t\t\t//  'emptied'            (HTML5 media) The media has become empty; for example, this event is sent if the media has\n\t\t\t//                                     already been loaded (or partially loaded), and the load() method is called\n\t\t\t//                                     to reload it.\n\t\t\t//  'ended'              (HTML5 media) Playback has stopped because the end of the media was reached.\n\t\t\t//  'input'              (HTML5) The value of an element changes or the content of an element with the attribute\n\t\t\t//                               contenteditable is modified.\n\t\t\t//  'invalid'            (HTML5) A submittable element has been checked and doesn't satisfy its constraints.\n\t\t\t//  'loadeddata'         (HTML5 media) The first frame of the media has finished loading.\n\t\t\t//  'loadedmetadata'     (HTML5 media) The metadata has been loaded.\n\t\t\t//  'offline'            (HTML5 offline) The browser has lost access to the network.\n\t\t\t//  'online'             (HTML5 offline) The browser has gained access to the network (but particular websites\n\t\t\t//                                       might be unreachable).\n\t\t\t//  'pause'              (HTML5 media) Playback has been paused.\n\t\t\t//  'play'               (HTML5 media) Playback has begun.\n\t\t\t//  'playing'            (HTML5 media) Playback is ready to start after having been paused or delayed due to\n\t\t\t//                                     lack of data.\n\t\t\t//  'ratechange'         (HTML5 media) The playback rate has changed.\n\t\t\t//  'readystatechange'   (HTML5 and XMLHttpRequest) The readyState attribute of a document has changed.\n\t\t\t//  'reset'              (DOM L2, HTML5) A form is reset.\n\t\t\t//  'seeked'             (HTML5 media) A seek operation completed.\n\t\t\t//  'seeking'            (HTML5 media) A seek operation began.\n\t\t\t//  'stalled'            (HTML5 media) The user agent is trying to fetch media data, but data is unexpectedly\n\t\t\t//                                     not forthcoming.\n\t\t\t//  'submit'             (DOM L2, HTML5) A form is submitted.\n\t\t\t//  'suspend'            (HTML5 media) Media data loading has been suspended.\n\t\t\t//  'timeupdate'         (HTML5 media) The time indicated by the currentTime attribute has been updated.\n\t\t\t//  'volumechange'       (HTML5 media) The volume has changed.\n\t\t\t//  'waiting'            (HTML5 media) Playback has stopped because of a temporary lack of data.\n\t\t\telse if (position < 277) {\n\t\t\t\t//  HTMLEvent\n\t\t\t\tresult = 'HTML';\n\t\t\t}\n\n\t\t\t//  'abort'              (DOM L3) The loading of a resource has been aborted.\n\t\t\t//  'DOMActivate'        (DOM L3) A button, link or state changing element is activated (use click instead).\n\t\t\t//  'error'              (DOM L3) A resource failed to load.\n\t\t\t//  'load'               (DOM L3) A resource and its dependent resources have finished loading.\n\t\t\t//  'resize'             (DOM L3) The document view has been resized.\n\t\t\t//  'scroll'             (DOM L3) The document view or an element has been scrolled.\n\t\t\t//  'select'             (DOM L3) Some text is being selected.\n\t\t\t//  'unload'             (DOM L3) The document or a dependent resource is being unloaded.\n\t\t\telse if (position < 334) {\n\t\t\t\t//  UIEvent\n\t\t\t\tresult = 'UI';\n\t\t\t}\n\n\t\t\t//  'animationend'       (CSS Animations) A CSS animation has completed.\n\t\t\t//  'animationiteration' (CSS Animations) A CSS animation is repeated.\n\t\t\t//  'animationstart'     (CSS Animations) A CSS animation has started.\n\t\t\telse if (position < 381) {\n\t\t\t\t//  AnimationEvent\n\t\t\t\tresult = 'Animation';\n\t\t\t}\n\n\t\t\t//  'beforeunload'       (HTML5)\n\t\t\telse if (position < 394) {\n\t\t\t\t//  BeforeUnloadEvent\n\t\t\t\tresult = 'BeforeUnload';\n\t\t\t}\n\n\t\t\t//  'blur'               (DOM L3) An element has lost focus (does not bubble).\n\t\t\t//  'DOMFocusIn'         (DOM L3) An element has received focus (use focus or focusin instead).\n\t\t\t//  'DOMFocusOut'        (DOM L3) An element has lost focus (use blur or focusout instead).\n\t\t\t//  'focus'              (DOM L3) An element has received focus (does not bubble).\n\t\t\t//  'focusin'            (DOM L3) An element is about to receive focus (bubbles).\n\t\t\t//  'focusout'           (DOM L3) An element is about to lose focus (bubbles).\n\t\t\telse if (position < 445) {\n\t\t\t\t//  FocusEvent\n\t\t\t\tresult = 'Focus';\n\t\t\t}\n\n\t\t\t//  'click'              (DOM L3) A pointing device button has been pressed and released on an element.\n\t\t\t//  'contextmenu'        (HTML5) The right button of the mouse is clicked (before the context menu is displayed).\n\t\t\t//  'dblclick'           (DOM L3) A pointing device button is clicked twice on an element.\n\t\t\t//  'mousedown'          (DOM L3) A pointing device button (usually a mouse) is pressed on an element.\n\t\t\t//  'mouseenter'         (DOM L3) A pointing device is moved onto the element that has the listener attached.\n\t\t\t//  'mouseleave'         (DOM L3) A pointing device is moved off the element that has the listener attached.\n\t\t\t//  'mousemove'          (DOM L3) A pointing device is moved over an element.\n\t\t\t//  'mouseout'           (DOM L3) A pointing device is moved off the element that has the listener attached or\n\t\t\t//                                off one of its children.\n\t\t\t//  'mouseover'          (DOM L3) A pointing device is moved onto the element that has the listener attached or\n\t\t\t//                                onto one of its children.\n\t\t\t//  'mouseup'            (DOM L3) A pointing device button is released over an element.\n\t\t\t//  'show'               (HTML5) A contextmenu event was fired on/bubbled to an element that has a\n\t\t\t//                               contextmenu attribute\n\t\t\telse if (position < 546) {\n\t\t\t\t//  MouseEvent\n\t\t\t\tresult = 'Mouse';\n\t\t\t}\n\n\t\t\t//  'compositionend'     (DOM L3) The composition of a passage of text has been completed or canceled.\n\t\t\t//  'compositionstart'   (DOM L3) The composition of a passage of text is prepared (similar to keydown for\n\t\t\t//                                a keyboard input, but works with other inputs such as speech recognition).\n\t\t\t//  'compositionupdate'  (DOM L3) A character is added to a passage of text being composed.\n\t\t\telse if (position < 596) {\n\t\t\t\t//  CompositionEvent\n\t\t\t\tresult = 'Composition';\n\t\t\t}\n\n\t\t\t//  'copy'               (Clipboard) The text selection has been added to the clipboard.\n\t\t\t//  'cut'                (Clipboard) The text selection has been removed from the document and added to the clipboard.\n\t\t\t//  'paste'              (Clipboard) Data has been transfered from the system clipboard to the document.\n\t\t\telse if (position < 611) {\n\t\t\t\t//  ClipboardEvent\n\t\t\t\tresult = 'Clipboard';\n\t\t\t}\n\n\t\t\t//  'drag'               (HTML5) An element or text selection is being dragged (every 350ms).\n\t\t\t//  'dragend'            (HTML5) A drag operation is being ended (by releasing a mouse button or hitting the\n\t\t\t//                               escape key).\n\t\t\t//  'dragenter'          (HTML5) A dragged element or text selection enters a valid drop target.\n\t\t\t//  'dragleave'          (HTML5) A dragged element or text selection enters a valid drop target.\n\t\t\t//  'dragover'           (HTML5) An element or text selection is being dragged over a valid drop target (every 350ms).\n\t\t\t//  'dragstart'          (HTML5) The user starts dragging an element or text selection.\n\t\t\t//  'drop'               (HTML5) An element is dropped on a valid drop target.\n\t\t\telse if (position < 668) {\n\t\t\t\t//  DragEvent\n\t\t\t\tresult = 'Drag';\n\t\t\t}\n\n\t\t\t//  'hashchange'         (HTML5) The fragment identifier of the URL has changed (the part of the URL after the #).\n\t\t\telse if (position < 679) {\n\t\t\t\t//  HashChangeEvent\n\t\t\t\tresult = 'HashChange';\n\t\t\t}\n\n\t\t\t//  'keydown'            (DOM L3) A key is pressed down.\n\t\t\t//  'keypress'           (DOM L3) A key is pressed down and that key normally produces a character value\n\t\t\t//                                (use input instead).\n\t\t\t//  'keyup'              (DOM L3) A key is released.\n\t\t\telse if (position < 702) {\n\t\t\t\t//  KeyboardEvent\n\t\t\t\tresult = 'Keyboard';\n\t\t\t}\n\n\t\t\t//  'pagehide'           (HTML5) A session history entry is being traversed from.\n\t\t\t//  'pageshow'           (HTML5) A session history entry is being traversed to.\n\t\t\telse if (position < 720) {\n\t\t\t\t//  PageTransitionEvent\n\t\t\t\tresult = 'PageTransition';\n\t\t\t}\n\n\t\t\t//  'popstate'           (HTML5) A session history entry is being navigated to (in certain cases).\n\t\t\telse if (position < 729) {\n\t\t\t\t//  PopStateEvent\n\t\t\t\tresult = 'PopState';\n\t\t\t}\n\n\t\t\t//  'touchcancel'        (Touch Events) A touch point has been disrupted in an implementation-specific manners\n\t\t\t//                                      (too many touch points for example).\n\t\t\t//  'touchend'           (Touch Events) A touch point is removed from the touch surface.\n\t\t\t//  'touchmove'          (Touch Events) A touch point is moved along the touch surface.\n\t\t\t//  'touchstart'         (Touch Events) A touch point is placed on the touch surface.\n\t\t\telse if (position < 771) {\n\t\t\t\t//  TouchEvent\n\t\t\t\tresult = 'Touch';\n\t\t\t}\n\n\t\t\t//  'transitionend'      (Transition Events) A CSS Transition has completed.\n\t\t\telse if (position < 777) {\n\t\t\t\t//  TransitionEvent\n\t\t\t\tresult = 'Transition';\n\t\t\t}\n\n\t\t\t//  'wheel'              (DOM L3) A wheel button of a pointing device is rotated in any direction.\n\t\t\telse if (position < 786) {\n\t\t\t\t//  WheelEvent\n\t\t\t\tresult = 'Wheel';\n\t\t\t}\n\n\t\t\treturn result + 'Event';\n\t\t}\n\n\t\t/**\n\t\t *  Get a property name unique per event type/dom element\n\t\t *  @name    getEventProperty\n\t\t *  @type    function\n\t\t *  @access  internal\n\t\t *  @param   DOMElement target\n\t\t *  @param   string     type\n\t\t *  @return  string name\n\t\t */\n\t\tfunction getEventProperty(target, type) {\n\t\t\treturn '__kxevt_' + type + '_' + konflux.dom.reference(target);\n\t\t}\n\n\t\t/**\n\t\t *  Unify the event object, which makes event more consistent across browsers\n\t\t *  @name    unifyEvent\n\t\t *  @type    function\n\t\t *  @access  internal\n\t\t *  @return  Event object\n\t\t */\n\t\tfunction unifyEvent(e) {\n\t\t\tvar evt = e || window.event;\n\n\t\t\tif (konflux.isType('undefined', evt.target)) {\n\t\t\t\tevt.target = !konflux.isType('undefined', evt.srcElement) ? evt.srcElement : null;\n\t\t\t}\n\n\t\t\tif (konflux.isType('undefined', evt.type)) {\n\t\t\t\tevt.type = evt.eventType;\n\t\t\t}\n\n\t\t\tevt.family = getEventType(evt.type);\n\n\t\t\tif (/^(mouse[a-z]+|drag(?:[a-z]+)?|drop|(?:dbl)?click)$/i.test(evt.type)) {\n\t\t\t\tevt.mouse = konflux.point(\n\t\t\t\t\tevt.pageX ? evt.pageX : (evt.clientX ? evt.clientX + document.body.scrollLeft + document.documentElement.scrollLeft : 0),\n\t\t\t\t\tevt.pageY ? evt.pageY : (evt.clientY ? evt.clientY + document.body.scrollTop + document.documentElement.scrollTop : 0)\n\t\t\t\t);\n\t\t\t}\n\n\t\t\treturn evt;\n\t\t}\n\n\t\t/**\n\t\t *  Prepare an iterator containing all given targets as item\n\t\t *  @name    prepareTargetIterator\n\t\t *  @type    function\n\t\t *  @access  internal\n\t\t *  @param   mixed target [one of: string CSSSelector, DOMElement, DOMNodeList, Array DOMElement, KonfluxIterator DOMElement, window]\n\t\t *  @return  KonfluxIterator target\n\t\t */\n\t\tfunction prepareTargetIterator(targets) {\n\t\t\tif (!targets) {\n\t\t\t\ttargets = [];\n\t\t\t}\n\n\t\t\tif (targets === window) {\n\t\t\t\ttargets = [targets];\n\t\t\t}\n\n\t\t\tif (konflux.isType('string', targets)) {\n\t\t\t\ttargets = document.querySelectorAll(targets);\n\t\t\t}\n\n\t\t\tif (!konflux.isType('number', targets.length)) {\n\t\t\t\ttargets = [targets];\n\t\t\t}\n\n\t\t\treturn konflux.iterator(targets);\n\t\t}\n\n\t\t/**\n\t\t *  Prepare an iterator containing all given events as item\n\t\t *  @name    prepareEventIterator\n\t\t *  @type    function\n\t\t *  @access  internal\n\t\t *  @param   mixed event [one of: string events, Array events, KonfluxIterator events]\n\t\t *  @return  KonfluxIterator events\n\t\t */\n\t\tfunction prepareEventIterator(events) {\n\t\t\tif (konflux.isType('string', events)) {\n\t\t\t\tevents = events.replace(/\\*/g, '').split(/[\\s*,]+/);\n\t\t\t}\n\t\t\telse if (!events) {\n\t\t\t\tevents = [];\n\t\t\t}\n\n\t\t\treturn konflux.iterator(events);\n\t\t}\n\n\t\t/**\n\t\t *  Attach event handler(s) to elements\n\t\t *  @name    listen\n\t\t *  @type    function\n\t\t *  @access  internal\n\t\t *  @param   mixed target [one of: string CSSSelector, DOMElement, DOMNodeList, Array DOMElement, KonfluxIterator DOMElement, window]\n\t\t *  @param   mixed event [one of: string events, Array events, KonfluxIterator events]\n\t\t *  @param   mixed [one of: function handler or string CSSSelector]\n\t\t *  @param   mixed [one of: function handler or bool capture]\n\t\t *  @param   mixed [one of: bool capture or null]\n\t\t *  @return  void\n\t\t */\n\t\tfunction listen(targets, events, filter, handler, capture) {\n\t\t\tif (!delegate) {\n\t\t\t\tdelegate = new KonfluxEventDelegate(unifyEvent);\n\t\t\t}\n\n\t\t\tevents = prepareEventIterator(events);\n\t\t\tprepareTargetIterator(targets).each(function(target) {\n\t\t\t\tevents.each(function(event) {\n\t\t\t\t\tvar setting = delegate.create(target, event, filter, handler, capture || filter ? true : false);\n\n\t\t\t\t\tattach(setting.target, setting.type, setting.delegate, setting.capture);\n\t\t\t\t});\n\t\t\t});\n\t\t}\n\n\t\t/**\n\t\t *  Remove event handlers from elements\n\t\t *  @name    remove\n\t\t *  @type    function\n\t\t *  @access  internal\n\t\t *  @param   mixed [one of: string CSSSelector, DOMElement, DOMNodeList, Array DOMElement, KonfluxIterator DOMElement, function handler, window]\n\t\t *  @param   mixed [one of: string events, Array events, KonfluxIterator events, function handler, null]\n\t\t *  @param   mixed [one of: string CSSSelector, function handler, null]\n\t\t *  @param   mixed [one of: function handler, null]\n\t\t *  @return  void\n\t\t */\n\t\tfunction remove(targets, events, filter, handler) {\n\t\t\tvar result = [],\n\t\t\t\ti;\n\n\t\t\tif (delegate) {\n\t\t\t\tif (!targets) {\n\t\t\t\t\tresult = result.concat(delegate.find(null, null, null, handler));\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tprepareTargetIterator(targets).each(function(target) {\n\t\t\t\t\t\tif (!events) {\n\t\t\t\t\t\t\tresult = result.concat(delegate.find(target, null, null, handler));\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tprepareEventIterator(events).each(function(event) {\n\t\t\t\t\t\t\t\tresult = result.concat(delegate.find(target, event, filter, handler));\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t\tif (result.length > 0) {\n\t\t\t\t\tfor (i = 0; i < result.length; ++i) {\n\t\t\t\t\t\tdetach(result[i].target, result[i].type, result[i].delegate, result[i].capture);\n\t\t\t\t\t\tdelegate.remove(result[i].target, result[i].type, filter, handler);\n\t\t\t\t\t}\n\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn false;\n\t\t}\n\n\t\t/**\n\t\t *  Attach an event handler to the target element\n\t\t *  @name    attach\n\t\t *  @type    function\n\t\t *  @access  internal\n\t\t *  @param   DOMElement target\n\t\t *  @param   string     event\n\t\t *  @param   function   handler\n\t\t *  @param   bool       capture\n\t\t *  @return  void\n\t\t */\n\t\tfunction attach(target, type, handler, capture) {\n\t\t\tvar prop;\n\n\t\t\tif (target.addEventListener) {\n\t\t\t\ttarget.addEventListener(getEventName(type), handler, capture);\n\t\t\t}\n\t\t\telse if (target.attachEvent) {\n\t\t\t\tswitch (getEventType(type)) {\n\t\t\t\t\tcase 'CustomEvent':\n\t\t\t\t\t\tprop = getEventProperty(target, type);\n\t\t\t\t\t\tif (!(prop in target)) {\n\t\t\t\t\t\t\tObject.defineProperty(target, prop, {\n\t\t\t\t\t\t\t\t//  allow us to meddle with the defined property later on (e.g. remove it)\n\t\t\t\t\t\t\t\tconfigurable: true,\n\n\t\t\t\t\t\t\t\t//  prevent this property from showing up in a for .. in loop\n\t\t\t\t\t\t\t\tenumerable: false,\n\t\t\t\t\t\t\t\tget: function() {\n\t\t\t\t\t\t\t\t\treturn type;\n\t\t\t\t\t\t\t\t},\n\n\t\t\t\t\t\t\t\tset: function(callback) {\n\t\t\t\t\t\t\t\t\tvar name = 'on' + type,\n\t\t\t\t\t\t\t\t\t\ti;\n\n\t\t\t\t\t\t\t\t\tif (!(name in this)) {\n\t\t\t\t\t\t\t\t\t\tthis[name] = [];\n\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\tif (konflux.isType('function', callback)) {\n\t\t\t\t\t\t\t\t\t\tthis[name].push(callback);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\t\t\tcallback.returnValue = true;\n\t\t\t\t\t\t\t\t\t\tcallback.srcElement  = this;\n\n\t\t\t\t\t\t\t\t\t\tfor (i = 0; i < this[name].length; ++i) {\n\t\t\t\t\t\t\t\t\t\t\tthis[name][i].apply(this, [callback]);\n\t\t\t\t\t\t\t\t\t\t\tif (!callback.returnValue) {\n\t\t\t\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t//  assign the event handler\n\t\t\t\t\t\ttarget[prop] = handler;\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tdefault:\n\n\t\t\t\t\t\t//  we deliberately ignore the 'capturing', as this will actually route any (such) event through\n\t\t\t\t\t\t//  the capture target in IE8 (which is the only browser using attachEvent\n\t\t\t\t\t\ttarget.attachEvent('on' + type, handler);\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn;\n\t\t}\n\n\t\t/**\n\t\t *  Detach the event associated with the event type, handler and capturing from the target element\n\t\t *  @name    detach\n\t\t *  @type    function\n\t\t *  @access  internal\n\t\t *  @param   DOMElement target\n\t\t *  @param   string     event\n\t\t *  @param   function   handler\n\t\t *  @param   bool       capture\n\t\t *  @return  void\n\t\t */\n\t\tfunction detach(target, type, handler, capture) {\n\t\t\tif (target.removeEventListener) {\n\t\t\t\ttarget.removeEventListener(getEventName(type), handler, capture);\n\t\t\t}\n\t\t\telse if (target.detachEvent) {\n\t\t\t\tswitch (getEventType(type)) {\n\t\t\t\t\tcase 'CustomEvent':\n\t\t\t\t\t\tdelete target[getEventProperty(target, type)];\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tdefault:\n\t\t\t\t\t\ttarget.detachEvent('on' + type, handler);\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t//  Custom events\n\n\t\t/**\n\t\t *  Create an event object and fire it for any given target\n\t\t *  @name    dispatch\n\t\t *  @type    function\n\t\t *  @access  internal\n\t\t *  @param   mixed  target [one of: string CSSSelector, DOMElement, DOMNodeList, Array DOMElement, KonfluxIterator DOMElement]\n\t\t *  @param   string type\n\t\t *  @param   object option\n\t\t *  @return  void\n\t\t */\n\t\tfunction dispatch(targets, name, option) {\n\t\t\tvar type = getEventType(name) || 'CustomEvent',\n\t\t\t\tSupport = konflux.browser.feature(type),\n\t\t\t\tdetail  = option || {},\n\t\t\t\ttrigger = false,\n\t\t\t\tp;\n\n\t\t\t//  IE11 actually has the CustomEvent (and the likes), but one cannot construct those directly as they are objects\n\t\t\tif (Support && konflux.isType('function', Support)) {\n\t\t\t\ttrigger = new Support(name, {\n\t\t\t\t\tdetail: detail,\n\t\t\t\t\tcancelable: true\n\t\t\t\t});\n\t\t\t}\n\t\t\telse if ('createEvent' in document) {\n\t\t\t\ttrigger = document.createEvent(type);\n\t\t\t\tif (option || type === 'CustomEvent') {\n\t\t\t\t\ttrigger.initCustomEvent(name, false, true, detail);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\ttrigger.initEvent(name, false, true);\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if ('createEventObject' in document) {\n\t\t\t\ttrigger = document.createEventObject();\n\t\t\t\ttrigger.eventType = name;\n\t\t\t\ttrigger.detail    = detail;\n\t\t\t}\n\n\t\t\tif (trigger) {\n\t\t\t\tprepareTargetIterator(targets).each(function(target) {\n\t\t\t\t\tif ('dispatchEvent' in target) {\n\t\t\t\t\t\ttarget.dispatchEvent(trigger);\n\t\t\t\t\t}\n\t\t\t\t\telse if ('fireEvent' in target) {\n\t\t\t\t\t\tif (type === 'CustomEvent') {\n\t\t\t\t\t\t\tp = getEventProperty(target, name);\n\n\t\t\t\t\t\t\t//  simply set the event property as we've already set up an setter function on it\n\t\t\t\t\t\t\tif (!konflux.isType('undefined', target[p])) {\n\t\t\t\t\t\t\t\ttarget[p] = trigger;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\ttarget.fireEvent('on' + name, trigger);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t});\n\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\treturn false;\n\t\t}\n\n\t\t//  expose public API\n\n\t\t/**\n\t\t *  Attach event handler(s) to elements\n\t\t *  @name    add\n\t\t *  @type    method\n\t\t *  @access  public\n\t\t *  @param   mixed target [one of: string CSSSelector, DOMElement, DOMNodeList, Array DOMElement, KonfluxIterator DOMElement]\n\t\t *  @param   mixed event [one of: string events, Array events, KonfluxIterator events]\n\t\t *  @param   mixed [one of: function handler or string CSSSelector]\n\t\t *  @param   mixed [one of: function handler or bool capture]\n\t\t *  @param   mixed [one of: bool capture or null]\n\t\t *  @return  KonfluxEvent reference\n\t\t *\n\t\t *  @note    event.add(target, event, handler [,capture]) - add event handler(s) to target(s)\n\t\t *  @note    event.add(target, event, filter, handler [,capture]) - add event handler(s) to a selection of elements in target(s) matching given filter\n\t\t */\n\t\tevent.add = function(targets, events, filter, handler, capture) {\n\t\t\tsetTimeout(function() {\n\t\t\t\tlisten.apply(event, [targets, events].concat(\n\t\t\t\t\tkonflux.isType('function', filter) ? [null, filter, handler] : [filter, handler, capture]\n\t\t\t\t));\n\t\t\t}, 1);\n\n\t\t\treturn event;\n\t\t};\n\n\t\t/**\n\t\t *  Remove event handlers from elements\n\t\t *  @name    remove\n\t\t *  @type    method\n\t\t *  @access  public\n\t\t *  @param   mixed [one of: string CSSSelector, DOMElement, DOMNodeList, Array DOMElement, KonfluxIterator DOMElement, function handler]\n\t\t *  @param   mixed [one of: string events, Array events, KonfluxIterator events, function handler, null]\n\t\t *  @param   mixed [one of: string CSSSelector, function handler, null]\n\t\t *  @param   mixed [one of: function handler, null]\n\t\t *  @return  KonfluxEvent reference\n\t\t *\n\t\t *  @note    event.remove(target)  - remove all event handling from given target(s)\n\t\t *  @note    event.remove(handler) - remove any event handling using given handler from any target\n\t\t *  @note    event.remove(target, event)   - remove given event(s) from given target(s)\n\t\t *  @note    event.remove(target, handler) - remove any event handling using given handler from given target(s)\n\t\t *  @note    event.remove(target, event, filter)  - remove given event(s) using given selector from given target(s)\n\t\t *  @note    event.remove(target, event, handler) - remove given event(s) using given handler from given target(s)\n\t\t *  @note    event.remove(target, event, filter, handler) - remove given event(s) matching given filter using given handler from given target(s)\n\t\t */\n\t\tevent.remove = function(targets, events, filter, handler) {\n\t\t\tvar arg = [targets, events, filter, handler];\n\n\t\t\t//  if the first argument is a function, we assume it is a handler\n\t\t\t//  and remove the events using it from all elements\n\t\t\tif (konflux.isType('function', targets)) {\n\t\t\t\targ = [null, null, null, targets];\n\t\t\t}\n\n\t\t\t//  if the second argument is a function, we assume the first argument\n\t\t\t//  to be the target(s) and remove all events using this handler from\n\t\t\t//  given target(s)\n\t\t\telse if (konflux.isType('function', events)) {\n\t\t\t\targ = [targets, null, null, events];\n\t\t\t}\n\n\t\t\t//  if the third argument is a function, we know it is not a filter\n\t\t\telse if (konflux.isType('function', filter)) {\n\t\t\t\targ = [targets, events, null, filter];\n\t\t\t}\n\n\t\t\tremove.apply(event, arg);\n\t\t\treturn event;\n\t\t};\n\n\t\t/**\n\t\t *  Trigger a custom event\n\t\t *  @name    trigger\n\t\t *  @type    method\n\t\t *  @access  public\n\t\t *  @param   DOMElement target\n\t\t *  @param   string     name\n\t\t *  @return  void\n\t\t */\n\t\tevent.trigger = function(target, name, option) {\n\t\t\treturn dispatch(target, name, option);\n\t\t};\n\n\t\t/**\n\t\t *  Is the browser capable of touch events\n\t\t *  @name    hasTouch\n\t\t *  @type    method\n\t\t *  @access  public\n\t\t *  @return  bool is touch device\n\t\t */\n\t\tevent.hasTouch = function() {\n\t\t\tif (!konflux.isType('boolean', touch)) {\n\t\t\t\ttouch = konflux.browser.supports('touch');\n\t\t\t}\n\n\t\t\treturn touch;\n\t\t};\n\n\t\t/**\n\t\t *  Register handlers which get triggered when the DOM is ready for interactions\n\t\t *  @name    ready\n\t\t *  @type    method\n\t\t *  @access  public\n\t\t *  @param   function handler\n\t\t *  @return  bool     isReady\n\t\t */\n\t\tevent.ready = function(handler) {\n\t\t\t//  the document is ready already\n\t\t\tif (/^interactive|complete$/.test(document.readyState)) {\n\t\t\t\t// make sure we run the 'event' asynchronously\n\t\t\t\tsetTimeout(handler, 1);\n\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\t//  we cannot use the event.listen method, as we need very different event listeners\n\t\t\tif (typeof queue.ready === 'undefined') {\n\t\t\t\tqueue.ready = [];\n\n\t\t\t\tif (document.addEventListener) {\n\t\t\t\t\t//  prefer the 'DOM ready' event\n\t\t\t\t\tdocument.addEventListener('DOMContentLoaded', handleReadyState, false);\n\n\t\t\t\t\t//  failsafe to window.onload\n\t\t\t\t\twindow.addEventListener('load', handleReadyState, false);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\t//  the closest we can get to 'DOMContentLoaded' in IE, this is still prior to onload\n\t\t\t\t\tdocument.attachEvent('onreadystatechange', handleReadyState);\n\n\t\t\t\t\t//  again the failsafe, now IE style\n\t\t\t\t\twindow.attachEvent('onload', handleReadyState);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tqueue.ready.push(handler);\n\t\t\treturn false;\n\t\t};\n\n\t\t//  Announce deprecation\n\t\tevent.listen = konflux.deprecate(\n\t\t\t'konflux.event.listen is deprecated, use konflux.event.add instead (a drop-in replacement)',\n\t\t\tevent.add\n\t\t);\n\t\tevent.live = konflux.deprecate(\n\t\t\t'konflux.event.live is deprecated, use konflux.event.add instead (a drop-in replacement)',\n\t\t\tevent.add\n\t\t);\n\t}\n\n\tkonflux.register('event', new KonfluxEvent());\n\n\t/**\n\t *  Convenience function bridging the event.ready method\n\t *  @name    ready\n\t *  @type    method\n\t *  @access  public\n\t *  @param   function handler\n\t *  @return  bool     is ready\n\t */\n\tkonflux.register('ready', function(handler) {\n\t\treturn 'event' in konflux ? konflux.event.ready(handler) : false;\n\t});\n\n\t//END INCLUDE: core/event [4.15ms, 33.40KB]\n\t//BEGIN INCLUDE: core/style\n\t/**\n\t *  Style(sheet) manipulation\n\t *  @module  style\n\t *  @note    available as konflux.style / kx.style\n\t */\n\tfunction KonfluxStyle() {\n\t\t/*jshint validthis: true*/\n\t\tvar style = this;\n\n\t\t/**\n\t\t *  Obtain the script property notation for given property\n\t\t *  @name    scriptProperty\n\t\t *  @type    function\n\t\t *  @access  internal\n\t\t *  @param   string property\n\t\t *  @return  string script property\n\t\t *  @note    'background-color' => 'backgroundColor'\n\t\t */\n\t\tfunction scriptProperty(property) {\n\t\t\tvar n = 0;\n\n\t\t\tif (property === 'float') {\n\t\t\t\treturn 'cssFloat';\n\t\t\t}\n\n\t\t\twhile ((n = property.indexOf('-', n)) >= 0) {\n\t\t\t\tproperty = property.substr(0, n) + property.charAt(++n).toUpperCase() + property.substring(n + 1);\n\t\t\t}\n\n\t\t\treturn property;\n\t\t}\n\n\t\t/**\n\t\t *  Obtain the CSS property notation for given property\n\t\t *  @name    cssProperty\n\t\t *  @type    function\n\t\t *  @access  internal\n\t\t *  @param   string property\n\t\t *  @return  string CSS property\n\t\t *  @note    'backgroundColor' => 'background-color'\n\t\t */\n\t\tfunction cssProperty(property) {\n\t\t\tif (property === 'cssFloat') {\n\t\t\t\tproperty = 'float';\n\t\t\t}\n\n\t\t\treturn property.replace(/([A-Z])/g, '-$1').toLowerCase();\n\t\t}\n\n\t\t/**\n\t\t *  Determine whether or not the property is supported and try a vendor prefix, otherwise return false\n\t\t *  @name    hasProperty\n\t\t *  @type    function\n\t\t *  @access  internal\n\t\t *  @param   string  property\n\t\t *  @param   DOMNode target [optional, default undefined - document.body]\n\t\t *  @return  mixed  (one of: string (script)property, or false)\n\t\t */\n\t\tfunction hasProperty(property, target) {\n\t\t\tproperty = scriptProperty(property);\n\t\t\ttarget   = target || document.body;\n\n\t\t\tif (property in target.style) {\n\t\t\t\treturn property;\n\t\t\t}\n\n\t\t\tproperty = konflux.browser.prefix() + konflux.string.ucFirst(property);\n\t\t\tif (property in target.style) {\n\t\t\t\treturn property;\n\t\t\t}\n\n\t\t\treturn false;\n\t\t}\n\n\t\t/**\n\t\t *  Obtain all local stylesheets, where local is determined on a match of the domain\n\t\t *  @name    getLocalStylesheets\n\t\t *  @type    function\n\t\t *  @access  internal\n\t\t *  @return  array stylesheets\n\t\t */\n\t\tfunction getLocalStylesheets() {\n\t\t\tvar all = document.styleSheets,\n\t\t\t\tlist = [],\n\t\t\t\ti;\n\n\t\t\tfor (i = 0; i < all.length; ++i) {\n\t\t\t\tif (konflux.url.isLocal(all[i].href)) {\n\t\t\t\t\tlist.push(all[i]);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn list;\n\t\t}\n\n\t\t/**\n\t\t *  Obtain specific stylesheets\n\t\t *  @name    getStylesheet\n\t\t *  @type    function\n\t\t *  @access  internal\n\t\t *  @param   string name [optional, default 'all' - all stylesheets. Possible values 'first', 'last', 'all' or string filename]\n\t\t *  @param   bool   includeOffset [optional, default false - local stylesheets only]\n\t\t *  @return  array stylesheets\n\t\t */\n\t\tfunction getStylesheet(name, includeOffsite) {\n\t\t\tvar list = includeOffsite ? document.styleSheets : getLocalStylesheets(),\n\t\t\t\tmatch = [],\n\t\t\t\ti;\n\n\t\t\tswitch (name) {\n\t\t\t\t//  get the first stylesheet from the list of selected stylesheets\n\t\t\t\tcase 'first':\n\t\t\t\t\tif (list.length > 0) {\n\t\t\t\t\t\tmatch = [list[0]];\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\t//  get the last stylesheet from the list of selected stylesheets\n\t\t\t\tcase 'last':\n\t\t\t\t\tif (list.length > 0) {\n\t\t\t\t\t\tmatch = [list[list.length - 1]];\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\n\t\t\t\t\t//  if no name was provided, return the entire list of (editable) stylesheets\n\t\t\t\t\tif (name === 'all') {\n\t\t\t\t\t\tmatch = list;\n\t\t\t\t\t}\n\t\t\t\t\telse if (!name) {\n\t\t\t\t\t\tmatch = false;\n\t\t\t\t\t}\n\n\t\t\t\t\t//  search for the stylesheet(s) whose href matches the given name\n\t\t\t\t\telse if (list.length > 0) {\n\t\t\t\t\t\tfor (i = 0; i < list.length; ++i) {\n\t\t\t\t\t\t\tif (list[i].href && list[i].href.substr(-name.length) === name) {\n\t\t\t\t\t\t\t\tmatch.push(list[i]);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse if (list[i].title && list[i].title === name) {\n\t\t\t\t\t\t\t\tmatch.push(list[i]);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\treturn match;\n\t\t}\n\n\t\t/**\n\t\t *  Obtain a stylesheet by its url or title\n\t\t *  @name    findStylesheet\n\t\t *  @type    function\n\t\t *  @access  internal\n\t\t *  @param   string url\n\t\t *  @param   string name\n\t\t *  @return  StyleSheet (bool false if not found)\n\t\t */\n\t\tfunction findStylesheet(url, name) {\n\t\t\tvar match = getStylesheet(url, true);\n\t\t\tif (name && match.length === 0) {\n\t\t\t\tmatch = getStylesheet(name, true);\n\t\t\t}\n\n\t\t\treturn match.length > 0 ? match[0] : false;\n\t\t}\n\n\t\t/**\n\t\t *  Create a new stylesheet\n\t\t *  @name    createStylesheet\n\t\t *  @type    function\n\t\t *  @access  internal\n\t\t *  @param   string url\n\t\t *  @param   bool   before (effectively true for being the first stylesheet, anything else for last)\n\t\t *  @param   string name\n\t\t *  @return  style node\n\t\t */\n\t\tfunction createStylesheet(url, before, name) {\n\t\t\tvar element = findStylesheet(url, name),\n\t\t\t\thead = document.head || document.getElementsByTagName('head')[0];\n\n\t\t\tif (!element) {\n\t\t\t\telement = document.createElement(url ? 'link' : 'style');\n\t\t\t\telement.setAttribute('type', 'text/css');\n\t\t\t\telement.setAttribute('title', name || 'konflux.style.' + konflux.unique());\n\n\t\t\t\tif (/link/i.test(element.nodeName)) {\n\t\t\t\t\telement.setAttribute('rel', 'stylesheet');\n\t\t\t\t\telement.setAttribute('href', url);\n\t\t\t\t}\n\n\t\t\t\tif (before && document.head.firstChild) {\n\t\t\t\t\thead.insertBefore(element, head.firstChild);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\thead.appendChild(element);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn element;\n\t\t}\n\n\t\t/**\n\t\t *  Parse the style declarations' cssText into key/value pairs\n\t\t *  @name    getStyleProperties\n\t\t *  @type    function\n\t\t *  @access  internal\n\t\t *  @param   CSS Rule\n\t\t *  @return  Object key value pairs\n\t\t */\n\t\tfunction getStyleProperties(declaration) {\n\t\t\tvar list = declaration.split(/\\s*;\\s*/),\n\t\t\t\trules = {},\n\t\t\t\ti, part;\n\n\t\t\tfor (i = 0; i < list.length; ++i) {\n\t\t\t\tpart = list[i].split(/\\s*:\\s*/);\n\n\t\t\t\tif (part[0] !== '') {\n\t\t\t\t\trules[scriptProperty(part.shift())] = normalizeValue(part.join(':'));\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn rules;\n\t\t}\n\n\t\t/**\n\t\t *  Normalize given selector string\n\t\t *  @name    normalizeSelector\n\t\t *  @type    function\n\t\t *  @access  internal\n\t\t *  @param   string selector\n\t\t *  @return  string normalized selector\n\t\t */\n\t\tfunction normalizeSelector(selector) {\n\t\t\treturn selector.split(/\\s+/).join(' ').toLowerCase();\n\t\t}\n\n\t\t/**\n\t\t *  Normalize given CSS value\n\t\t *  @name    normalizeValue\n\t\t *  @type    function\n\t\t *  @access  internal\n\t\t *  @param   string value\n\t\t *  @return  string normalized value\n\t\t */\n\t\tfunction normalizeValue(value) {\n\t\t\tvar pattern = {\n\t\t\t\t\t//  minimize whitespace\n\t\t\t\t\t' ': /\\s+/g,\n\n\t\t\t\t\t//  unify quotes\n\t\t\t\t\t'\"': /[\"']/g,\n\n\t\t\t\t\t//  unify whitespace around separators\n\t\t\t\t\t',': /\\s*,\\s*/g,\n\n\t\t\t\t\t//  remove leading 0 from decimals\n\t\t\t\t\t'.': /\\b0+\\./g,\n\n\t\t\t\t\t//  remove units from 0 value\n\t\t\t\t\t0: /0(?:px|em|%|pt)\\b/g\n\t\t\t\t},\n\t\t\t\tp;\n\n\t\t\tfor (p in pattern) {\n\t\t\t\tvalue = value.replace(pattern[p], p);\n\t\t\t}\n\n\t\t\t//  most browsers will recalculate hex color notation to rgb, so we do the same\n\t\t\tpattern = value.match(/#([0-9a-f]+)/);\n\t\t\tif (pattern && pattern.length > 0) {\n\t\t\t\tpattern = pattern[1];\n\t\t\t\tif (pattern.length % 3 !== 0) {\n\t\t\t\t\tpattern = konflux.string.pad(pattern, 6, '0');\n\t\t\t\t}\n\t\t\t\telse if (pattern.length === 3) {\n\t\t\t\t\tpattern = pattern[0] + pattern[0] + pattern[1] + pattern[1] + pattern[2] + pattern[2];\n\t\t\t\t}\n\n\t\t\t\tvalue = 'rgb(' + [\n\t\t\t\t\tparseInt(pattern[0] + pattern[1], 16),\n\t\t\t\t\tparseInt(pattern[2] + pattern[3], 16),\n\t\t\t\t\tparseInt(pattern[4] + pattern[5], 16)\n\t\t\t\t].join(',') + ')';\n\t\t\t}\n\n\t\t\treturn value;\n\t\t}\n\n\t\t/**\n\t\t *  Add one or more css classes to given element\n\t\t *  @name    addClass\n\t\t *  @type    method\n\t\t *  @access  public\n\t\t *  @param   DOMelement element\n\t\t *  @param   string classes (separated by any combination of whitespace and/or comma\n\t\t *  @return  string classes\n\t\t */\n\t\tstyle.addClass = function(element, classes) {\n\t\t\tvar current = konflux.string.trim(element.className).split(/\\s+/);\n\n\t\t\telement.className = current.concat(konflux.array.diff(classes.split(/[,\\s]+/), current)).join(' ');\n\n\t\t\treturn element.className;\n\t\t};\n\n\t\t/**\n\t\t *  Remove one or more css classes from given element\n\t\t *  @name    removeClass\n\t\t *  @type    method\n\t\t *  @access  public\n\t\t *  @param   DOMElement element\n\t\t *  @param   string classes (separated by any combination of whitespace and/or comma\n\t\t *  @return  string classes\n\t\t */\n\t\tstyle.removeClass = function(element, classes) {\n\t\t\tvar delta = konflux.string.trim(element.className).split(/\\s+/),\n\t\t\t\tclassList = konflux.string.trim(classes).split(/[,\\s]+/),\n\t\t\t\ti, p;\n\n\t\t\tfor (i = 0; i < classList.length; ++i) {\n\t\t\t\tp = konflux.array.contains(delta, classList[i]);\n\n\t\t\t\tif (p !== false) {\n\t\t\t\t\tdelta.splice(p, 1);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\telement.className = delta.join(' ');\n\n\t\t\treturn element.className;\n\t\t};\n\n\t\t/**\n\t\t *  Toggle one or more css classes on given element\n\t\t *  @name    toggleClass\n\t\t *  @type    method\n\t\t *  @access  public\n\t\t *  @param   DOMElement element\n\t\t *  @param   string classes (separated by any combination of whitespace and/or comma\n\t\t *  @return  string classes\n\t\t */\n\t\tstyle.toggleClass = function(element, classes) {\n\t\t\tvar current = konflux.string.trim(element.className).split(/\\s+/),\n\t\t\t\tclassList = konflux.string.trim(classes).split(/[,\\s]+/),\n\t\t\t\ti, p;\n\n\t\t\tfor (i = 0; i < classList.length; ++i) {\n\t\t\t\tp = konflux.array.contains(current, classList[i]);\n\t\t\t\tif (p !== false) {\n\t\t\t\t\tcurrent.splice(p, 1);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tcurrent.push(classList[i]);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\telement.className = current.join(' ');\n\n\t\t\treturn element.className;\n\t\t};\n\n\t\t/**\n\t\t *  Apply style rules to target DOMElement\n\t\t *  @name    inline\n\t\t *  @type    method\n\t\t *  @access  public\n\t\t *  @param   DOMElement target\n\t\t *  @param   object style rules\n\t\t *  @return  KonfluxStyle reference\n\t\t */\n\t\tstyle.inline = function(target, rules) {\n\t\t\tvar p, q;\n\n\t\t\tfor (p in rules) {\n\t\t\t\tq = hasProperty(p);\n\n\t\t\t\tif (q) {\n\t\t\t\t\ttarget.style[q] = rules[p];\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn style;\n\t\t};\n\n\t\t/**\n\t\t *  Obtain a CSS selector for given element\n\t\t *  @name    selector\n\t\t *  @type    method\n\t\t *  @access  public\n\t\t *  @param   DOMElement target\n\t\t *  @param   bool       skipNode [optional, default false - include node name]\n\t\t *  @return  string selector\n\t\t */\n\t\tstyle.selector = function(target, skipNode) {\n\t\t\tvar node = target.nodeName.toLowerCase(),\n\t\t\t\tid = target.hasAttribute('id') ? '#' + target.getAttribute('id') : null,\n\t\t\t\tclasses = target.hasAttribute('class') ? '.' + konflux.string.trim(target.getAttribute('class')).split(/\\s+/).join('.') : null,\n\t\t\t\tselect = '';\n\n\t\t\tif (arguments.length === 1 || id || classes) {\n\t\t\t\tselect = (skipNode ? '' : node) + (id || classes || '');\n\t\t\t}\n\n\t\t\treturn konflux.string.trim((!id && target.parentNode && target !== document.body ? style.selector(target.parentNode, true) + ' ' : '') + select);\n\t\t};\n\n\t\t/**\n\t\t *  Obtain a stylesheet by its name or by a mnemonic (first, last, all)\n\t\t *  @name    sheet\n\t\t *  @type    method\n\t\t *  @access  public\n\t\t *  @param   string target [optional, default 'all' - all stylesheets. Possible values 'first', 'last', 'all' or string filename]\n\t\t *  @param   bool   editable [optional, default true - only editable stylesheets]\n\t\t *  @return  array  stylesheets\n\t\t */\n\t\tstyle.sheet = function(target, editable) {\n\t\t\tvar list = getStylesheet(konflux.isType('string', target) ? target : null, editable === false ? true : false),\n\t\t\t\ti;\n\n\t\t\tif (konflux.isType('undefined', target.nodeName)) {\n\t\t\t\tfor (i = 0; i < list.length; ++i) {\n\t\t\t\t\tif (list[i].ownerNode === target) {\n\t\t\t\t\t\treturn [list[i]];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn list;\n\t\t};\n\n\t\t/**\n\t\t *  Create a new stylesheet, either as first or last\n\t\t *  @name    create\n\t\t *  @type    method\n\t\t *  @access  public\n\t\t *  @param   bool  before all other stylesheets\n\t\t *  @return  styleSheet\n\t\t */\n\t\tstyle.create = function(name, before) {\n\t\t\tvar element = createStylesheet(false, before, name);\n\n\t\t\treturn element.sheet || false;\n\t\t};\n\n\t\t/**\n\t\t *  Load an external stylesheet, either as first or last\n\t\t *  @name    load\n\t\t *  @type    method\n\t\t *  @access  public\n\t\t *  @param   string   url the url of the stylesheet to load\n\t\t *  @param   function callback\n\t\t *  @param   bool     before all other style sheets\n\t\t *  @return  style node (<link...> element)\n\t\t */\n\t\tstyle.load = function(url, callback, before) {\n\t\t\tvar style = createStylesheet(url, before);\n\n\t\t\t//  if style is a StyleSheet object, it has the ownerNode property containing the actual DOMElement in which it resides\n\t\t\tif (konflux.isType('undefined', style.ownerNode)) {\n\t\t\t\tstyle = style.ownerNode;\n\n\t\t\t\t//  it is safe to assume here that the stylesheet was loaded, hence we need to apply the callback (with a slight delay, so the order of returning and execution of the callback is the same for both load scenario's)\n\t\t\t\tif (callback) {\n\t\t\t\t\tsetTimeout(function() {\n\t\t\t\t\t\tcallback.apply(style, [style]);\n\t\t\t\t\t}, 1);\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if (callback) {\n\t\t\t\tkonflux.event.add(style, 'load', function(e) {\n\t\t\t\t\tcallback.apply(style, [e]);\n\t\t\t\t});\n\t\t\t}\n\n\t\t\treturn style;\n\t\t};\n\n\t\t/**\n\t\t *  Determine whether or not the given style (node) is editable\n\t\t *  @name    isEditable\n\t\t *  @type    method\n\t\t *  @access  public\n\t\t *  @param   Stylesheet object or DOMelement style/link\n\t\t *  @return  bool  editable\n\t\t */\n\t\tstyle.isEditable = function(stylesheet) {\n\t\t\tvar list = getLocalStylesheets(),\n\t\t\t\tnode = konflux.isType('undefined', stylesheet.ownerNode) ? stylesheet.ownerNode : stylesheet,\n\t\t\t\ti;\n\n\t\t\tfor (i = 0; i < list.length; ++i) {\n\t\t\t\tif (list[i].ownerNode === node) {\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn false;\n\t\t};\n\n\t\t/**\n\t\t *  Create and add a new style rule\n\t\t *  @name    add\n\t\t *  @type    method\n\t\t *  @access  public\n\t\t *  @param   string selector\n\t\t *  @param   mixed  rules (one of; object {property: value} or string 'property: value')\n\t\t *  @param   mixed  sheet (either a sheet object or named reference, like 'first', 'last' or file name)\n\t\t *  @param   bool   skipNode [optional, default false - include node name]\n\t\t *  @return  int    index at which the rule was added\n\t\t */\n\t\tstyle.add = function(selector, rules, sheet, skipNode) {\n\t\t\tvar rule = '',\n\t\t\t\tfind, p, pr;\n\n\t\t\t//  in case the selector is not a string but a DOMElement, we go out and create a selector from it\n\t\t\tif (konflux.isType('object', selector) && 'nodeType' in selector) {\n\t\t\t\tselector = style.selector(selector, skipNode) || style.selector(selector);\n\t\t\t}\n\n\t\t\t//  make the rules into an object\n\t\t\tif (konflux.isType('string', rules)) {\n\t\t\t\trules = getStyleProperties(rules);\n\t\t\t}\n\n\t\t\t//  if rules isn't an object, we exit right here\n\t\t\tif (!konflux.isType('object', rules)) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\t//  if no sheet was provided, or a string reference to a sheet was provided, resolve it\n\t\t\tif (!sheet || konflux.isType('string', sheet)) {\n\t\t\t\tsheet = getStylesheet(sheet || 'last');\n\t\t\t}\n\n\t\t\t//  in case we now have a list of stylesheets, we either want one (if there's just one) or we add the style to all\n\t\t\tif (sheet instanceof Array) {\n\t\t\t\tif (sheet.length === 1) {\n\t\t\t\t\tsheet = sheet[0];\n\t\t\t\t}\n\t\t\t\telse if (sheet.length <= 0) {\n\t\t\t\t\tsheet = createStylesheet().sheet;\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\trule = true;\n\t\t\t\t\tfor (p = 0; p < sheet.length; ++p) {\n\t\t\t\t\t\trule = rule && style.add(selector, rules, sheet[p]);\n\t\t\t\t\t}\n\n\t\t\t\t\treturn rule;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t//  populate the find buffer, so we can determine which style rules we actually need\n\t\t\tfind = style.find(selector, sheet);\n\t\t\tfor (p in rules) {\n\t\t\t\tif (!(p in find) || normalizeValue(find[p]) !== normalizeValue(rules[p])) {\n\t\t\t\t\tpr = hasProperty(p);\n\t\t\t\t\tif (pr) {\n\t\t\t\t\t\trule += (rule !== '' ? ';' : '') + cssProperty(pr) + ':' + rules[p];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t//  finally, add the rules to the stylesheet\n\t\t\tif (sheet.addRule) {\n\t\t\t\treturn sheet.addRule(selector, rule);\n\t\t\t}\n\t\t\telse if (sheet.insertRule) {\n\t\t\t\treturn sheet.insertRule(selector + '{' + rule + '}', sheet.cssRules.length);\n\t\t\t}\n\n\t\t\treturn false;\n\t\t};\n\n\t\t/**\n\t\t *  Find all style rules for given selector (in optionally given sheet)\n\t\t *  @name    find\n\t\t *  @type    method\n\t\t *  @access  public\n\t\t *  @param   string selector\n\t\t *  @param   mixed  sheet [optional, either a sheet object or named reference, like 'first', 'last' or file name]\n\t\t *  @return  object style rules\n\t\t */\n\t\tstyle.find = function(selector, sheet) {\n\t\t\tvar match = {},\n\t\t\t\trules, i, j;\n\n\t\t\tif (selector) {\n\t\t\t\tselector = normalizeSelector(selector);\n\t\t\t}\n\n\t\t\tif (!sheet) {\n\t\t\t\tsheet = getStylesheet();\n\t\t\t}\n\t\t\telse if (!(sheet instanceof Array)) {\n\t\t\t\tsheet = [sheet];\n\t\t\t}\n\n\t\t\tfor (i = 0; i < sheet.length; ++i) {\n\t\t\t\trules = konflux.type(sheet[i].cssRules) ? sheet[i].cssRules : sheet[i].rules;\n\t\t\t\tif (rules && rules.length) {\n\t\t\t\t\tfor (j = 0; j < rules.length; ++j) {\n\t\t\t\t\t\tif ('selectorText' in rules[j] && (!selector || normalizeSelector(rules[j].selectorText) === selector)) {\n\t\t\t\t\t\t\tmatch = konflux.combine(match, getStyleProperties(rules[j].style.cssText));\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn match;\n\t\t};\n\n\t\t/**\n\t\t *  Get the given style property from element\n\t\t *  @name    get\n\t\t *  @type    method\n\t\t *  @access  public\n\t\t *  @param   DOMElement element\n\t\t *  @param   string     property\n\t\t *  @param   string     pseudo tag [optional, default undefined - no pseudo tag]\n\t\t *  @return  string     value\n\t\t */\n\t\tstyle.get = function(element, property, pseudo) {\n\t\t\tvar value;\n\n\t\t\tproperty = hasProperty(property);\n\t\t\tif (property) {\n\t\t\t\tif (window.getComputedStyle) {\n\t\t\t\t\tvalue = document.defaultView.getComputedStyle(element, pseudo || null).getPropertyValue(cssProperty(property));\n\t\t\t\t}\n\t\t\t\telse if (element.currentStyle) {\n\t\t\t\t\tvalue = element.currentStyle(scriptProperty(property));\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn value;\n\t\t};\n\n\t\t/**\n\t\t *  Determine whether or not the property is supported and try a vendor prefix, otherwise return false\n\t\t *  @name    property\n\t\t *  @type    method\n\t\t *  @access  public\n\t\t *  @param   string  property\n\t\t *  @param   DOMNode target [optional, default undefined - document.body]\n\t\t *  @return  mixed  (one of: string (script)property, or false)\n\t\t */\n\t\tstyle.property = hasProperty;\n\n\t\t/**\n\t\t *  Calculate the specificity of a selector\n\t\t *  @name    specificity\n\t\t *  @type    method\n\t\t *  @access  public\n\t\t *  @param   string selector\n\t\t *  @return  string specificity ('0.0.0.0')\n\t\t */\n\t\tstyle.specificity = function(selector) {\n\t\t\tvar result = [0, 0, 0, 0],\n\t\t\t\tmatch = konflux.string.trim(selector.replace(/([#\\.\\:\\[]+)/g, ' $1')).split(/[^a-z0-9\\.\\[\\]'\":\\*\\.#=_-]+/),\n\t\t\t\ti;\n\n\t\t\tfor (i = 0; i < match.length; ++i) {\n\t\t\t\t++result[/^#/.test(match[i]) ? 1 : (/^(?:\\.|\\[|:[^:])/.test(match[i]) ? 2 : 3)];\n\t\t\t}\n\n\t\t\treturn result.join('.');\n\t\t};\n\t}\n\n\tkonflux.register('style', new KonfluxStyle());\n\n\t//END INCLUDE: core/style [2.16ms, 17.58KB]\n\t//BEGIN INCLUDE: core/storage\n\t/**\n\t *  Storage object, a simple wrapper for localStorage\n\t *  @module  storage\n\t *  @note    available as konflux.storage / kx.storage\n\t */\n\tfunction KonfluxStorage() {\n\t\t/*jshint validthis: true*/\n\t\tvar ls = this,\n\t\t\tmaxSize = 2048,\n\t\t\tstorage = konflux.isType('undefined', window.localStorage) ? window.localStorage : false,\n\t\t\tfragmentPattern = /^\\[fragment:([0-9]+),([0-9]+),([a-z0-9_]+)\\]$/;\n\n\t\t/**\n\t\t *  Combine stored fragments together into the original data string\n\t\t *  @name    combineFragments\n\t\t *  @type    function\n\t\t *  @access  internal\n\t\t *  @param   string data index\n\t\t *  @return  string data combined\n\t\t */\n\t\tfunction combineFragments(data) {\n\t\t\tvar match = data ? data.match(fragmentPattern) : false,\n\t\t\t\tpart, fragment, length, variable, i;\n\n\t\t\tif (match) {\n\t\t\t\tfragment = parseInt(match[1], 10);\n\t\t\t\tlength   = parseInt(match[2], 10);\n\t\t\t\tvariable = match[3];\n\t\t\t\tdata     = '';\n\n\t\t\t\tfor (i = 0; i < fragment; ++i) {\n\t\t\t\t\tpart = storage.getItem(variable + i);\n\t\t\t\t\tif (part !== null) {\n\t\t\t\t\t\tdata += part;\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (!data || data.length !== length) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn data;\n\t\t}\n\n\t\t/**\n\t\t *  Split a large data string into several smaller fragments\n\t\t *  @name    createFragments\n\t\t *  @type    function\n\t\t *  @access  internal\n\t\t *  @param   string name\n\t\t *  @param   string data\n\t\t *  @return  bool   success\n\t\t */\n\t\tfunction createFragments(name, data) {\n\t\t\tvar variable = '__' + name,\n\t\t\t\tfragment = Math.ceil(data.length / maxSize),\n\t\t\t\ti;\n\n\t\t\tfor (i = 0; i < fragment; ++i) {\n\t\t\t\tstorage.setItem(variable + i, data.substring(i * maxSize, Math.min((i + 1) * maxSize, data.length)));\n\t\t\t}\n\n\t\t\t//  write the index\n\t\t\tstorage.setItem(name, '[fragment:' + fragment + ',' + data.length + ',' + variable + ']');\n\t\t}\n\n\t\t/**\n\t\t *  Remove all fragmented keys\n\t\t *  @name    dropFragments\n\t\t *  @type    function\n\t\t *  @access  internal\n\t\t *  @param   array  match\n\t\t *  @return  void\n\t\t */\n\t\tfunction dropFragments(match) {\n\t\t\tvar fragment = parseInt(match[1], 10),\n\t\t\t\tvariable = match[3],\n\t\t\t\ti;\n\n\t\t\tfor (i = 0; i < fragment; ++i) {\n\t\t\t\tremove(variable + i);\n\t\t\t}\n\t\t}\n\n\t\t/**\n\t\t *  Obtain all data from localStorage\n\t\t *  @name    getAll\n\t\t *  @type    function\n\t\t *  @access  internal\n\t\t *  @return  mixed  data\n\t\t */\n\t\tfunction getAll() {\n\t\t\tvar result = null,\n\t\t\t\ti, key;\n\n\t\t\tif (storage) {\n\t\t\t\tresult = {};\n\t\t\t\tfor (i = 0; i < storage.length; ++i) {\n\t\t\t\t\tkey = storage.key(i);\n\t\t\t\t\tresult[key] = getItem(key);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn result;\n\t\t}\n\n\t\t/**\n\t\t *  Obtain the data for given name\n\t\t *  @name    getItem\n\t\t *  @type    function\n\t\t *  @access  internal\n\t\t *  @param   string name\n\t\t *  @return  mixed  data\n\t\t */\n\t\tfunction getItem(name) {\n\t\t\tvar data = storage ? storage.getItem(name) : false;\n\n\t\t\tif (data && data.match(fragmentPattern)) {\n\t\t\t\tdata = combineFragments(data);\n\t\t\t}\n\n\t\t\tif (data && data.match(/^[a-z0-9]+:.*$/i)) {\n\t\t\t\tdata = /([a-z0-9]+):(.*)/i.exec(data);\n\t\t\t\tif (data.length > 2 && data[1] === konflux.string.checksum(data[2])) {\n\t\t\t\t\treturn JSON.parse(data[2]);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn data ? data : false;\n\t\t}\n\n\t\t/**\n\t\t *  Set the data for given name\n\t\t *  @name    setItem\n\t\t *  @type    function\n\t\t *  @access  internal\n\t\t *  @param   string name\n\t\t *  @param   mixed  data\n\t\t *  @return  string data\n\t\t */\n\t\tfunction setItem(name, data) {\n\t\t\tdata = JSON.stringify(data);\n\t\t\tdata = konflux.string.checksum(data) + ':' + data;\n\n\t\t\tif (storage) {\n\t\t\t\treturn data.length > maxSize ? createFragments(name, data) : storage.setItem(name, data);\n\t\t\t}\n\n\t\t\treturn false;\n\t\t}\n\n\t\t/**\n\t\t *  Remove the data for given name\n\t\t *  @name    remove\n\t\t *  @type    function\n\t\t *  @access  internal\n\t\t *  @param   string name\n\t\t *  @return  bool   success\n\t\t */\n\t\tfunction remove(name) {\n\t\t\tvar data, match;\n\n\t\t\tif (storage) {\n\t\t\t\tdata = storage.getItem(name);\n\t\t\t\tif (data && (match = data.match(fragmentPattern))) {\n\t\t\t\t\tdropFragments(match);\n\t\t\t\t}\n\n\t\t\t\treturn storage.removeItem(name);\n\t\t\t}\n\n\t\t\treturn false;\n\t\t}\n\n\t\t/**\n\t\t *  Get the data for given name\n\t\t *  @name    get\n\t\t *  @type    method\n\t\t *  @access  public\n\t\t *  @param   string name [optional, default null - get all stored entries]\n\t\t *  @return  mixed  data\n\t\t */\n\t\tls.get = function(name) {\n\t\t\treturn name ? getItem(name) : getAll();\n\t\t};\n\n\t\t/**\n\t\t *  Set the data for given name\n\t\t *  @name    set\n\t\t *  @type    method\n\t\t *  @access  public\n\t\t *  @param   string name\n\t\t *  @param   mixed  data\n\t\t *  @return  void\n\t\t */\n\t\tls.set = setItem;\n\n\t\t/**\n\t\t *  Remove the data for given name\n\t\t *  @name    remove\n\t\t *  @type    method\n\t\t *  @access  public\n\t\t *  @param   string name\n\t\t *  @return  bool   success\n\t\t */\n\t\tls.remove = remove;\n\n\t\t/**\n\t\t *  Get the amount of stored keys\n\t\t *  @name    length\n\t\t *  @type    method\n\t\t *  @access  public\n\t\t *  @return  number stored keys\n\t\t */\n\t\tls.length = function() {\n\t\t\treturn storage ? storage.length : false;\n\t\t};\n\n\t\t/**\n\t\t *  Obtain all the keys\n\t\t *  @name    keys\n\t\t *  @type    method\n\t\t *  @access  public\n\t\t *  @return  Array  keys\n\t\t */\n\t\tls.keys = function() {\n\t\t\tvar key = getAll(),\n\t\t\t\tlist = [],\n\t\t\t\tp;\n\n\t\t\tfor (p in key) {\n\t\t\t\tlist.push(p);\n\t\t\t}\n\n\t\t\treturn list;\n\t\t};\n\n\t\t/**\n\t\t *  Flush all stored items\n\t\t *  @name    flush\n\t\t *  @type    method\n\t\t *  @access  public\n\t\t *  @return  void\n\t\t */\n\t\tls.flush = function() {\n\t\t\tvar list = ls.keys(),\n\t\t\t\ti;\n\t\t\tfor (i = 0; i < list.length; ++i) {\n\t\t\t\tremove(list[i]);\n\t\t\t}\n\t\t};\n\n\t\t/**\n\t\t *  Obtain the (approximate) byte size of the entire storage\n\t\t *  @name    size\n\t\t *  @type    method\n\t\t *  @access  public\n\t\t *  @return  int size\n\t\t */\n\t\tls.size = function() {\n\t\t\treturn decodeURI(encodeURIComponent(JSON.stringify(localStorage))).length;\n\t\t};\n\t}\n\n\tkonflux.register('storage', new KonfluxStorage());\n\n\t//END INCLUDE: core/storage [778.53µs, 5.42KB]\n\t//BEGIN INCLUDE: core/observer\n\t/**\n\t *  Observer object, handles subscriptions to messages\n\t *  @module  observer\n\t *  @note    available as konflux.observer / kx.observer\n\t */\n\tfunction KonfluxObserver() {\n\t\t/*jshint validthis: true*/\n\t\tvar observer = this,\n\t\t\tsubscription = {},\n\t\t\tactive = {};\n\n\t\t/*global KonfluxObservation*/\n\n\t\t//BEGIN INCLUDE: observer/observation\n\t\t/**\n\t\t *  Observation object, instances of this are be provided to all observer notification subscribers\n\t\t *  @name    KonfluxObservation\n\t\t *  @type    module\n\t\t *  @access  internal\n\t\t *  @param   string type\n\t\t *  @param   function handle\n\t\t *  @param   string reference\n\t\t *  @return  KonfluxObservation object\n\t\t */\n\t\tfunction KonfluxObservation(type, handle, reference) {\n\t\t\t'use strict';\n\n\t\t\t/*global konflux, disable, active*/\n\n\t\t\t/*jshint validthis: true*/\n\t\t\tvar observation = this;\n\n\t\t\tobservation.type      = type;\n\t\t\tobservation.reference = reference;\n\t\t\tobservation.timeStamp = konflux.time();\n\t\t\tobservation.timeDelta = konflux.elapsed();\n\n\t\t\t/**\n\t\t\t *  Unsubscribe from the current observer stack\n\t\t\t *  @name    unsubscribe\n\t\t\t *  @type    method\n\t\t\t *  @access  public\n\t\t\t *  @return  void\n\t\t\t */\n\t\t\tobservation.unsubscribe = function() {\n\t\t\t\treturn disable(type, handle);\n\t\t\t};\n\t\t\t/**\n\t\t\t *  Stop the execution of this Observation\n\t\t\t *  @name    stop\n\t\t\t *  @type    method\n\t\t\t *  @access  public\n\t\t\t *  @return  void\n\t\t\t */\n\t\t\tobservation.stop = function() {\n\t\t\t\tactive[reference] = false;\n\t\t\t};\n\t\t}\n\n\t\t//END INCLUDE: observer/observation [1.06ms, 1.02KB]\n\t\t/**\n\t\t *  Create the subscription stack if it does not exist\n\t\t *  @name    ensureSubscriptionStack\n\t\t *  @type    function\n\t\t *  @access  internal\n\t\t *  @param   string stack name\n\t\t *  @return  void\n\t\t */\n\t\tfunction ensureSubscriptionStack(stack) {\n\t\t\tif (typeof subscription[stack] === 'undefined') {\n\t\t\t\tsubscription[stack] = [];\n\t\t\t}\n\t\t}\n\n\t\t/**\n\t\t *  Add handler to specified stack\n\t\t *  @name    add\n\t\t *  @type    function\n\t\t *  @access  internal\n\t\t *  @param   string stack name\n\t\t *  @param   function handler\n\t\t *  @return  int total number of subscriptions in this stack\n\t\t */\n\t\tfunction add(stack, handle) {\n\t\t\tensureSubscriptionStack(stack);\n\n\t\t\treturn subscription[stack].push(handle);\n\t\t}\n\n\t\t/**\n\t\t *  Disable a handler for specified stack\n\t\t *  @name    disable\n\t\t *  @type    function\n\t\t *  @access  internal\n\t\t *  @param   string stack name\n\t\t *  @param   function handler\n\t\t *  @return  void\n\t\t *  @note    this method is used from the Observation object, which would influence the number of\n\t\t *           subscriptions if the subscription itself was removed immediately\n\t\t */\n\t\tfunction disable(stack, handle) {\n\t\t\tvar i;\n\n\t\t\tfor (i = 0; i < subscription[stack].length; ++i) {\n\t\t\t\tif (subscription[stack][i] === handle) {\n\t\t\t\t\tsubscription[stack][i] = false;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t/**\n\t\t *  Remove specified handler (and all disabled handlers) from specified stack\n\t\t *  @name    remove\n\t\t *  @type    function\n\t\t *  @access  internal\n\t\t *  @param   string stack name\n\t\t *  @param   function handler [optional, default null - remove the entire stack]\n\t\t *  @return  array removed handlers\n\t\t */\n\t\tfunction remove(stack, handle) {\n\t\t\tvar out = [],\n\t\t\t\tkeep = [],\n\t\t\t\ti;\n\n\t\t\tensureSubscriptionStack(stack);\n\n\t\t\tfor (i = 0; i < subscription[stack].length; ++i) {\n\t\t\t\t(!subscription[stack][i] || subscription[stack][i] === handle ? out : keep).push(subscription[stack][i]);\n\t\t\t}\n\n\t\t\tsubscription[stack] = keep;\n\n\t\t\treturn out;\n\t\t}\n\n\t\t/**\n\t\t *  Flush specified stack\n\t\t *  @name    flush\n\t\t *  @type    function\n\t\t *  @access  internal\n\t\t *  @param   string stack name\n\t\t *  @return  array removed handlers (false if the stack did not exist);\n\t\t */\n\t\tfunction flush(stack) {\n\t\t\tvar out = false;\n\n\t\t\tif (konflux.isType('undefined', subscription[stack])) {\n\t\t\t\tout = subscription[stack];\n\t\t\t\tdelete subscription[stack];\n\t\t\t}\n\n\t\t\treturn out;\n\t\t}\n\n\t\t/**\n\t\t *  Trigger the handlers in specified stack\n\t\t *  @name    trigger\n\t\t *  @type    function\n\t\t *  @access  internal\n\t\t *  @param   string stack name\n\t\t *  @param   mixed variable1\n\t\t *  @param   mixed ...\n\t\t *  @param   mixed variableN\n\t\t *  @return  void\n\t\t */\n\t\tfunction trigger(stack) {\n\t\t\tvar arg = konflux.array.cast(arguments),\n\t\t\t\tref = konflux.unique(),\n\t\t\t\tpart = stack.split('.'),\n\t\t\t\twildcard = false,\n\t\t\t\tname, i;\n\n\t\t\twhile (part.length >= 0) {\n\t\t\t\tactive[ref] = true;\n\t\t\t\tname = part.join('.') + (wildcard ? (part.length ? '.' : '') + '*' : '');\n\t\t\t\twildcard = true;\n\n\t\t\t\tif (typeof subscription[name] !== 'undefined') {\n\t\t\t\t\tfor (i = 0; i < subscription[name].length; ++i) {\n\t\t\t\t\t\tif (!active[ref]) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (subscription[name][i]) {\n\t\t\t\t\t\t\targ[0] = new KonfluxObservation(stack, subscription[name][i], ref);\n\t\t\t\t\t\t\tsubscription[name][i].apply(subscription[name][i], arg);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (!part.pop()) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tdelete active[ref];\n\t\t}\n\n\t\t/**\n\t\t *  Subscribe a handler to an observer stack\n\t\t *  @name    subscribe\n\t\t *  @type    method\n\t\t *  @access  public\n\t\t *  @param   string stack name\n\t\t *  @param   function handle\n\t\t *  @param   function callback [optional, default undefined]\n\t\t *  @return  KonfluxObserver reference\n\t\t */\n\t\tobserver.subscribe = function(stack, handle, callback) {\n\t\t\tvar list = stack.split(/[\\s,]+/),\n\t\t\t\tresult = true,\n\t\t\t\ti;\n\n\t\t\tfor (i = 0; i < list.length; ++i) {\n\t\t\t\tresult = (add(list[i], handle) ? true : false) && result;\n\t\t\t}\n\n\t\t\tif (callback) {\n\t\t\t\tcallback.apply(observer, [result]);\n\t\t\t}\n\n\t\t\treturn observer;\n\t\t};\n\n\t\t/**\n\t\t *  Unsubscribe a handler from an observer stack\n\t\t *  @name    unsubscribe\n\t\t *  @type    method\n\t\t *  @access  public\n\t\t *  @param   string stack name\n\t\t *  @param   function handle\n\t\t *  @param   function callback [optional, default undefined]\n\t\t *  @return  KonfluxObserver reference\n\t\t */\n\t\tobserver.unsubscribe = function(stack, handle, callback) {\n\t\t\tvar list = stack.split(/[\\s,]+/),\n\t\t\t\tresult = [],\n\t\t\t\ti;\n\n\t\t\tfor (i = 0; i < list.length; ++i) {\n\t\t\t\tresult = result.concat(handle ? remove(list[i], handle) : flush(list[i]));\n\t\t\t}\n\n\t\t\tif (callback) {\n\t\t\t\tcallback.apply(observer, [result]);\n\t\t\t}\n\n\t\t\treturn observer;\n\t\t};\n\n\t\t/**\n\t\t *  Notify all subscribers to a stack\n\t\t *  @name    notify\n\t\t *  @type    method\n\t\t *  @access  public\n\t\t *  @param   string stack name\n\t\t *  @param   mixed  variable1\n\t\t *  @param   mixed  ...\n\t\t *  @param   mixed  variableN\n\t\t *  @return  void\n\t\t */\n\t\tobserver.notify = function() {\n\t\t\tvar arg = konflux.array.cast(arguments),\n\t\t\t\tlist = arg.shift().split(/[\\s,]+/),\n\t\t\t\ti;\n\n\t\t\tfor (i = 0; i < list.length; ++i) {\n\t\t\t\ttrigger.apply(observer, [list[i]].concat(arg));\n\t\t\t}\n\t\t};\n\t}\n\n\tkonflux.register('observer', new KonfluxObserver());\n\n\t//END INCLUDE: core/observer [3.40ms, 6.31KB]\n\t//BEGIN INCLUDE: core/number\n\t/**\n\t *  Number utils\n\t *  @module  number\n\t *  @note    available as konflux.number / kx.number\n\t */\n\tfunction KonfluxNumber() {\n\t\t/*jshint validthis: true*/\n\t\tvar number = this;\n\n\t\t/**\n\t\t *  Test wheter given input is an even number\n\t\t *  @name    even\n\t\t *  @type    method\n\t\t *  @access  public\n\t\t *  @param   number input\n\t\t *  @return  bool even\n\t\t */\n\t\tnumber.even = function(input) {\n\t\t\tinput = +input;\n\n\t\t\treturn (input | 0) === input && input % 2 === 0;\n\t\t};\n\n\t\t/**\n\t\t *  Test wheter given input is an odd number\n\t\t *  @name    odd\n\t\t *  @type    method\n\t\t *  @access  public\n\t\t *  @param   number input\n\t\t *  @return  bool odd\n\t\t */\n\t\tnumber.odd = function(input) {\n\t\t\tinput = +input;\n\n\t\t\treturn (input | 0) === input && !number.even(input);\n\t\t};\n\n\t\t/**\n\t\t *  Test wheter given input lies between the low and high values (including the low and high values)\n\t\t *  @name    between\n\t\t *  @type    method\n\t\t *  @access  public\n\t\t *  @param   number input\n\t\t *  @param   number a\n\t\t *  @param   number b\n\t\t *  @return  bool between\n\t\t */\n\t\tnumber.between = function(input, a, b) {\n\t\t\tinput = +input;\n\t\t\ta     = +a;\n\t\t\tb     = +b;\n\n\t\t\treturn input >= Math.min(a, b) && input <= Math.max(a, b);\n\t\t};\n\n\t\t/**\n\t\t *  Format a number with a given set of decimal length, decimals separator and/or thousands separator\n\t\t *  @name    format\n\t\t *  @type    method\n\t\t *  @access  public\n\t\t *  @param   number input\n\t\t *  @param   number decimals [optional, default 0 - no precision]\n\t\t *  @param   string decimals separator [optional, default '.']\n\t\t *  @param   string thousands separator [optional, default ',']\n\t\t *  @return  string formatted number\n\t\t *  @note    this method is compatible with PHP's number_format function, it either accepts 2 or 4 arguments\n\t\t */\n\t\tnumber.format = function(input, precision, point, separator) {\n\t\t\tvar multiplier = precision ? Math.pow(10, precision) : 0;\n\n\t\t\t//  check whether default values need to be assigned\n\t\t\tpoint     = !konflux.isType('undefined', point) ? point : '.';\n\t\t\tseparator = !konflux.isType('undefined', separator) || arguments.length < 3 ? separator : ',';\n\n\t\t\t//  format the number\n\t\t\tinput = +(('' + input).replace(/[,\\.]+/, '.'));\n\n\t\t\t//  round the last desired decimal\n\t\t\tinput = multiplier > 0 ? Math.round(input * multiplier) / multiplier : input;\n\n\t\t\t//  split input into int value and decimal value\n\t\t\tinput = ('' + (!isFinite(input) ? 0 : +input)).split('.');\n\n\t\t\t//  apply thousands separator, if applicable (number length exceeds 3 and we have a non-empty separator)\n\t\t\tif (input[0].length > 3 && separator && separator !== '') {\n\t\t\t\tinput[0] = konflux.string.chunk(input[0], 3, konflux.string.CHUNK_END).join(separator);\n\t\t\t}\n\n\t\t\treturn input[0] + (precision > 0 ? point + konflux.string.pad(input[1] || '', precision, '0', konflux.string.PAD_RIGHT) : '');\n\t\t};\n\t}\n\n\tkonflux.register('number', new KonfluxNumber());\n\n\t//END INCLUDE: core/number [822.68µs, 2.74KB]\n\t//BEGIN INCLUDE: core/ajax\n\t/**\n\t *  Handle AJAX requests\n\t *  @module  ajax\n\t *  @note    available as konflux.ajax / kx.ajax\n\t */\n\tfunction KonfluxAjax() {\n\t\t/*jshint validthis: true*/\n\t\tvar ajax = this,\n\t\t\tstat = {},\n\t\t\theader = false;\n\n\t\t/*global KonfluxFormData*/\n\n\t\t//BEGIN INCLUDE: ajax/formdata\n\t\t/**\n\t\t *  FormData stub, in case a browser doesn't feature the FormData object\n\t\t *  @name    KonfluxFormData\n\t\t *  @type    module\n\t\t *  @access  internal\n\t\t *  @return  KonfluxFormData object\n\t\t */\n\t\tfunction KonfluxFormData() {\n\t\t\t'use strict';\n\n\t\t\t/*global  konflux*/\n\n\t\t\t/*jshint validthis: true*/\n\t\t\tvar formdata = this,\n\t\t\t\tdata = {};\n\n\t\t\t/**\n\t\t\t *  Append a key/value pair to the KonfluxFormData instance\n\t\t\t *  @name    append\n\t\t\t *  @type    method\n\t\t\t *  @access  public\n\t\t\t *  @param   string key\n\t\t\t *  @param   mixed  value (can be anything but an object)\n\t\t\t *  @return  KonfluxFormData reference\n\t\t\t */\n\t\t\tformdata.append = function(key, value) {\n\t\t\t\tif (konflux.isType('object', value)) {\n\t\t\t\t\tdata[key] = value;\n\t\t\t\t}\n\n\t\t\t\treturn formdata;\n\t\t\t};\n\n\t\t\t/**\n\t\t\t *  Serialize the KonfluxFormData instance into a string\n\t\t\t *  @name    serialize\n\t\t\t *  @type    method\n\t\t\t *  @access  public\n\t\t\t *  @return  string  urlencoded data\n\t\t\t */\n\t\t\tformdata.serialize = function() {\n\t\t\t\tvar r = [],\n\t\t\t\t\tp;\n\n\t\t\t\tfor (p in data) {\n\t\t\t\t\tr.push(p + '=' + encodeURIComponent(data[p]));\n\t\t\t\t}\n\n\t\t\t\treturn r.join('&');\n\t\t\t};\n\n\t\t\t/**\n\t\t\t *  Convenience method to make KonfluxFormData serialization work if used as string\n\t\t\t *  @name    toString\n\t\t\t *  @type    method\n\t\t\t *  @access  public\n\t\t\t *  @return  string urlencodes data\n\t\t\t *  @note    This method is autmatically called when a KonfluxFormData instance is used as string (e.g. KonfluxFormData + '')\n\t\t\t */\n\t\t\tKonfluxFormData.toString = function() {\n\t\t\t\treturn formdata.serialize();\n\t\t\t};\n\t\t}\n\n\t\t//END INCLUDE: ajax/formdata [554.03µs, 1.41KB]\n\t\t/**\n\t\t *  Obtain the default headers\n\t\t *  @name    getHeader\n\t\t *  @type    function\n\t\t *  @access  internal\n\t\t *  @param   string url\n\t\t *  @return  object headers\n\t\t */\n\t\tfunction getHeader(url) {\n\t\t\tif (!header) {\n\t\t\t\theader = {\n\t\t\t\t\t'X-Konflux': 'konflux/' + konflux.string.ascii(konflux.version())\n\t\t\t\t};\n\t\t\t}\n\n\t\t\t// Since browsers \"preflight\" requests for cross-site HTTP requests with\n\t\t\t// custom headers we should not try to send them, or request will fail\n\t\t\t// silently\n\t\t\t//\n\t\t\t// For more information, please refer to:\n\t\t\t// https://developer.mozilla.org/en-US/docs/Web/HTTP/Access_control_CORS#Preflighted_requests\n\n\t\t\treturn konflux.url.isLocal(url) ? header : {};\n\t\t}\n\n\t\t/**\n\t\t *  Obtain a new XHR object\n\t\t *  @name    getXMLHTTPRequest\n\t\t *  @type    function\n\t\t *  @access  internal\n\t\t *  @return  object XMLHttpRequest\n\t\t */\n\t\tfunction getXMLHTTPRequest() {\n\t\t\tvar xhr     = new XMLHttpRequest();\n\t\t\txhr.__kxref = konflux.unique();\n\n\t\t\treturn xhr;\n\t\t}\n\n\t\t/**\n\t\t *  Request a resource using XHR\n\t\t *  @name    request\n\t\t *  @type    function\n\t\t *  @access  internal\n\t\t *  @param   object config\n\t\t *  @return  object XMLHttpRequest\n\t\t */\n\t\tfunction request(config) {\n\t\t\tvar url     = 'url' in config ? config.url : (konflux.url ? konflux.url.path : null),\n\t\t\t\ttype    = 'type' in config ? config.type.toUpperCase() : 'GET',\n\t\t\t\tdata    = 'data' in config ? prepareData(config.data) : '',\n\t\t\t\tasync   = 'async' in config ? config.async : true,\n\t\t\t\theaders = 'header' in config ? combine(config.header, getHeader(url)) : getHeader(url),\n\t\t\t\txhr     = getXMLHTTPRequest(),\n\t\t\t\tp;\n\n\t\t\tif (!/^(POST|PUT)$/.test(type)) {\n\t\t\t\turl += 'data' in config && config.data !== '' ? '?' + (typeof config.data === 'string' ? config.data : data) : '';\n\t\t\t\tdata = null;\n\t\t\t}\n\n\t\t\txhr.onload = xhrComplete(xhr, config, type);\n\n\t\t\tif ('progress' in config && konflux.isType('function', config.progress)) {\n\t\t\t\tkonflux.event.add(xhr.upload, 'progress', config.progress);\n\t\t\t}\n\n\t\t\tif ('error' in config && konflux.isType('function', config.error)) {\n\t\t\t\tkonflux.event.add(xhr, 'error', config.error);\n\t\t\t}\n\n\t\t\tif ('abort' in config && konflux.isType('function', config.abort)) {\n\t\t\t\tkonflux.event.add(xhr, 'abort', config.abort);\n\t\t\t}\n\n\t\t\txhr.open(type, url, async);\n\t\t\tif (headers) {\n\t\t\t\tfor (p in headers) {\n\t\t\t\t\txhr.setRequestHeader(p, headers[p]);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\txhr.send(data);\n\n\t\t\treturn xhr;\n\t\t}\n\n\t\t/**\n\t\t *  Handle the XMLHTTPRequest 'load'-event\n\t\t *  @name    xhrComplete\n\t\t *  @access  internal\n\t\t *  @param   XMLHTTPRequest  xhr\n\t\t *  @param   object          config\n\t\t *  @param   string          type\n\t\t *  @return  function handler\n\t\t */\n\t\tfunction xhrComplete(xhr, config, type) {\n\t\t\treturn function() {\n\t\t\t\tvar status = Math.floor(this.status * 0.01),\n\t\t\t\t\tstate = false;\n\t\t\t\t++stat[type];\n\n\t\t\t\tif (status === 2 && 'success' in config) {\n\t\t\t\t\tstate = 'success';\n\t\t\t\t\tconfig.success.apply(this, process(this));\n\t\t\t\t}\n\t\t\t\telse if (status >= 4 && 'error' in config) {\n\t\t\t\t\tstate = 'error';\n\t\t\t\t\tconfig.error.apply(this, process(this));\n\t\t\t\t}\n\n\t\t\t\tif ('complete' in config) {\n\t\t\t\t\tstate = !state ? 'complete' : state;\n\t\t\t\t\tconfig.complete.apply(this, [this.status, this.statusText, this]);\n\t\t\t\t}\n\n\t\t\t\tif (state) {\n\t\t\t\t\tkonflux.observer.notify('konflux.ajax.' + type.toLowerCase() + '.' + state, xhr, config);\n\t\t\t\t}\n\t\t\t};\n\t\t}\n\n\t\t/**\n\t\t *  Process an XHR response\n\t\t *  @name    process\n\t\t *  @type    function\n\t\t *  @access  internal\n\t\t *  @param   object XMLHttpRequest\n\t\t *  @return  array  response ([status, response text, XMLHttpRequest])\n\t\t */\n\t\tfunction process(xhr) {\n\t\t\tvar contentType = xhr.getResponseHeader('content-type'),\n\t\t\t\tresult = [\n\t\t\t\t\txhr.status,\n\t\t\t\t\txhr.responseText,\n\t\t\t\t\txhr\n\t\t\t\t],\n\t\t\t\tmatch;\n\n\t\t\tif (contentType && (match = contentType.match(/([^;]+)/))) {\n\t\t\t\tcontentType = match[1];\n\t\t\t}\n\n\t\t\tswitch (contentType) {\n\t\t\t\tcase 'application/json':\n\t\t\t\t\tresult[1] = JSON.parse(result[1]);\n\t\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\treturn result;\n\t\t}\n\n\t\t/**\n\t\t *  Prepare data to be send\n\t\t *  @name    prepareData\n\t\t *  @type    function\n\t\t *  @access  internal\n\t\t *  @param   mixed  data\n\t\t *  @param   string name\n\t\t *  @param   FormData (or KonfluxFormData) object\n\t\t *  @return  FormData (or KonfluxFormData) object\n\t\t */\n\t\tfunction prepareData(data, name, formData) {\n\t\t\tvar r = formData || (typeof FormData !== 'undefined' ? new FormData() : new KonfluxFormData()),\n\t\t\t\tp;\n\n\t\t\tif (typeof File !== 'undefined' && data instanceof File) {\n\t\t\t\tr.append(name, data, data.name);\n\t\t\t}\n\t\t\telse if (typeof Blob !== 'undefined' && data instanceof Blob) {\n\t\t\t\tr.append(name, data, 'blob');\n\t\t\t}\n\t\t\telse if (data instanceof Array || (FileList !== 'undefined' && data instanceof FileList)) {\n\t\t\t\tfor (p = 0; p < data.length; ++p) {\n\t\t\t\t\tprepareData(data[p], (name || '') + '[' + p + ']', r);\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if (konflux.isType('object', data)) {\n\t\t\t\tfor (p in data) {\n\t\t\t\t\tprepareData(data[p], name ? name + '[' + encodeURIComponent(p) + ']' : encodeURIComponent(p), r);\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tr.append(name, data);\n\t\t\t}\n\n\t\t\treturn r;\n\t\t}\n\n\t\t/**\n\t\t *  Obtain a handler function for given request, this handler is triggered by the konflux observer (konflux.ajax.<type>)\n\t\t *  @name    requestType\n\t\t *  @type    function\n\t\t *  @access  internal\n\t\t *  @param   string   type\n\t\t *  @return  function handler\n\t\t */\n\t\tfunction requestType(t) {\n\t\t\tvar handler = function(config) {\n\t\t\t\t\tswitch (konflux.type(config)) {\n\t\t\t\t\t\tcase 'object':\n\t\t\t\t\t\t\tconfig.type = t;\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t//  we assume an URL\n\t\t\t\t\t\tcase 'string':\n\t\t\t\t\t\t\tconfig = {\n\t\t\t\t\t\t\t\turl: config,\n\t\t\t\t\t\t\t\ttype: t\n\t\t\t\t\t\t\t};\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\tconfig = {\n\t\t\t\t\t\t\t\ttype: t\n\t\t\t\t\t\t\t};\n\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\n\t\t\t\t\treturn request(config);\n\t\t\t\t};\n\n\t\t\tstat[t.toUpperCase()] = 0;\n\t\t\tkonflux.observer.subscribe('konflux.ajax.' + t.toLowerCase(), function(ob, config) {\n\t\t\t\thandler(config);\n\t\t\t});\n\n\t\t\treturn handler;\n\t\t}\n\n\t\t/**\n\t\t *  Perform a request\n\t\t *  @name    request\n\t\t *  @type    method\n\t\t *  @access  public\n\t\t *  @param   object config\n\t\t *  @return  object XMLHttpRequest\n\t\t */\n\t\tajax.request = request;\n\n\t\t/**\n\t\t *  Perform a GET request\n\t\t *  @name    get\n\t\t *  @type    method\n\t\t *  @access  public\n\t\t *  @param   object config\n\t\t *  @return  object XMLHttpRequest\n\t\t */\n\t\tajax.get = requestType('GET');\n\n\t\t/**\n\t\t *  Perform a POST request\n\t\t *  @name    post\n\t\t *  @type    method\n\t\t *  @access  public\n\t\t *  @param   object config\n\t\t *  @return  object XMLHttpRequest\n\t\t */\n\t\tajax.post = requestType('POST');\n\n\t\t/**\n\t\t *  Perform a PUT request\n\t\t *  @name    put\n\t\t *  @type    method\n\t\t *  @access  public\n\t\t *  @param   object config\n\t\t *  @return  object XMLHttpRequest\n\t\t */\n\t\tajax.put = requestType('PUT');\n\n\t\t/**\n\t\t *  Perform a DELETE request\n\t\t *  @name    del\n\t\t *  @type    method\n\t\t *  @access  public\n\t\t *  @param   object config\n\t\t *  @return  object XMLHttpRequest\n\t\t */\n\t\tajax.del = requestType('DELETE');\n\n\t\t/**\n\t\t *  Perform a PURGE request (mostly supported by caching servers such as Varnish)\n\t\t *  @name    purge\n\t\t *  @type    method\n\t\t *  @access  public\n\t\t *  @param   object config\n\t\t *  @return  object XMLHttpRequest\n\t\t */\n\t\tajax.purge = requestType('PURGE');\n\t}\n\n\tkonflux.register('ajax', new KonfluxAjax());\n\n\t//END INCLUDE: core/ajax [2.07ms, 8.58KB]\n});\n"],"sourceRoot":"/source/"}